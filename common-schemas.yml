openapi: 3.0.0
info:
  title: Unified Language Contribution API (ULCA) documentation
  description: The document defines the common schema object used across all available APIs 
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
  version: 0.2.0

paths: {}
components:
  schemas:
    LanguagePair:
      type: object
      description: "language pair, make targetLanguage null to reuse the object to indicate single language"
      required:
        - sourceLanguage
      properties:
        sourceLanguageName:
          type: string
          description: human name associated with the language code
        sourceLanguage:
          type: string
          description: Indic language code, iso-639-1, iso 639-2
          enum:
          - en
          - hi
          - mr
          - ta
          - te
          - kn
          - gu
          - pa
          - bn
          - ml
          - as
          - brx
          - doi
          - ks
          - kok
          - mai
          - mni
          - ne
          - or
          - sd
          - si
          - ur
          - sat
          - lus
          - njz
          - pnr
          - kha
          - grt
          - sa
        targetLanguageName:
          type: string
          description: human name associated with the language code
        targetLanguage:
          type: string
          description: Indic language code, iso-639-1, iso 639-2
          enum:
          - en
          - hi
          - mr
          - ta
          - te
          - kn
          - gu
          - pa
          - bn
          - ml
          - as
          - brx
          - doi
          - ks
          - kok
          - mai
          - mni
          - ne
          - or
          - sd
          - si
          - ur
          - sat
          - lus
          - njz
          - pnr
          - kha
          - grt
          - sa
    
    LanguagePairs:
        type: array
        items:
          $ref: '#/components/schemas/LanguagePair'
          minItems: 1
    
    Domain:
        type: array
        description: "This attribute defines that `relevant business area`"
        example: ["news", "legal"]
        items:
          type: string
          enum:
          - general
          - news
          - education
          - legal
          - government-press-release
          - healthcare
          - agriculture
          - automobile
          - tourism
          - financial
          - movies
          - subtitles
          - sports
          - technology
          - lifestyle
          - entertainment    
    
    License:
      type: string
      description: license under which information is published.
      example: 'cc-by-4.0'
      enum:
      - cc-by-4.0
      - mit
      - gpl-3.0
      - bsd-3-clause
      - cc-by-nd-2.0
      - private-commerical
      - unknown-license
  
    Contributor:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 5
          type: string
          description: human name of the contributor
        oauthId:
          $ref: '#/components/schemas/OAuthIdentity'
        aboutMe:
          type: string
          description: describing the contributor

    Contributors:
        type: array
        items:
          $ref: '#/components/schemas/Contributor'
          minItems: 1

    Submitter:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 5
          type: string
          description: Name of the Submitter
        oauthId:
          $ref: '#/components/schemas/OAuthIdentity'
        aboutMe:
          type: string
          description: Describing the Submitter
        team:
          $ref: '#/components/schemas/Contributors'
          description: textual data in target language
      description: the schema of data file uploaded should adhere to this specified structure.
      
    DatasetType:
      type: string
      description: supported dataset type under language initiatives
      enum:
        - parallel-corpus
        - monolingual-corpus
        - asr-corpus
        - document-ocr-corpus

    OAuthIdentity:
      type: object
      properties:
        identifier:
          type: string
          description: system identification for the contributor
          format: uuidv4
        oauthId:
          type: string
          description: popular social network identifier, typically identifier returned after auth
        provider:
          type: string
          description: user authentication provider
          enum:
          - custom
          - github
          - facebook
          - instagram
          - google
          - yahoo
    
    Source:
      type: array
      description: various sources, url from where the information is collected.
      example: ["https://main.sci.gov.in"]
      items:
        type: string
        minItems: 1
        maxItems: 10
  
    CollectionMethod:
      type: array
      description: various collection methods user have used to create the dataset
      example: ["web-scrapping-machine-readable", "algorithm-auto-aligned"]
      items:
        type: string
        minItems: 1
        maxItems: 10
        enum:
        - web-scrapping-machine-readable
        - web-scrapping-ocr
        - manual-human-translated
        - algorithm-auto-aligned
        - algorithm-back-translated
        - human-validated
        - phone-recording
        - crowd-sourced

    DataPoint:
      required:
      - label
      - value
      type: object
      properties:
        label:
          type: string
          description: string value to show
        value:
          type: number
          description: numeric value of the data point
        internalLabel:
          type: string
          description: internal representation of the label

    ImageFormat:
      type: string
      description: image file format description
      example: "png"
      enum:
      - jpeg
      - bmp
      - png
      - tiff
    
    ImageTextType:
      type: string
      description: type of image on which text area is annotated.
      example: "scene-text"
      enum:
      - scene-text
      - typewriter-typed-text
      - computer-typed-text
      - handwritten-text          
    
    ImageDPI:
      type: string
      description: dpi of the image file
      example: "300_dpi"
      enum:
      - 300_dpi
      - 72_dpi
    
    AudioFormat:
      type: string
      description: audio format of the audio file
      example: "flac"
      enum:
      - wav
      - pcm
      - mp3
      - flac
    
    AudioChannel:
      type: string
      description: number of channel in the audio
      example: "stereo"
      enum:
      - mono
      - stereo
    
    AudioSampleRate:
      type: number
      description: sample rate of the audio file in kHz
      example: 44
     
    
    AudioBitsPerSample:
      type: string
      description: number of bits per sample
      example: "sixteen"
      enum:
      - sixteen
      - eight
          
    NumberOfSpeakers:
      type: number
      description: number of speakers in the recorded audio file
      minimum: 1
      example: 3

    Gender:
      type: string
      description: gender description
      enum:
        - male
        - female
        - transgender
        - non-specified
        - others

    ProcessStage:
      type: string
      description: various life-cycle stage of model when benchmarking
      enum:
        - submitted
        - benchmarked
        - published

    Timeline:
      type: object
      required:
        - stage
        - message
        - timestamp
        - status
      description: stage life-cycle of model before it gets published
      properties:
        stage:
          $ref: '#/components/schemas/ProcessStage'
        message:
          type: string
          description: human readable message attached for each stage change
        timestamp:
          type: string
          format: datetime
          description: timestamp of stage changes
        status:
          type: string
          description: status of each stage
          enum:
            - in-progress
            - status-with-errors
            - success
            - failed

    SearchParams:
      type: object
      properties:
        key:
          type: string
          enum:
            - languages
            - domain
            - collectionMethod
            - collectionSource
        params:
          type: object
          oneOf:
            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/Domain'
            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/LanguagePair'
            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/Source'
            - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/CollectionMethod'
  
        
