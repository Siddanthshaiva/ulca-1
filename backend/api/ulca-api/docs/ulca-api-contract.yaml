openapi: 3.0.0
info:
  title: Unified Language Contribution API (ULCA) documentation
  description: 'The ULCA API documentation defines a core set of interfaces that enables users and communities to contribute AI/ML datasets to build a large, open Indic languages resource ecosystem. The dataset contributions are primarily geared toward the area of NLP, ASR/TTS and OCR. The documentation proposes core set of interfaces where various AI based models can be hosted, referenced and benchmarked. The interfaces enables entire community to participate, collaborate and track key benchmark parameters.'
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
  version: 0.7.0
servers:
  - url: /ulca
paths:
  /v0.2/dataset/corpus/submit:
    post:
      tags:
        - 'dataset, core-api'
      summary: 'to starts submission of dataset creation process, the submission goes through stage life-cycle before it gets contributed to the ecosystem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetSubmitRequest'
        required: true
      responses:
        '200':
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
      security:
        - authToken: []
  /v0.2/dataset/corpus/update:
    post:
      tags:
        - 'dataset, core-api'
      summary: 'to retrieve the dataset'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetUpdateRequest'
        required: true
      responses:
        '200':
          description: On successful retrieval of dataset
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in retrieving dataset.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
      security:
        - authToken: []
  /v0.2/dataset/listByUserId:
    get:
      tags:
        - 'dataset, core-api'
      summary: 'to retrieve the dataset'
      parameters:
        - in: query
          name: userId
          schema:
            type: string
          description: userId
      responses:
        '200':
          description: On successful retrieval of dataset
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in retrieving dataset.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
      security:
        - authToken: []
        
  /v0.2/dataset/getByDatasetId:
    get:
      tags:
        - 'dataset, core-api'
      summary: 'to fetch the dataset on datasetId'
      parameters:
        - in: query
          name: datasetId
          schema:
            type: string
          description: datasetId
         
      responses:
        '200':
          description: On successful retrieval of dataset
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in retrieving dataset.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
      security:
        - authToken: []
        
  /v0.2/dataset/getBySubmitRefNumber:
    get:
      tags:
        - 'dataset, core-api'
      summary: 'to retrieve the dataset on submitRefNumber'
      parameters:
        - in: query
          name: submitRefNumber
          schema:
            type: string
          description: submitRefNumber that user gets while submitting dataset
         
      responses:
        '200':
          description: On successful retrieval of dataset
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in retrieving dataset.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
      security:
        - authToken: []
        
  /v0.2/dataset/submit-status:
    get:
      tags:
        - 'dataset, core-api'
      summary: 'check the status of submitted dataset request, user can track the status by using the provided acknowledgment identifier'
      parameters:
        - in: query
          name: submitRefNumber
          schema:
            type: string
          description: submitRefNumber
      responses:
        '200':
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
                
  /v0.2/dataset/download-report:
    get:
      tags:
        - 'dataset, core-api'
      summary: 'download dataset error report'
      parameters:
        - in: query
          name: submitRefNumber
          schema:
            type: string
          description: submitRefNumber
      responses:
        '200':
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'   
                
  /v0.2/corpus/search/listByUserId:
    get:
      tags:
        - 'dataset, core-api'
      summary: 'to fetch list of searches done by userId'
      parameters:
        - in: query
          name: userId
          schema:
            type: string
          description: userId
      responses:
        '200':
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'  
              
                
  /v0.2/corpus/search/status:
    get:
      tags:
        - 'dataset, core-api'
      summary: 'to fetch search status by searchRefNumber'
      parameters:
        - in: query
          name: searchRefNum
          schema:
            type: string
          description: searchRefNum
      responses:
        '200':
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpSuccessResponse'
        '400':
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
                
  
 
components:
  schemas:
    DatasetSubmitRequest:
      type: object
      description: request to submit the dataset
      required:
        - type
        - datasetName
        - url
        - storageServiceName
      properties:
        type:
          description: one of the defined possible values
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/dataset-schema.yml#/components/schemas/DatasetType'
        datasetName: 
          type: string
          description: dataset name
        url:
          type: string
          description: public url to download dataset file
        storageServiceName:
          type: string
          enum: [AWS S3, GOOGLE CLOUD STORAGE, AZURE BLOBS]
    
    DatasetSubmitResponse:
      type: object
      properties:
        submitRefNumber:
          type: string
          description: 'auto generated identifier to identify the internal representation, user can check the status of dataset stage using this acknowlegment identifier'
          format: uuidv4
        datasetId:
          type: string
          description: 'unique identifier for dataset'
          format: uuidv4
        timestamp:
          type: string
          format: datetime
          description: dataset submission timestamp
      description: 'uploaded dataset goes through series of validation checks, automated or human-in-the-loop before it gets listed'
      
    DatasetUpdateRequest:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/dataset-schema.yml#/components/schemas/Dataset'
        - type: object
      type: object
      description: request to submit the dataset
      required:
        - type
      properties:
        type:
          description: one of the defined possible values
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/dataset-schema.yml#/components/schemas/DatasetType'
    
    DatasetUpdateResponse:
      type: object
      properties:
        acknowlegmentId:
          type: string
          description: 'auto generated identifier to identify the internal representation, user can check the status of dataset stage using this acknowlegment identifier'
          format: uuidv4
        datasetId:
          type: string
          description: 'unique identifier for dataset'
          format: uuidv4
        timestamp:
          type: string
          format: datetime
          description: dataset submission timestamp
      description: 'uploaded dataset goes through series of validation checks, automated or human-in-the-loop before it gets listed'
    
    DatasetListByUserIdResponse:
      type: object
      properties:
        submitRefNumber:
          type: string
          description: 'auto generated identifier to identify the internal representation, user can check the status of dataset stage using this acknowlegment identifier'
          format: uuidv4
        datasetName:
          type: string
          description: 'Dataset Name'
          
        submittedOn:
          type: string
          format: datetime
          description: dataset submission timestamp
        status:
          type: string
          description: 'Dataset ingestion status'
      description: 'list the dataset submitted by userId' 
      
    
      
    DatasetSearchRequest:
      required:
        - criterions
        - groupby
        - type
      type: object
      properties:
        type:
          description: one of the defined possible values
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/dataset-schema.yml#/components/schemas/DatasetType'
        criterions:
          type: array
          description: comma separted system defined tags
          items:
            $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/dataset-schema.yml#/components/schemas/SearchParams'
        groupby:
          type: array
          description: groupby based upon the entity
          items:
            $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/dataset-schema.yml#/components/schemas/SearchParams'
            minItems: 1
        starttime:
          type: string
          description: start of timestamp
          format: datetime
        endtime:
          type: string
          description: end of timestamp
          format: datetime
    DatasetSearchResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          description: collection of value and label
          items:
            $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/DataPoint'
    
    
    SearchByuserIdResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          description: collection of value and label
          items:
            $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/Dataset'
            
    DatasetStatusRequest:
      type: object
      required:
        - acknowlegmentId
      properties:
        acknowlegmentId:
          type: string
          description: provided acknowledgment identifier at the time of dataset submission
    DatasetDownloadReportResponse:
      type: object
      required:
        - fileUlr
      properties:
        fileUlr:
          type: string
          description: provided acknowledgment identifier at the time of dataset submission
    DatasetStatusResponse:
      type: object
      required:
        - acknowledgmentId
        - status
        - progress
      properties:
        acknowlegmentId:
          type: string
          description: user provided identifier
        dataset:
          type: object
          description: uploaded dataset and its system representation
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/dataset-schema.yml#/components/schemas/Dataset'
        status:
          type: string
          description: status of each stage
          enum:
            - in-progress
            - status-with-errors
            - success
            - failed
        progress:
          type: object
          description: detailed for the dataset as it can be longer running operation
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/dataset-schema.yml#/components/schemas/DatasetProgressInformation'
    
    
    
    HttpSuccessResponse:
      type: object
      properties:
        ok:
          type: boolean
          description: request successful indicator.
        why:
          type: string
          description: Response message.
        status:
          type: object
          description: status code as returned
          oneOf:
            - $ref: '#/components/schemas/StatusCode'
        data:
          type: object
          description: response object based upon the submitted request
          oneOf:
            
            - $ref: '#/components/schemas/DatasetSubmitResponse'
            - $ref: '#/components/schemas/DatasetUpdateResponse'
            - $ref: '#/components/schemas/DatasetStatusResponse'
            - $ref: '#/components/schemas/DatasetSearchResponse'
            - $ref: '#/components/schemas/DatasetListByUserIdResponse'
            - $ref: '#/components/schemas/DatasetDownloadReportResponse'
            
    
    HttpErrorResponse:
      type: object
      properties:
        ok:
          type: boolean
          description: request successful indicator.
        why:
          type: string
          description: Response message.
        status:
          type: object
          description: status code as returned
          oneOf:
            - $ref: '#/components/schemas/StatusCode'
    
    StatusCode:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: status code as encountered in the processing life-cycle
          enum:
            - insufficent-dataset-rows-provided
            - searched-query-not-supported
            - missing-mandatory-parameters
            - authorization-failed
            - schema-validation-failed
            - object-validation-failed
            - benchmark-failed
            - invalid-callback-url
        message:
          type: string
          description: human understandable format
    
  securitySchemes:
    authToken:
      type: apiKey
      description: token issued by authenticating the user
      name: auth-token
      in: header