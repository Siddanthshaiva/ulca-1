openapi: 3.0.0
info:
  title: ULCA - dataset schema
  description: >-
    Dataset and it supporting schema
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
  version: 0.5.0
servers:
  - url: /ulca
paths: {}
components:
  schemas:
    DatasetDirectory:
      type: object
      required: 
        - data
        - params
      description: The object defines the physical structure of the uploaded dataset file. The dataset data and its respective parameters has to be present in an individual directory/folder. The dataset data should have name 'data.json' or 'data.csv', similarly the associated parameters should have name 'params.json' or 'params.csv'. Dataset data file should adhere to 'dataSchema' described in the properties, similarly the parameter of the dataset should adhere to 'paramSchema'. Non compliant will result in rejection of the submission.
      properties:
        data:
          type: object
          default: data.json
          $ref: '#/components/schemas/DatasetFile'
          description: name and file attributes of data file
        dataSchema:
          type: object
          $ref: '#/components/schemas/DatasetDataRowSchema'
        params:
          type: object
          default: params.json
          $ref: '#/components/schemas/DatasetFile'
          description: name and file attributes of params file
        paramSchema:
          type: object
          $ref: '#/components/schemas/DatasetParamsSchema'
    
    DatasetDirectories:
      type: object
      description: The object represents a compressed file that can contains multiple 'DatasetDirectory' object.
      properties:
        datasetFiles:
          type: array
          items:
            $ref: '#/components/schemas/DatasetDirectory'
            minItems: 1
  
    DatasetParamsSchema:
      type: object
      description: the dataset params.json/.csv file should follow this schema
      properties:
        params: 
          type: object
          oneOf:
            - $ref: '#/components/schemas/ParallelDatasetParamsSchema'
            - $ref: '#/components/schemas/MonolingualParamsSchema'
            - $ref: '#/components/schemas/ASRParamsSchema'
            - $ref: '#/components/schemas/DocumentOCRParamsSchema'
    
    DatasetDataRowSchema:
      type: object
      description: the dataset data.json/.csv file should follow this schema
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ParallelDatasetRowSchema'
            - $ref: '#/components/schemas/MonolingualRowSchema'
            - $ref: '#/components/schemas/ASRRowSchema'
            - $ref: '#/components/schemas/DocumentOCRRowSchema'
    
    DatasetCommonParamsSchema:
      type: object
      description: common parameters or attributes of dataset that is primarily same across the supported dataset.
      required:
        - languages
        - collectionSource
        - domain
        - collectionMethod
        - license
        - submitter
        - contributors
      properties:
        version:
          type: string
          default: 1.0
          description: params schema version
        languages:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/LanguagePair'
        collectionSource:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/Source'
        domain:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/Domain'
        collectionMethod:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/CollectionMethod'
        license:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/License'
        submitter:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/Contributor'
        contributors:
          type: array
          description: users' or teams' who are part of the dataset curation exercise.
          items:
            $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/Contributor'

    ParallelDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/DatasetCommonParamsSchema'
        - type: object
      type: object
      properties:
        targetValidated:
          $ref: '#/components/schemas/TargetTextValidated'
        alignmentMethod:
          $ref: '#/components/schemas/TextAlignmentMethod'

    ParallelDatasetRowSchema:
      required:
        - sourceText
        - targetText
      type: object
      properties:
        sourceText:
          type: string
          description: textual data in source language
        targetText:
          type: string
          description: textual data in target language
        validatedTargetText:
          type: string
          description: textual data after annotator has validate the target sentence
        alignmentScore:
          maximum: 1
          minimum: 0.5
          type: number
          description: algorithm score secured for the sentence pair
        
      description: the schema of data file uploaded should adhere to this specified structure.
  
    MonolingualParamsSchema:
      allOf:
        - $ref: '#/components/schemas/DatasetCommonParamsSchema'
        - type: object
      type: object
    
    MonolingualRowSchema:
      required:
        - text
      type: object
      description: the schema defines the column/attribute name of the data file uploaded.
      properties:
        text:
          type: string
          description: textual data in source language
  
    ASRParamsSchema:
      allOf:
        - $ref: '#/components/schemas/DatasetCommonParamsSchema'
        - type: object
      type: object
      properties:
        format:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/AudioFormat'
        channel:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/AudioChannel'
        samplingRate:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/AudioSampleRate'
        bitsPerSample:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/AudioBitsPerSample'
        numberOfSpeakers:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/NumberOfSpeakers'
        numberOfHoursPerGender:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/NumberOfHoursPerGenders'
    
    ASRRowSchema:
      required:
        - audioFilename
        - text
      type: object
      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.
      properties:
        audioFilename:
          type: string
          description: filename of the audio file
        text:
          type: string
          description: textual output of the audio
        snr:
          type: string
          description: SNR information
  
    DocumentOCRParamsSchema:
      allOf:
        - $ref: '#/components/schemas/DatasetCommonParamsSchema'
        - type: object
      required:
        - ocrtype
        - format
        - dpi
        - imageTextType
        - schema
      type: object
      properties:
        ocrtype:
          $ref: '#/components/schemas/DocumentOCRDatasetType'
        format:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/ImageFormat'
        dpi:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/ImageDPI'
        imageTextType:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/ImageTextType'

    DocumentOCRRowSchema:
      required:
        - imageFilename
        - boundingBox
      type: object
      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.
      properties:
        imageFilename:
          type: string
          description: filename of the image file
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
        layoutClass:
          type: string
          enum:
            - paragraph
            - line
            - word
            - table
            - table-cell
            - header
            - footer
            - subscript
            - superscript
            - inline-image
            - background-image
            - watermark
            - signature
            - list-bullets
            - caption
        groundTruth:
          type: string
          description: text data present in boundingbox
    
    DatasetFile:
      type: object
      description: represent the physical file attributes
      required:
        - filename
        - fileType
      properties:
        filename:
          type: string
          description: name of the file
          enum:
            - data
            - params
        fileType:
          type: string
          description: file format
          enum:
            - json
            - csv
    
    Dataset:
      required:
        - description
        - datasetFileId
      type: object
      description: describes the dataset schema
      properties:
        datasetId:
          type: string
          description: unique identification of the dataset. This will be auto-generated value once the submitted dataset is validated by the system
          format: uuid4
        count:
          minimum: 100
          type: number
          description: actual number of unique records present under a dataset. The count can/will vary from the original submitted dataset because of validation stage.
        description:
          maxLength: 200
          minLength: 50
          type: string
          description: describes the purpose and usage of the dataset so that other user can get benefit out of it.
          example: contribution from team Anuvaad for government press release domain
        datasetFileId:
          $ref: '#/components/schemas/DatasetFileIdentifier'
        submittedOn:
          type: string
          description: timestamp when dataset is uploaded
          format: datetime
        validatedOn:
          type: string
          description: timestamp when dataset is validated
          format: datetime
        publishedOn:
          type: string
          description: timestamp when dataset got listed
          format: datetime
    
    DatasetFileIdentifier:
      type: object
      required:
        - fileId
        - datasetFormatType
      description: the identifier object retuned when compressed dataset file is uploaded. https://raw.githubusercontent.com/tus/tus-resumable-upload-protocol/master/OpenAPI/openapi3.yaml
      properties:
        fileId:
          type: string
          format: uuidv4
          description: upload identifier returned by the file upload service
        datasetFormatType:
          type: string
          enum:
            - json
            - csv
        timestamp:
          type: string
          format: datetime
          description: upload completed timestamp
        format:
          type: string
          description: supported file compression format
          enum:
            - tar_gz
            - zip
  
    TargetTextValidated:
      type: object
      properties:
        value:
          type: boolean
          default: false
    
    TextAlignmentMethod:
      type: object
      properties:
        value:
          type: string
          enum:
          - LABSE
          - LASER
          - FAISS
    
    BoundingBox:
      type: object
      properties:
        vertices:
          minLength: 4
          type: array
          items:
            $ref: '#/components/schemas/Vertex'
      description: array of vertex with clockwise coordinate arrangement
    
    Vertex:
      type: object
      properties:
        x:
          type: number
          description: x-coordinate
        y:
          type: number
          description: y-coordinate
    
    DocumentOCRDatasetType:
      type: object
      properties:
        value:
          type: string
          description: various option of ocr type
          enum:
          - layout-dataset-type
          - ocr-dataset-type
          - character-dataset-type
          
    DatasetType:
      type: string
      description: supported dataset type under language initiatives
      enum:
        - parallel-corpus
        - monolingual-corpus
        - asr-corpus
        - document-ocr-corpus

    DatasetProgressInformation:
      type: object
      description: informs the progress for every submitted records in the dataset.
      properties:
        totalRecordCount:
          type: integer
          description: total number of records count submitted
        validaatedRecordCount:
          type: integer
          description: how many records have validated
        failedRecordCount:
          type: integer
          description: how many records failed the valdiation
        validationReportId:
          type: string
          description: download why the records failed the validation
          format: uuid4

    