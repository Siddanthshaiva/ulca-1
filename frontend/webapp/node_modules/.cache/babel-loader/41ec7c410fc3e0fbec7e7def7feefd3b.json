{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/SearchDownloadRecords.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Button, TextField, MenuItem, Checkbox, FormControlLabel, Divider } from '@material-ui/core';\nimport SearchResult from \"./SearchResult\";\nimport { withStyles } from '@material-ui/core/styles';\nimport DatasetStyle from '../../../styles/Dataset';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport SearchAndDownload from '../../../../redux/actions/api/DataSet/DatasetSearch/SearchAndDownload';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport { useState, useEffect } from 'react';\nimport DownloadDatasetRecords from \"./DownloadDatasetRecords\";\nimport RequestNumberCreation from \"./RequestNumberCreation\";\nimport { useHistory, useParams } from 'react-router';\nimport Autocomplete from '../../../components/common/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchAndDownloadRecords = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const url = UrlConfig.dataset;\n  const param = useParams();\n  const history = useHistory();\n  const [languagePair, setLanguagePair] = useState({\n    source: '',\n    target: []\n  });\n  const [filterBy, setFilterBy] = useState({\n    domain: [],\n    source: [],\n    collectionMethod: []\n  });\n  const [datasetType, setDatasetType] = useState({\n    pd: true\n  }); // const detailedReport = useSelector((state) => state.mySearchReport);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const userObj = new SearchAndDownload(); //  detailedReport.responseData.length === 0 && \n\n    dispatch(APITransport(userObj));\n  }, []);\n\n  const handleCheckboxChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleLanguagePairChange = (value, property) => {\n    setLanguagePair({ ...languagePair,\n      [property]: value\n    });\n    if (property === 'source') setSrcError(false);else setTgtError(false);\n  };\n\n  const handleFilterByChange = (value, property) => {\n    setFilterBy({ ...filterBy,\n      [property]: value\n    });\n  };\n\n  const sourceLanguages = [{\n    value: 'Eng',\n    label: 'English'\n  }, {\n    value: 'Hin',\n    label: 'Hindi'\n  }, {\n    value: 'Ben',\n    label: 'Bengali'\n  }, {\n    value: 'Mar',\n    label: 'Marathi'\n  }];\n  const [state, setState] = useState({\n    checkedA: false,\n    checkedB: false\n  });\n  const [srcError, setSrcError] = useState(false);\n  const [tgtError, setTgtError] = useState(false);\n\n  const renderPage = () => {\n    const {\n      params\n    } = param;\n\n    switch (params) {\n      case 'inprogress':\n        return /*#__PURE__*/_jsxDEV(RequestNumberCreation, {\n          reqno: \"0005870\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 24\n        }, this);\n\n      case 'published':\n        return /*#__PURE__*/_jsxDEV(DownloadDatasetRecords, {\n          datasetType: \"Parallel\",\n          sentencePair: \"9.8 Million\",\n          datasetsContributed: \"29\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(SearchResult, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  const handleDatasetClick = property => {\n    clearfilter();\n    setDatasetType({\n      [property]: true\n    });\n    setSrcError(false);\n    setTgtError(false);\n  };\n\n  const getLabel = () => {\n    if (datasetType.pd) return \"Target Language *\";else if (datasetType.md || datasetType.atd) return \"Select Language *\";else return \"Select Script *\";\n  };\n\n  const clearfilter = () => {\n    setFilterBy({\n      domain: [],\n      source: [],\n      collectionMethod: []\n    });\n    setLanguagePair({\n      source: \"\",\n      target: []\n    });\n  };\n\n  const handleSubmitBtn = () => {\n    if (datasetType.pd) {\n      if (languagePair.source && languagePair.target.length) history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/inprogress`);else if (!languagePair.source && !languagePair.target.length) {\n        setSrcError(true);\n        setTgtError(true);\n      } else if (!languagePair.source) setSrcError(true);else if (!languagePair.target.length) setTgtError(true);\n    } else {\n      if (!languagePair.target.length) setTgtError(true);else history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/inprogress`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.searchDivStyle,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        lg: 4,\n        xl: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.breadcrum,\n          children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n            links: [url],\n            activeLink: \"Search & Download Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Select Dataset Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonDiv,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: datasetType.pd ? \"contained\" : \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDatasetClick('pd'),\n            children: \"Parallel Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: datasetType.md ? \"contained\" : \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDatasetClick('md'),\n            children: \"Monolingual Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: datasetType.atd ? \"contained\" : \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDatasetClick('atd'),\n            children: \"ASR/TTS Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: datasetType.od ? \"contained\" : \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDatasetClick('od'),\n            children: \"OCR Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Select Language Pair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subHeader,\n          children: [datasetType.pd && /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.subHeader,\n            fullWidth: true,\n            error: srcError,\n            helperText: srcError && \"Source language is mandatory\",\n            select: true,\n            id: \"select-source-language\",\n            label: \"Source Language *\",\n            value: languagePair.source,\n            onChange: event => handleLanguagePairChange(event.target.value, 'source'),\n            children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"language-target\",\n            options: sourceLanguages,\n            filter: \"target\",\n            value: languagePair.target,\n            handleOnChange: handleLanguagePairChange,\n            label: getLabel(),\n            error: tgtError,\n            helperText: \"This field is mandatory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Filter by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subHeader,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.subHeader,\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"domain\",\n                options: sourceLanguages,\n                filter: \"domain\",\n                value: filterBy.domain,\n                handleOnChange: handleFilterByChange,\n                label: \"Select Domain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"source\",\n                options: sourceLanguages,\n                filter: \"source\",\n                value: filterBy.source,\n                handleOnChange: handleFilterByChange,\n                label: \"Select Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"collection-method\",\n            options: sourceLanguages,\n            filter: \"collectionMethod\",\n            value: filterBy.collectionMethod,\n            handleOnChange: handleFilterByChange,\n            label: \"Select Collection Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: state.checkedA,\n            onChange: handleCheckboxChange,\n            name: \"checkedA\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this),\n          label: \"Vetted by multiple annotators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: state.checkedB,\n            onChange: handleCheckboxChange,\n            name: \"checkedB\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this),\n          label: \"Source sentences manually translated by multiple translators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.clearNSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: clearfilter,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSubmitBtn,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        sm: 1,\n        md: 1,\n        lg: 1,\n        xl: 1,\n        children: /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 7,\n        lg: 7,\n        xl: 7,\n        children: renderPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchAndDownloadRecords, \"Acr46Rj+ebDrt8z3HGuqqdukiGE=\", false, function () {\n  return [useParams, useHistory, useDispatch];\n});\n\n_c = SearchAndDownloadRecords;\nexport default withStyles(DatasetStyle)(SearchAndDownloadRecords);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAndDownloadRecords\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/SearchDownloadRecords.jsx"],"names":["Grid","Paper","Typography","Button","TextField","MenuItem","Checkbox","FormControlLabel","Divider","SearchResult","withStyles","DatasetStyle","BreadCrum","UrlConfig","SearchAndDownload","useDispatch","useSelector","APITransport","useState","useEffect","DownloadDatasetRecords","RequestNumberCreation","useHistory","useParams","Autocomplete","SearchAndDownloadRecords","props","classes","url","dataset","param","history","languagePair","setLanguagePair","source","target","filterBy","setFilterBy","domain","collectionMethod","datasetType","setDatasetType","pd","dispatch","userObj","handleCheckboxChange","event","setState","state","name","checked","handleLanguagePairChange","value","property","setSrcError","setTgtError","handleFilterByChange","sourceLanguages","label","checkedA","checkedB","srcError","tgtError","renderPage","params","handleDatasetClick","clearfilter","getLabel","md","atd","handleSubmitBtn","length","push","process","env","PUBLIC_URL","searchDivStyle","breadcrum","subHeader","buttonDiv","innerButton","od","map","option","clearNSubmit"],"mappings":"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","sourcesContent":["import {\n    Grid,\n    Paper,\n    Typography,\n    Button,\n    TextField,\n    MenuItem,\n    Checkbox,\n    FormControlLabel,\n    Divider\n} from '@material-ui/core';\nimport SearchResult from \"./SearchResult\";\nimport { withStyles } from '@material-ui/core/styles';\nimport DatasetStyle from '../../../styles/Dataset';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport SearchAndDownload from '../../../../redux/actions/api/DataSet/DatasetSearch/SearchAndDownload';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport { useState, useEffect } from 'react';\nimport DownloadDatasetRecords from \"./DownloadDatasetRecords\";\nimport RequestNumberCreation from \"./RequestNumberCreation\";\nimport { useHistory, useParams } from 'react-router';\nimport Autocomplete from '../../../components/common/Autocomplete';\n\nconst SearchAndDownloadRecords = (props) => {\n    const { classes } = props;\n    const url = UrlConfig.dataset;\n    const param = useParams();\n    const history = useHistory();\n    const [languagePair, setLanguagePair] = useState({\n        source: '',\n        target: []\n    });\n    const [filterBy, setFilterBy] = useState({\n        domain: [],\n        source: [],\n        collectionMethod: []\n    });\n\n    const [datasetType, setDatasetType] = useState({\n        pd: true\n    })\n\n   // const detailedReport = useSelector((state) => state.mySearchReport);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const userObj = new SearchAndDownload();\n      //  detailedReport.responseData.length === 0 && \n        dispatch(APITransport(userObj));\n    }, []);\n\n    const handleCheckboxChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n    const handleLanguagePairChange = (value, property) => {\n        setLanguagePair({ ...languagePair, [property]: value });\n\n        if (property === 'source')\n            setSrcError(false)\n        else\n            setTgtError(false)\n    };\n    const handleFilterByChange = (value, property) => {\n        setFilterBy({ ...filterBy, [property]: value });\n    };\n    const sourceLanguages = [\n        {\n            value: 'Eng',\n            label: 'English',\n        },\n        {\n            value: 'Hin',\n            label: 'Hindi',\n        },\n        {\n            value: 'Ben',\n            label: 'Bengali',\n        },\n        {\n            value: 'Mar',\n            label: 'Marathi',\n        },\n    ];\n    const [state, setState] = useState({\n        checkedA: false,\n        checkedB: false,\n    });\n    const [srcError, setSrcError] = useState(false)\n    const [tgtError, setTgtError] = useState(false)\n\n    const renderPage = () => {\n        const { params } = param\n        switch (params) {\n            case 'inprogress':\n                return <RequestNumberCreation reqno={\"0005870\"} />\n            case 'published':\n                return <DownloadDatasetRecords datasetType={\"Parallel\"} sentencePair={\"9.8 Million\"} datasetsContributed={\"29\"} />\n            default:\n                return <SearchResult />\n        }\n    }\n\n    const handleDatasetClick = (property) => {\n        clearfilter()\n        setDatasetType({ [property]: true })\n        setSrcError(false)\n        setTgtError(false)\n    }\n    const getLabel = () => {\n        if (datasetType.pd)\n            return \"Target Language *\"\n        else if (datasetType.md || datasetType.atd)\n            return \"Select Language *\"\n        else\n            return \"Select Script *\"\n    }\n    const clearfilter = () => {\n        setFilterBy({\n            domain: [],\n            source: [],\n            collectionMethod: []\n        });\n        setLanguagePair({\n            source: \"\",\n            target: []\n        });\n    }\n    const handleSubmitBtn = () => {\n        if (datasetType.pd) {\n            if (languagePair.source && languagePair.target.length)\n                history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/inprogress`)\n            else if (!languagePair.source && !languagePair.target.length) {\n                setSrcError(true)\n                setTgtError(true)\n            }\n\n            else if (!languagePair.source)\n                setSrcError(true)\n            else if (!languagePair.target.length)\n                setTgtError(true)\n        }\n        else {\n            if (!languagePair.target.length)\n                setTgtError(true)\n            else\n                history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/inprogress`)\n        }\n\n\n    }\n    return (\n        <div className={classes.searchDivStyle}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\n                    <div className={classes.breadcrum}>\n                        <BreadCrum links={[url]} activeLink=\"Search & Download Records\" />\n                    </div>\n                    <Typography className={classes.subHeader} variant=\"h6\">Select Dataset Type</Typography>\n\n                    <div className={classes.buttonDiv}>\n                        <Button className={classes.innerButton} variant={datasetType.pd ? \"contained\" : \"outlined\"}\n                            color=\"primary\"\n                            onClick={() => handleDatasetClick('pd')}\n                        >\n                            Parallel Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant={datasetType.md ? \"contained\" : \"outlined\"}\n                            color=\"primary\"\n                            onClick={() => handleDatasetClick('md')}\n                        >\n                            Monolingual Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant={datasetType.atd ? \"contained\" : \"outlined\"}\n                            color=\"primary\"\n                            onClick={() => handleDatasetClick('atd')}\n                        >\n                            ASR/TTS Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant={datasetType.od ? \"contained\" : \"outlined\"}\n                            color=\"primary\"\n                            onClick={() => handleDatasetClick('od')}\n                        >\n                            OCR Dataset\n                    </Button>\n                    </div>\n\n                    <Typography className={classes.subHeader} variant=\"h6\">Select Language Pair</Typography>\n                    <div className={classes.subHeader}>\n                        {datasetType.pd &&\n                            <TextField className={classes.subHeader}\n                                fullWidth\n                                error={srcError}\n                                helperText={srcError && \"Source language is mandatory\"}\n                                select\n                                id=\"select-source-language\"\n                                label=\"Source Language *\"\n                                value={languagePair.source}\n                                onChange={(event) => handleLanguagePairChange(event.target.value, 'source')}\n                            >\n                                {sourceLanguages.map((option) => (\n                                    <MenuItem key={option.value} value={option.value}>\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </TextField>}\n\n                        <Autocomplete\n                            id=\"language-target\"\n                            options={sourceLanguages}\n                            filter='target'\n                            value={languagePair.target}\n                            handleOnChange={handleLanguagePairChange}\n                            label={getLabel()}\n                            error={tgtError}\n                            helperText=\"This field is mandatory\"\n                        />\n                    </div>\n                    <Typography className={classes.subHeader} variant=\"h6\">Filter by</Typography>\n                    <div className={classes.subHeader}>\n                        <Grid container spacing={2}>\n                            <Grid className={classes.subHeader} item xs={6}>\n                                <Autocomplete\n                                    id=\"domain\"\n                                    options={sourceLanguages}\n                                    filter=\"domain\"\n                                    value={filterBy.domain}\n                                    handleOnChange={handleFilterByChange}\n                                    label=\"Select Domain\"\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Autocomplete\n                                    id=\"source\"\n                                    options={sourceLanguages}\n                                    filter=\"source\"\n                                    value={filterBy.source}\n                                    handleOnChange={handleFilterByChange}\n                                    label=\"Select Source\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Autocomplete\n                            id=\"collection-method\"\n                            options={sourceLanguages}\n                            filter=\"collectionMethod\"\n                            value={filterBy.collectionMethod}\n                            handleOnChange={handleFilterByChange}\n                            label=\"Select Collection Method\"\n                        />\n                    </div>\n\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={state.checkedA}\n                                onChange={handleCheckboxChange}\n                                name=\"checkedA\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Vetted by multiple annotators\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={state.checkedB}\n                                onChange={handleCheckboxChange}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Source sentences manually translated by multiple translators\"\n                    />\n                    <div className={classes.clearNSubmit}>\n                        <Button color=\"primary\" onClick={clearfilter}>\n                            Clear\n                    </Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmitBtn}>\n                            Submit\n                    </Button>\n                    </div>\n                </Grid>\n                <Grid item xs={1} sm={1} md={1} lg={1} xl={1}>\n                    <Divider orientation=\"vertical\" />\n                </Grid>\n                <Grid item xs={12} sm={12} md={7} lg={7} xl={7}>\n                    {renderPage()}\n                    {/* <SearchResult/> */}\n                    {/* <RequestNumberCreation reqno={\"0005870\"} /> */}\n                    {/* <DownloadDatasetRecords datasetType={\"Parallel\"} sentencePair={\"9.8 Million\"} datasetsContributed={\"29\"}/> */}\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n\n\n}\n\nexport default withStyles(DatasetStyle)(SearchAndDownloadRecords);"]},"metadata":{},"sourceType":"module"}