{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/components/common/Slider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = useState({\n    isPaneOpen: false,\n    isPaneOpenLeft: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"69YwHrR7ppLf4ZAWZKkSjbrGUq4=\");\n\n_c = App;\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 8\n}, this), document.getElementById(\"app\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/components/common/Slider.jsx"],"names":["React","Component","useState","render","SlidingPane","App","state","setState","isPaneOpen","isPaneOpenLeft","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAO,gDAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,UAAU,EAAE,KADqB;AAEjCC,IAAAA,cAAc,EAAE;AAFiB,GAAD,CAAlC;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA3CD;;GAAMJ,G;;KAAAA,G;AA6CNF,MAAM,eAAC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAD,EAAUO,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAV,CAAN","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\n\nconst App = () => {\n  const [state, setState] = useState({\n    isPaneOpen: false,\n    isPaneOpenLeft: false,\n  });\n\n  return (\n    <div>\n      {/* <button onClick={() => setState({ isPaneOpen: true })}>\n        Click me to open right pane!\n      </button>\n      <div style={{ marginTop: \"32px\" }}>\n        <button onClick={() => setState({ isPaneOpenLeft: true })}>\n          Click me to open left pane with 20% width!\n        </button>\n      </div>\n      <SlidingPane\n        className=\"some-custom-class\"\n        overlayClassName=\"some-custom-overlay-class\"\n        isOpen={state.isPaneOpen}\n        title=\"Hey, it is optional pane title.  I can be React component too.\"\n        subtitle=\"Optional subtitle.\"\n        onRequestClose={() => {\n          // triggered on \"<\" on left top click or on outside click\n          setState({ isPaneOpen: false });\n        }}\n      >\n        <div>And I am pane content. BTW, what rocks?</div>\n        <br />\n        <img src=\"img.png\" />\n      </SlidingPane>\n      <SlidingPane\n        closeIcon={<div>Some div containing custom close icon.</div>}\n        isOpen={state.isPaneOpenLeft}\n        title=\"Hey, it is optional pane title.  I can be React component too.\"\n        from=\"left\"\n        width=\"200px\"\n        onRequestClose={() => setState({ isPaneOpenLeft: false })}\n      >\n        <div>And I am pane content on left.</div>\n      </SlidingPane> */}\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"app\"));"]},"metadata":{},"sourceType":"module"}