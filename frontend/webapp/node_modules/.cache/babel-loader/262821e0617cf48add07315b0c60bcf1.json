{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/ContributionList.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, Typography, Link, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../../redux/actions/api/DataSet/MyContribution\";\nimport Dialog from \"../../../components/common/Dialog\";\nimport { Cached, SaveAlt } from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributionList = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const myContributionReport = useSelector(state => state.myContributionReport);\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"Delete\");\n  const [title, setTilte] = useState(\"Do you want to delete\");\n  useEffect(() => {\n    myContributionReport.responseData.length == 0 && MyContributionListApi();\n  }, []);\n\n  const MyContributionListApi = () => {\n    const userObj = new MyContributionList(\"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n    dispatch(APITransport(userObj));\n  };\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MuiTableCell: {\n        head: {\n          backgroundColor: \"#c7c6c68a !important\",\n          cursor: 'default'\n        }\n      },\n      MuiPaper: {\n        root: {\n          boxShadow: 'none !important',\n          borderRadius: 0,\n          border: \"1px solid rgb(224 224 224)\"\n        }\n      },\n      MUIDataTableToolbar: {\n        root: {\n          display: \"none\"\n        }\n      },\n      MuiTableRow: {\n        root: {\n          cursor: 'pointer'\n        }\n      }\n    }\n  });\n\n  const fetchHeaderButton = () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      size: \"medium\",\n      variant: \"outlined\",\n      className: classes.ButtonRefresh,\n      onClick: () => MyContributionListApi(),\n      children: [/*#__PURE__*/_jsxDEV(Cached, {\n        className: classes.iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 161\n      }, this), \"Refresh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this);\n  };\n\n  const renderStatus = (id, value) => {\n    if (value === \"Inprogress\") {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.link,\n        onClick: () => {\n          history.push(`${process.env.PUBLIC_URL}/dataset-status/${id}}`);\n        },\n        children: \" In-progress \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: \"Published \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }, this);\n    }\n  };\n\n  const renderAction = (id, value) => {\n    if (value === \"Inprogress\") {} else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.span,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.link,\n          onClick: () => {\n            history.push(`${process.env.PUBLIC_URL}/submit-dataset/upload`);\n          },\n          children: \" Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.link,\n          onClick: () => {\n            setOpen(true);\n          },\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 191\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this);\n    }\n  };\n\n  const handleRowClick = rowMeta => {\n    if (rowMeta.colIndex != 6) {\n      const value = myContributionReport.responseData[rowMeta.rowIndex].sr_no;\n      history.push(`${process.env.PUBLIC_URL}/dataset-status/${value}}`);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDialogSubmit = () => {};\n\n  const columns = [{\n    name: \"sr_no\",\n    label: \"s id\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"sr_no\",\n    label: \"SR No.\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Dataset\",\n    label: \"Dataset Name\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Submitted_on\",\n    label: \"Submitted On\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Status\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"Status\",\n    label: \"status\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderStatus(tableMeta.rowData[0], tableMeta.rowData[4])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 56\n          }, this);\n        }\n      }\n    }\n  }, {\n    name: \"Action\",\n    label: \"action\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderAction(tableMeta.rowData[0], tableMeta.rowData[4])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 56\n          }, this);\n        }\n      }\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    onCellClick: (colData, cellMeta) => handleRowClick(cellMeta),\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: true,\n    filter: false,\n    selectableRows: \"none\"\n  };\n  const {\n    classes\n  } = props;\n  console.log(open);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.divStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [UrlConfig.dataset],\n        activeLink: \"My Contribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerButtons,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"b\",\n        component: \"h2\",\n        children: \"My Contribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }, this), fetchHeaderButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: getMuiTheme(),\n      children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: `My Contribution`,\n        data: myContributionReport.responseData,\n        columns: columns,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }, this), open && /*#__PURE__*/_jsxDEV(Dialog, {\n      message: message,\n      handleClose: handleClose(),\n      open: true,\n      title: title,\n      handleSubmit: handleDialogSubmit()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ContributionList, \"utMUHZ2tUdAWvR/nXuW0NOIFaqw=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = ContributionList;\nexport default withStyles(DataSet)(ContributionList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributionList\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/ContributionList.jsx"],"names":["withStyles","Typography","Link","MuiThemeProvider","createMuiTheme","Button","BreadCrum","React","useEffect","useState","useDispatch","useSelector","useHistory","DataSet","APITransport","MUIDataTable","MyContributionList","Dialog","Cached","SaveAlt","UrlConfig","ContributionList","props","history","dispatch","myContributionReport","state","open","setOpen","message","setMessage","title","setTilte","responseData","length","MyContributionListApi","userObj","getMuiTheme","overrides","MuiTableCell","head","backgroundColor","cursor","MuiPaper","root","boxShadow","borderRadius","border","MUIDataTableToolbar","display","MuiTableRow","fetchHeaderButton","classes","ButtonRefresh","iconStyle","renderStatus","id","value","link","push","process","env","PUBLIC_URL","span","renderAction","handleRowClick","rowMeta","colIndex","rowIndex","sr_no","handleClose","handleDialogSubmit","columns","name","label","options","filter","sort","empty","customBodyRender","tableMeta","updateValue","rowData","textLabels","body","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","onCellClick","colData","cellMeta","filterType","download","print","fixedHeader","selectableRows","console","log","divStyle","breadcrum","dataset","headerButtons"],"mappings":"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","sourcesContent":["import { withStyles, Typography,Link, MuiThemeProvider, createMuiTheme,Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  useHistory } from \"react-router-dom\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../../redux/actions/api/DataSet/MyContribution\";\nimport Dialog from \"../../../components/common/Dialog\"\nimport {Cached, SaveAlt} from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nconst ContributionList = (props) => {\n\n        const history                 = useHistory();\n        const dispatch                = useDispatch();\n        const myContributionReport    = useSelector( (state) => state.myContributionReport);\n        const [open, setOpen]         = useState(false)\n        const [message, setMessage]         = useState(\"Delete\")\n        const [title, setTilte]         = useState(\"Do you want to delete\")\n  \n        useEffect(()                  => {\n                myContributionReport.responseData.length == 0  && MyContributionListApi()\n        }, []);\n  \n        const  MyContributionListApi  = () =>{\n                const userObj         = new MyContributionList( \"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n                dispatch(APITransport(userObj));\n        }\n\n        const getMuiTheme = () => createMuiTheme({\n                overrides: {\n                MuiTableCell: {\n                        head: {\n                                backgroundColor : \"#c7c6c68a !important\",\n                                cursor: 'default'\n                        }\n                },\n                MuiPaper: {\n                        root:{\n                                boxShadow       : 'none !important',\n                                borderRadius    : 0,\n                                border          : \"1px solid rgb(224 224 224)\"\n                        }\n                },\n                MUIDataTableToolbar:{ root: { display: \"none\" } },\n                MuiTableRow:{root:{cursor: 'pointer'}}\n                }\n        });\n\n\n        const fetchHeaderButton= () => {\n                return (\n                         <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.ButtonRefresh}  onClick={() => MyContributionListApi()}><Cached className ={classes.iconStyle}/>Refresh</Button>\n                )\n              }\n\n        const renderStatus = (id,value) => {\n                if(value === \"Inprogress\"){\n                        return  <Link className = {classes.link} onClick={()=>{history.push(`${process.env.PUBLIC_URL}/dataset-status/${id}}`)}}> In-progress </Link>\n                }\n                else{\n                        return <span className = {classes.span}>Published </span>\n                }\n        }\n\n        const renderAction = (id,value) => {\n                if(value === \"Inprogress\"){}\n                else{\n                        return <div className= {classes.span}> <Link className= {classes.link} onClick={()=>{history.push(`${process.env.PUBLIC_URL}/submit-dataset/upload`)}}> Update </Link><Link className= {classes.link} onClick={()=>{setOpen(true)}}> Delete </Link> </div> \n                }\n        }\n\n        const handleRowClick = ( rowMeta) => {\n                if(rowMeta.colIndex!=6){\n                        const value = myContributionReport.responseData[rowMeta.rowIndex].sr_no;\n                        history.push(`${process.env.PUBLIC_URL}/dataset-status/${value}}`)\n                }\n        };\n\n        const handleClose = () =>{\n                setOpen(false)\n        }\n\n        const handleDialogSubmit = () =>{\n\n        }\n\n    \n        const columns = [\n                {\n                name: \"sr_no\",\n                label: \"s id\",\n                options: {\n                        filter  : false,\n                        sort    : false,\n                        display : \"excluded\",\n                        },\n                },\n                {\n                name    : \"sr_no\",\n                label   : \"SR No.\",\n                options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },\n                {\n                name    : \"Dataset\",\n                label   : \"Dataset Name\",\n                options: {\n                        filter  : false,\n                        sort    : false,\n                        },\n                },\n                {\n                name    : \"Submitted_on\",\n                label   : \"Submitted On\",\n                options : {\n                                filter  : false,\n                                sort    : false,\n                        \n                        },\n                },\n                {\n                name    : \"Status\",\n                label   : \"Status\",\n                options : {\n                        filter  : false,\n                        sort    : false,\n                        display : \"excluded\",\n                        },\n                },\n                {\n                name: \"Status\",\n                label: \"status\",\n                options: {\n                        filter  : true,\n                        sort    : false,\n                        empty   : true,\n                        customBodyRender: (value, tableMeta, updateValue) => {\n                                        if (tableMeta.rowData) {\n                                                return <div>{renderStatus(tableMeta.rowData[0],tableMeta.rowData[4])}</div>;\n                                        }\n                                },\n                        },\n                },\n\n                {\n                name    : \"Action\",\n                label   : \"action\",\n                options: {\n                                filter  : true,\n                                sort    : false,\n                                empty   : true,\n                                customBodyRender: (value, tableMeta, updateValue) => {\n                                        if (tableMeta.rowData) {\n                                                return <div>{renderAction(tableMeta.rowData[0], tableMeta.rowData[4])}</div>;\n                                        }\n                        },\n                },\n                },\n        ];\n\n        const options = {\n                textLabels: {\n                        body: {},\n                        toolbar: {\n                                search          : \"Search\",\n                                viewColumns     : \"View Column\",\n                        },\n                        pagination: {\n                                rowsPerPage     : \"Rows per page\",\n                        },\n                        options: { sortDirection: \"desc\" },\n                        },\n                        onCellClick: (colData, cellMeta) => handleRowClick( cellMeta),\n               \n                filterType      : \"checkbox\",\n                download        : false,\n                print           : false,\n                fixedHeader     : true,\n                filter          : false,\n                selectableRows  : \"none\",\n        };\n\n        const { classes } = props;\n        console.log(open)\n        return (\n                <div className = {classes.divStyle}>\n                        <div className = {classes.breadcrum}>\n                                <BreadCrum links={[UrlConfig.dataset]} activeLink=\"My Contribution\" />\n                        </div>\n\n                        <div className={classes.headerButtons}>\n                        <Typography variant=\"b\" component=\"h2\" >My Contribution</Typography>\n                                {fetchHeaderButton()} \n                        </div>\n\n                        {/* <div className={classes.title}>\n                                \n                        </div> */}\n\n                        <MuiThemeProvider theme={getMuiTheme()}>  \n                                <MUIDataTable\n                                        title           =       {`My Contribution`}\n                                        data            =       {myContributionReport.responseData}\n                                        columns         =       {columns}\n                                        options         =       {options}\n                                />\n                        </MuiThemeProvider>\n                        {open && <Dialog\n                                message         =       {message}\n                                handleClose     =       {handleClose()}\n                                open \n                                title           =       {title}\n                                handleSubmit    =       {handleDialogSubmit()}\n                        /> }\n                </div>\n        );\n};\n\nexport default withStyles(DataSet)(ContributionList);\n"]},"metadata":{},"sourceType":"module"}