{"ast":null,"code":"import C from '../../../actions/constants';\nconst initialState = {\n  responseData: []\n};\n\nconst dateConversion = value => {\n  var myDate = new Date(value);\n  let result = myDate.toLocaleString('en-US', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    hour12: true\n  });\n  return result;\n};\n\nconst getMySearches = payload => {\n  debugger;\n  let newArr = [];\n  payload.forEach(element => {\n    if (element.searchCriteria) {\n      let dataSet = element.searchCriteria.datasetType === \"parallel-corpus\" ? \"Parallel Dataset\" : element.searchCriteria.datasetType;\n      let langauge = element.searchCriteria.sourceLanguage;\n      let tLanguage = element.searchCriteria.targetLanguage;\n      newArr.push({\n        searchValue: `${dataSet} | ${langauge} | ${tLanguage}`,\n        timeStamp: dateConversion(element.timestamp),\n        status: element.status.status\n      });\n    }\n  });\n  console.log(payload);\n  let dataObj = [{\n    \"sr_no\": \"0005770\",\n    \"search_criteria\": \"Parallel dataset : English, Hindi, Malayalam, Tamil\",\n    \"searched_on\": \"23/5/2011\",\n    \"status\": \"Inprogress\"\n  }, {\n    \"sr_no\": \"0045770\",\n    \"search_criteria\": \"Monolinguel Dataset : English, General\",\n    \"searched_on\": \"3/5/2011\",\n    \"status\": \"Published\"\n  }, {\n    \"sr_no\": \"0205770\",\n    \"search_criteria\": \"ARS/TTS Dataset; English, Legal\",\n    \"searched_on\": \"12/5/2011\",\n    \"status\": \"Published\"\n  }, {\n    \"sr_no\": \"0005470\",\n    \"search_criteria\": \"Parallel Dataset; English; Bemgali ; News\",\n    \"searched_on\": \"2/5/2011\",\n    \"status\": \"Published\"\n  }];\n  return [];\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case C.GET_MY_REPORT:\n      return {\n        responseData: getMySearches(action.payload)\n      };\n\n    case C.CLEAR_USER_EVENT:\n      return { ...initialState\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/DataSet/DatasetSearch/MySearches.js"],"names":["C","initialState","responseData","dateConversion","value","myDate","Date","result","toLocaleString","day","month","year","hour","minute","second","hour12","getMySearches","payload","newArr","forEach","element","searchCriteria","dataSet","datasetType","langauge","sourceLanguage","tLanguage","targetLanguage","push","searchValue","timeStamp","timestamp","status","console","log","dataObj","reducer","state","action","type","GET_MY_REPORT","CLEAR_USER_EVENT"],"mappings":"AAAA,OAAOA,CAAP,MAAc,4BAAd;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAKA,MAAMC,cAAc,GAAIC,KAAD,IAAU;AAE7B,MAAIC,MAAM,GAAG,IAAIC,IAAJ,CAASF,KAAT,CAAb;AACA,MAAIG,MAAM,GAAIF,MAAM,CAACG,cAAP,CAAsB,OAAtB,EAA+B;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,KAAK,EAAE,SAAzB;AAAoCC,IAAAA,IAAI,EAAE,SAA1C;AAAqDC,IAAAA,IAAI,EAAE,SAA3D;AAAsEC,IAAAA,MAAM,EAAE,SAA9E;AAAyFC,IAAAA,MAAM,EAAE,SAAjG;AAA4GC,IAAAA,MAAM,EAAE;AAApH,GAA/B,CAAd;AACA,SAAOR,MAAP;AACH,CALD;;AAMA,MAAMS,aAAa,GAAIC,OAAD,IAAa;AAC/B;AACA,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgBC,OAAO,IAAG;AACtB,QAAGA,OAAO,CAACC,cAAX,EAA0B;AACtB,UAAIC,OAAO,GAAIF,OAAO,CAACC,cAAR,CAAuBE,WAAvB,KAAuC,iBAAvC,GAA2D,kBAA3D,GAAgFH,OAAO,CAACC,cAAR,CAAuBE,WAAtH;AACA,UAAIC,QAAQ,GAAGJ,OAAO,CAACC,cAAR,CAAuBI,cAAtC;AACA,UAAIC,SAAS,GAAGN,OAAO,CAACC,cAAR,CAAuBM,cAAvC;AACAT,MAAAA,MAAM,CAACU,IAAP,CACI;AACIC,QAAAA,WAAW,EAAG,GAAEP,OAAQ,MAAKE,QAAS,MAAKE,SAAU,EADzD;AAEII,QAAAA,SAAS,EAAK3B,cAAc,CAACiB,OAAO,CAACW,SAAT,CAFhC;AAGIC,QAAAA,MAAM,EAAQZ,OAAO,CAACY,MAAR,CAAeA;AAHjC,OADJ;AAUH;AAEJ,GAjBD;AAkBAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAZ;AAEA,MAAIkB,OAAO,GAAG,CAAC;AAAC,aAAQ,SAAT;AAAmB,uBAAkB,qDAArC;AAA2F,mBAAc,WAAzG;AAAqH,cAAS;AAA9H,GAAD,EAA6I;AAAC,aAAQ,SAAT;AAAmB,uBAAkB,wCAArC;AAA8E,mBAAc,UAA5F;AAAuG,cAAS;AAAhH,GAA7I,EAA0Q;AAAC,aAAQ,SAAT;AAAmB,uBAAkB,iCAArC;AAAuE,mBAAc,WAArF;AAAiG,cAAS;AAA1G,GAA1Q,EAAiY;AAAC,aAAQ,SAAT;AAAmB,uBAAkB,2CAArC;AAAiF,mBAAc,UAA/F;AAA0G,cAAS;AAAnH,GAAjY,CAAd;AACA,SAAO,EAAP;AACH,CAzBD;;AA2BC,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGpC,YAAT,EAAuBqC,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKvC,CAAC,CAACwC,aAAP;AACI,aAAO;AACHtC,QAAAA,YAAY,EAAEc,aAAa,CAACsB,MAAM,CAACrB,OAAR;AADxB,OAAP;;AAGJ,SAAKjB,CAAC,CAACyC,gBAAP;AACI,aAAO,EACH,GAAGxC;AADA,OAAP;;AAGJ;AACI,aAAO,EACH,GAAGoC;AADA,OAAP;AAVR;AAcH,CAfA;;AAiBD,eAAeD,OAAf","sourcesContent":["import C from '../../../actions/constants';\n\nconst initialState = {\n    responseData: []\n}\n\n\nconst dateConversion = (value) =>{\n    \n    var myDate = new Date(value);\n    let result = (myDate.toLocaleString('en-US', { day: '2-digit', month: '2-digit', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true }))\n    return result;\n}\nconst getMySearches = (payload) => {\n    debugger\n    let newArr = []\n    payload.forEach(element =>{\n        if(element.searchCriteria){\n            let dataSet  = element.searchCriteria.datasetType === \"parallel-corpus\" ? \"Parallel Dataset\" : element.searchCriteria.datasetType;\n            let langauge = element.searchCriteria.sourceLanguage\n            let tLanguage = element.searchCriteria.targetLanguage\n            newArr.push(\n                {\n                    searchValue :`${dataSet} | ${langauge} | ${tLanguage}`,\n                    timeStamp   : dateConversion(element.timestamp),\n                    status      : element.status.status\n\n                }\n                \n            )\n            \n        }\n        \n    })\n    console.log(payload)\n   \n    let dataObj = [{\"sr_no\":\"0005770\",\"search_criteria\":\"Parallel dataset : English, Hindi, Malayalam, Tamil\",\"searched_on\":\"23/5/2011\",\"status\":\"Inprogress\"},{\"sr_no\":\"0045770\",\"search_criteria\":\"Monolinguel Dataset : English, General\",\"searched_on\":\"3/5/2011\",\"status\":\"Published\"},{\"sr_no\":\"0205770\",\"search_criteria\":\"ARS/TTS Dataset; English, Legal\",\"searched_on\":\"12/5/2011\",\"status\":\"Published\"},{\"sr_no\":\"0005470\",\"search_criteria\":\"Parallel Dataset; English; Bemgali ; News\",\"searched_on\":\"2/5/2011\",\"status\":\"Published\"}]\n    return [];\n}\n\n const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case C.GET_MY_REPORT:\n            return {\n                responseData: getMySearches(action.payload)  \n            }\n        case C.CLEAR_USER_EVENT:\n            return {\n                ...initialState\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}