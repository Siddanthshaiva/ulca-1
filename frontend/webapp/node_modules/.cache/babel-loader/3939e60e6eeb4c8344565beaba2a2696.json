{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Theme from \"../../theme/theme-default\";\nimport { withStyles, Typography, MuiThemeProvider, Paper, Button } from \"@material-ui/core\";\nimport ChartStyles from \"../../styles/Dashboard\";\nimport { ResponsiveContainer, BarChart, Bar, Cell, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport Select from 'react-select';\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\nimport { isMobile } from 'react-device-detect';\nimport { ArrowBack } from '@material-ui/icons';\nimport Header from '../../components/common/Header';\nimport Dataset from \"../../../configs/DatasetItems\";\nimport authenticate from '../../../configs/authenticate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"];\n\nconst ChartRender = props => {\n  _s();\n\n  const [selectedOption, setSelectedOption] = useState(Dataset[0]);\n  const [title, setTitle] = useState(\"Number of parallel dataset per language with English\");\n  const [filterValue, setFilterValue] = useState(\"domains\");\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const [selectedLanguageName, setSelectedLanguageName] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const DashboardReport = useSelector(state => state.dashboardReport);\n  const {\n    classes\n  } = props;\n  const options = Dataset;\n  useEffect(() => {\n    fetchChartData(selectedOption.value, \"languagePairs\", []);\n\n    if (authenticate()) {\n      history.push(`${process.env.PUBLIC_URL}/private-dashboard`);\n    } else {\n      localStorage.clear();\n      history.push(`${process.env.PUBLIC_URL}/dashboard`);\n    }\n  }, []);\n\n  const fetchChartData = (dataType, value, criterions) => {\n    debugger;\n    const userObj = new FetchLanguageDataSets(dataType, value, criterions);\n    dispatch(APITransport(userObj));\n  };\n\n  const customStyles = {\n    option: (provided, state) => ({ ...provided,\n      borderColor: \"green\",\n      color: 'black',\n      padding: 20,\n      background: state.isSelected && \"#c7c6c68a !important\"\n    }),\n    control: (base, state) => ({ ...base,\n      // This line disable the blue border\n      borderColor: \"#392C71\",\n      border: \"1px solid rgba(57, 44, 113, 0.5)\",\n      boxShadow: state.isFocused ? 0 : 0,\n      fontFamily: \"Source Sans Pro, Arial, sans-serif \"\n    })\n  };\n\n  const fetchParams = event => {\n    var sourceLanguage = \"\";\n    let targetLanguage = \"\";\n\n    if (selectedOption.value === \"parallel-corpus\") {\n      sourceLanguage = {\n        \"type\": \"PARAMS\",\n        \"value\": \"en\"\n      };\n      targetLanguage = {\n        \"type\": \"PARAMS\",\n        \"value\": selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"_id\") && event._id\n      };\n    } else {\n      sourceLanguage = {\n        \"type\": \"PARAMS\",\n        \"value\": selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"_id\") && event._id\n      };\n      targetLanguage = {\n        \"type\": \"PARAMS\",\n        \"value\": \"\"\n      };\n    }\n\n    setSelectedLanguage(selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"_id\") && event._id);\n    setSelectedLanguageName(selectedLanguageName ? selectedLanguageName : event && event.hasOwnProperty(\"label\") && event.label);\n    return [{\n      \"type\": \"PARAMS\",\n      \"sourceLanguage\": sourceLanguage,\n      \"targetLanguage\": targetLanguage\n    }];\n  };\n\n  const fetchNextParams = eventValue => {\n    var sourceLanguage = \"\";\n    let targetLanguage = \"\";\n    let event = {\n      \"type\": \"PARAMS\",\n      \"value\": eventValue && event.hasOwnProperty(\"_id\") && eventValue._id\n    };\n\n    if (selectedOption.value === \"parallel-corpus\") {\n      sourceLanguage = {\n        \"type\": \"PARAMS\",\n        \"value\": \"en\"\n      };\n      targetLanguage = {\n        \"type\": \"PARAMS\",\n        \"value\": selectedLanguage\n      };\n    } else {\n      sourceLanguage = {\n        \"type\": \"PARAMS\",\n        \"value\": selectedLanguage\n      };\n      targetLanguage = {\n        \"type\": \"PARAMS\",\n        \"value\": \"\"\n      };\n    }\n\n    setSelectedLanguage(selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"_id\") && event._id);\n    setSelectedLanguageName(selectedLanguageName ? selectedLanguageName : event && event.hasOwnProperty(\"label\") && event.label);\n    return [{\n      \"type\": \"PARAMS\",\n      \"sourceLanguage\": sourceLanguage,\n      \"targetLanguage\": targetLanguage,\n      event: event\n    }];\n  };\n\n  const handleOnClick = (value, event, filter) => {\n    // if (event && event.hasOwnProperty(\"label\") && event.label === \"Others\") {\n    //     let others = this.props.dataValues.slice(7, this.props.dataValues.length)\n    //     this.setState({\n    // \tdataSetValues: others,\n    // \tcardNavigation: true\n    //     })\n    // } else {\n    debugger;\n\n    switch (value) {\n      case 1:\n        // fetchChartData(selectedOption.value, filter ? filter : filterValue, [{ \"type\": \"PARAMS\", \"sourceLanguage\": { \"type\": \"PARAMS\", \"value\": \"en\" }, \"targetLanguage\": { \"type\": \"PARAMS\", \"value\": selectedLanguage ? selectedLanguage : (event && event.hasOwnProperty(\"_id\")) ? event._id : \"\" } }])\n        fetchChartData(selectedOption.value, filter ? filter : filterValue, fetchParams(event));\n        setPage(value);\n        setTitle(`English-${selectedLanguageName ? selectedLanguageName : event && event.hasOwnProperty(\"label\") && event.label}  ${selectedOption.label} - Grouped by ${filter === \"domains\" ? \"Domain\" : filter === \"source\" ? \"Source\" : filter === \"collectionMethod_collectionDescriptions\" ? \"Collection Method\" : \"Domain\"}`);\n        break;\n\n      case 2:\n        fetchChartData(selectedOption.value, filterValue === \"collectionMethod_collectionDescriptions\" ? \"domains\" : \"collectionMethod_collectionDescriptions\", fetchNextParams(event));\n        setPage(value);\n        setFilterValue('domains');\n        setTitle(`English-${selectedLanguageName} ${selectedOption.label} `);\n        break;\n\n      case 0:\n        fetchChartData(selectedOption.value, \"languagePairs\", []);\n        setPage(value);\n        setFilterValue('domains');\n        setTitle(`English-Indic language ${selectedOption.label} `);\n        setSelectedLanguage(\"\");\n        setSelectedLanguageName(\"\");\n        break;\n\n      default:\n    }\n  };\n\n  const handleLanguageChange = value => {\n    setFilterValue(value);\n    setTitle(`English-${selectedLanguageName}  ${selectedOption.value}- Grouped by ${value === \"domains\" ? \"Domain\" : value === \"source\" ? \"Source\" : value === \"collectionMethod_collectionDescriptions\" ? \"Collection Method\" : \"Domain\"}`);\n    handleOnClick(1, \"\", value);\n  };\n\n  const handleCardNavigation = () => {\n    handleOnClick(page - 1);\n  };\n\n  const fetchLanuagePairButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.filterButton,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: filterValue === \"domains\" ? \"primary\" : \"default\",\n        style: filterValue === \"domains\" ? {\n          backgroundColor: \"#E8F5F8\"\n        } : {},\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => handleLanguageChange(\"domains\"),\n        children: \"Domain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: filterValue === \"collectionMethod_collectionDescriptions\" ? \"primary\" : \"default\",\n        style: filterValue === \"collectionMethod_collectionDescriptions\" ? {\n          backgroundColor: \"#E8F5F8\"\n        } : {},\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => handleLanguageChange(\"collectionMethod_collectionDescriptions\"),\n        children: \"Collection Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleSelectChange = dataSet => {\n    fetchChartData(dataSet.value, \"languagePairs\", []);\n    setSelectedOption(dataSet);\n\n    switch (dataSet.value) {\n      case 'parallel-corpus':\n        setTitle(\"Number of parallel sentences per language with English\");\n        break;\n\n      case 'monolingual-corpus':\n        setTitle('Number of sentences per language');\n        break;\n\n      case 'asr-corpus':\n        setTitle(\"Number of audio hours per language\");\n        break;\n\n      case 'ocr-corpus':\n        setTitle(\"Number of images per script\");\n        break;\n\n      default:\n        setTitle(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!authenticate() && /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: Theme,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.titleBar,\n          children: [page !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              size: \"medium\",\n              variant: \"contained\",\n              className: classes.backButton,\n              startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 121\n              }, this),\n              onClick: () => handleCardNavigation(),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.seperator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h3\",\n            className: classes.Typography,\n            children: \" Dataset Type : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: classes.select,\n            styles: customStyles,\n            color: \"primary\",\n            value: selectedOption,\n            onChange: value => {\n              handleSelectChange(value);\n            },\n            options: options,\n            isDisabled: page !== 0 ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 6\n          }, this), page === 1 && fetchLanuagePairButtons()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            value: \"\",\n            variant: \"h6\",\n            children: [\" \", title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"95%\",\n          height: 450,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 900,\n            height: 450,\n            data: DashboardReport,\n            maxBarSize: 100,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"label\",\n              textAnchor: isMobile ? \"end\" : \"middle\",\n              tick: {\n                angle: isMobile ? -60 : 0\n              },\n              height: isMobile ? 100 : 60,\n              interval: 0,\n              position: \"insideLeft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dx: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              horizontal: true,\n              vertical: false,\n              textAnchor: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                fill: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"value\",\n              cursor: \"pointer\",\n              radius: [4, 4, 0, 0],\n              maxBarSize: 30,\n              onClick: event => {\n                handleOnClick(page + 1, event);\n              },\n              children: DashboardReport.length > 0 && DashboardReport.map((entry, index) => {\n                const color = colors[index < 9 ? index : index % 10];\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: `#${color}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChartRender, \"gG2Obvh5RpJ3AUJFxLv0Kdxn9Do=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = ChartRender;\nexport default withStyles(ChartStyles(Theme))(ChartRender);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartRender\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","useParams","Theme","withStyles","Typography","MuiThemeProvider","Paper","Button","ChartStyles","ResponsiveContainer","BarChart","Bar","Cell","CartesianGrid","XAxis","YAxis","Tooltip","Select","APITransport","FetchLanguageDataSets","isMobile","ArrowBack","Header","Dataset","authenticate","colors","ChartRender","props","selectedOption","setSelectedOption","title","setTitle","filterValue","setFilterValue","selectedLanguage","setSelectedLanguage","selectedLanguageName","setSelectedLanguageName","page","setPage","history","dispatch","DashboardReport","state","dashboardReport","classes","options","fetchChartData","value","push","process","env","PUBLIC_URL","localStorage","clear","dataType","criterions","userObj","customStyles","option","provided","borderColor","color","padding","background","isSelected","control","base","border","boxShadow","isFocused","fontFamily","fetchParams","event","sourceLanguage","targetLanguage","hasOwnProperty","_id","label","fetchNextParams","eventValue","handleOnClick","filter","handleLanguageChange","handleCardNavigation","fetchLanuagePairButtons","filterButton","backgroundColor","backButton","handleSelectChange","dataSet","container","paper","titleBar","seperator","select","angle","fill","length","map","entry","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Theme from \"../../theme/theme-default\";\r\nimport { withStyles, Typography, MuiThemeProvider, Paper, Button } from \"@material-ui/core\";\r\nimport ChartStyles from \"../../styles/Dashboard\";\r\nimport { ResponsiveContainer, BarChart, Bar, Cell, CartesianGrid, XAxis, YAxis, Tooltip,} from 'recharts';\r\nimport Select from 'react-select';\r\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\r\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport {ArrowBack} from '@material-ui/icons';\r\nimport Header from '../../components/common/Header';\r\nimport Dataset from \"../../../configs/DatasetItems\";\r\nimport authenticate from '../../../configs/authenticate';\r\n\r\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"]\r\n\r\n\r\nconst ChartRender = (props) => {\r\n        const [selectedOption, setSelectedOption]   \t= \tuseState(Dataset[0]);\r\n        const [title, setTitle]                     \t= \tuseState(\"Number of parallel dataset per language with English\");\r\n\tconst [filterValue, setFilterValue]\t\t=\tuseState(\"domains\");\r\n\tconst [selectedLanguage,setSelectedLanguage]\t=\tuseState(\"\");\r\n\tconst [selectedLanguageName,setSelectedLanguageName]\t=\tuseState(\"\");\r\n\tconst [page, setPage]\t\t\t\t= \tuseState(0);\r\n        const history                               \t= \tuseHistory();\r\n        const dispatch                             \t= \tuseDispatch();\r\n        const DashboardReport                       \t= \tuseSelector( (state) => state.dashboardReport);\r\n        const { classes }                           \t= \tprops;\r\n        const options \t\t\t\t    \t= \tDataset;\r\n\tuseEffect(() => {\r\n\t\tfetchChartData(selectedOption.value, \"languagePairs\", [])\r\n\t\tif (authenticate()) {\r\n\t\t\thistory.push(`${process.env.PUBLIC_URL}/private-dashboard`)\r\n\t\t} \r\n\t\telse {\r\n\t\t\tlocalStorage.clear()\r\n\t\t\thistory.push(`${process.env.PUBLIC_URL}/dashboard`)\r\n\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst fetchChartData = (dataType, value, criterions) =>{\r\n\t\tdebugger\r\n\t\tconst userObj \t\t= \tnew FetchLanguageDataSets(dataType, value, criterions);\r\n\t\tdispatch(APITransport(userObj));\r\n\t\t\r\n\t} \r\n\r\n\tconst customStyles = {\r\n\t\toption\t: (provided, state) => ({\r\n\t\t\t...provided,\r\n\t\t\tborderColor\t:\t\"green\",\r\n\t\t\tcolor\t\t: \t'black',\r\n\t\t\tpadding\t\t: \t20,\r\n\t\t\tbackground\t: \tstate.isSelected && \"#c7c6c68a !important\",\r\n\r\n\t\t}),\r\n\t\tcontrol: (base, state) => ({\r\n\t\t...base,\r\n\t\t// This line disable the blue border\r\n\t\t\tborderColor\t:\t\"#392C71\",\r\n\t\t\tborder \t\t: \t\"1px solid rgba(57, 44, 113, 0.5)\",\r\n\t\t\tboxShadow\t: \tstate.isFocused ? 0 : 0,\r\n\t\t\tfontFamily\t: \t\"Source Sans Pro, Arial, sans-serif \"\r\n\t\t})\r\n\t}\r\n\r\n\tconst fetchParams = (event ) => {\r\n\t\tvar sourceLanguage = \"\"\r\n\t\tlet targetLanguage = \"\"\r\n\t\tif(selectedOption.value ===\t\"parallel-corpus\"){\r\n\t\t\t sourceLanguage =  \t{ \"type\": \"PARAMS\", \"value\": \"en\" };\r\n\t\t\ttargetLanguage \t=\t{ \"type\": \"PARAMS\", \"value\": (selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"_id\") && event._id)}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsourceLanguage =  \t{ \"type\": \"PARAMS\", \"value\": (selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"_id\") && event._id)};\r\n\t\t\ttargetLanguage \t=\t{ \"type\": \"PARAMS\", \"value\": \"\" };\r\n\t\t\t\r\n\t\t}\r\n\t\tsetSelectedLanguage(selectedLanguage ? selectedLanguage :event && event.hasOwnProperty(\"_id\") && event._id)\r\n\t\tsetSelectedLanguageName(selectedLanguageName ? selectedLanguageName : event && event.hasOwnProperty(\"label\") && event.label)\r\n\t\treturn ([{ \"type\": \"PARAMS\", \"sourceLanguage\" : sourceLanguage,\"targetLanguage\" : targetLanguage}])\r\n\t}\r\n\t\r\n\tconst fetchNextParams = (eventValue ) => {\r\n\t\tvar sourceLanguage = \"\"\r\n\t\tlet targetLanguage = \"\"\r\n\t\tlet event\t\t\t=\t{ \"type\": \"PARAMS\", \"value\": eventValue && event.hasOwnProperty(\"_id\") && eventValue._id } \r\n\t\tif(selectedOption.value ===\t\"parallel-corpus\"){\r\n\t\t\t sourceLanguage =  \t{ \"type\": \"PARAMS\", \"value\": \"en\" };\r\n\t\t\ttargetLanguage \t=\t{ \"type\": \"PARAMS\", \"value\": selectedLanguage}\r\n\t\t\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsourceLanguage =  \t{ \"type\": \"PARAMS\", \"value\": (selectedLanguage)};\r\n\t\t\ttargetLanguage \t=\t{ \"type\": \"PARAMS\", \"value\": \"\" };\r\n\t\t\t\r\n\t\t}\r\n\t\tsetSelectedLanguage(selectedLanguage ? selectedLanguage :event && event.hasOwnProperty(\"_id\") && event._id)\r\n\t\tsetSelectedLanguageName(selectedLanguageName ? selectedLanguageName : event && event.hasOwnProperty(\"label\") && event.label)\r\n\t\treturn ([{ \"type\": \"PARAMS\", \"sourceLanguage\" : sourceLanguage,\"targetLanguage\" : targetLanguage, event : event}])\r\n\t}\r\n\r\n\tconst handleOnClick= (value, event, filter) =>  {\r\n\t\t// if (event && event.hasOwnProperty(\"label\") && event.label === \"Others\") {\r\n\t\t//     let others = this.props.dataValues.slice(7, this.props.dataValues.length)\r\n\t\t//     this.setState({\r\n\t\t// \tdataSetValues: others,\r\n\t\t// \tcardNavigation: true\r\n\t\t//     })\r\n\t\t// } else {\r\n\t\t\tdebugger\r\n\t\t    switch (value) {\r\n\t\t\tcase 1:\r\n\t\t\t\t// fetchChartData(selectedOption.value, filter ? filter : filterValue, [{ \"type\": \"PARAMS\", \"sourceLanguage\": { \"type\": \"PARAMS\", \"value\": \"en\" }, \"targetLanguage\": { \"type\": \"PARAMS\", \"value\": selectedLanguage ? selectedLanguage : (event && event.hasOwnProperty(\"_id\")) ? event._id : \"\" } }])\r\n\t\t\t\t\r\n\t\t\t\tfetchChartData(selectedOption.value,filter ? filter : filterValue, fetchParams(event ))\r\n\t\t\t\tsetPage(value)\r\n\t\t\t\tsetTitle( `English-${selectedLanguageName ? selectedLanguageName : event && event.hasOwnProperty(\"label\") && event.label }  ${selectedOption.label} - Grouped by ${(filter === \"domains\") ? \"Domain\" : (filter === \"source\") ? \"Source\" : filter === \"collectionMethod_collectionDescriptions\" ? \"Collection Method\" : \"Domain\"}`)\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfetchChartData(selectedOption.value, filterValue === \"collectionMethod_collectionDescriptions\" ? \"domains\" : \"collectionMethod_collectionDescriptions\", fetchNextParams(event))\r\n\t\t\t\tsetPage(value)\r\n\t\t\t\tsetFilterValue('domains')\r\n\t\t\t\tsetTitle( `English-${selectedLanguageName} ${selectedOption.label} `)\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0:\r\n\t\t\t\tfetchChartData(selectedOption.value, \"languagePairs\", [])\r\n\t\t\t\tsetPage(value)\r\n\t\t\t\tsetFilterValue('domains')\r\n\t\t\t\tsetTitle(`English-Indic language ${selectedOption.label} `)\r\n\t\t\t\tsetSelectedLanguage(\"\")\r\n\t\t\t\tsetSelectedLanguageName(\"\")\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\r\n\t\t    }\r\n\t\t\r\n\t    }\r\n\r\n\tconst handleLanguageChange = (value) => {\r\n\t\tsetFilterValue(value)\r\n\t\tsetTitle( `English-${selectedLanguageName }  ${selectedOption.value}- Grouped by ${(value === \"domains\") ? \"Domain\" : (value === \"source\") ? \"Source\" : value === \"collectionMethod_collectionDescriptions\" ? \"Collection Method\" : \"Domain\"}`)\r\n\t\thandleOnClick(1, \"\", value)\r\n\t    }\r\n\tconst  handleCardNavigation = () => {\r\n\r\n\t\t    handleOnClick(page - 1)\r\n\t    }\r\n\r\n\tconst fetchLanuagePairButtons = () => {\r\n\t\treturn (\r\n\t\t    <div className={classes.filterButton}>\r\n\t\t\t<Button  color={filterValue ===\"domains\" ? \"primary\" :\"default\" } style={ filterValue === \"domains\" ? {backgroundColor: \"#E8F5F8\"} : {} } size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => handleLanguageChange(\"domains\")}>Domain</Button>\r\n\t\t\t{/* <Button  color={filterValue === \"source\" ? \"primary\":\"default\"} style={ filterValue === \"source\" ? {backgroundColor: \"#E8F5F8\"} : {} }size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => handleLanguageChange(\"source\")}>Source</Button> */}\r\n\t\t\t<Button  color={filterValue === \"collectionMethod_collectionDescriptions\" ?\"primary\" :\"default\"} style={ filterValue === \"collectionMethod_collectionDescriptions\" ? {backgroundColor: \"#E8F5F8\"} : {} } size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => handleLanguageChange(\"collectionMethod_collectionDescriptions\")}>Collection Method</Button>\r\n\t\t   \r\n\t\t    </div>\r\n\t\t)\r\n\t    }\r\n\r\n\tconst handleSelectChange = (dataSet) =>{\r\n\t\tfetchChartData(dataSet.value, \"languagePairs\", [])\r\n\t\tsetSelectedOption( dataSet)\r\n\t\tswitch (dataSet.value) {\r\n\t\t\tcase 'parallel-corpus':\r\n\t\t\t\t setTitle(\"Number of parallel sentences per language with English\")\r\n\t\t\t\t break;\r\n\t\t\tcase 'monolingual-corpus':\r\n\t\t\t\t setTitle('Number of sentences per language')\r\n\t\t\t\t break;\r\n\t\t\tcase 'asr-corpus':\r\n\t\t\t\t setTitle(\"Number of audio hours per language\")\r\n\t\t\t\t break;\r\n\t\t\tcase 'ocr-corpus':\r\n\t\t\t\tsetTitle(\"Number of images per script\")\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsetTitle(\"\")\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n     return (\r\n        <>\r\n            \t{ !authenticate() &&\r\n\t\t\t<MuiThemeProvider theme={Theme}>\r\n\t\t\t\t<Header /><br /><br /><br /><br />\r\n\t\t\t</MuiThemeProvider>\r\n        \t}\r\n                <div className\t=\t{classes.container}>\r\n\t\t\t{/* <div className={classes.breadcrum}>\r\n\t\t\t\t<BreadCrum links={[\"Dataset\"]} activeLink=\"Submit Dataset\" />\r\n\t\t\t</div> */}\r\n\t\t\t<Paper elevation  = {3} className  = {classes.paper}>\r\n\t\t\t\r\n\t\t\t\t<div className  =\t{classes.titleBar}>\r\n\t\t\t\t\t{page!==0 && <><Button color=\"primary\" size=\"medium\" variant=\"contained\" className={classes.backButton} startIcon={<ArrowBack />} onClick={() => handleCardNavigation()}>Back</Button>\r\n\t\t\t\t\t<div className={classes.seperator}></div></>}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Typography \tvariant   \t=\t\"h5\" component = \"h3\" \r\n\t\t\t\t\t\t\tclassName \t= \t{classes.Typography}> Dataset Type :\t</Typography>\r\n\t\t\t\t\t<Select \tclassName \t= \t{classes.select} \r\n\t\t\t\t\t\t\tstyles \t\t= \t{customStyles} color= \"primary\"\r\n\t\t\t\t\t\t\tvalue   \t=\t{selectedOption}\r\n\t\t\t\t\t\t\tonChange\t=\t{(value)=>{handleSelectChange(value)}}\r\n\t\t\t\t\t\t\toptions\t\t=\t{options}\r\n\t\t\t\t\t\t\tisDisabled\t= {page!== 0 ? true : false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{page === 1 && fetchLanuagePairButtons()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t<Typography value=\"\" variant=\"h6\"> {title} </Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ResponsiveContainer width = \"95%\" height = {450}>\r\n\t\t\t\t\t<BarChart width = {900} height \t= \t{450} data={DashboardReport} maxBarSize = {100} >\r\n\t\t\t\t\t\t<XAxis \tdataKey \t= \t\"label\"\r\n\t\t\t\t\t\t\ttextAnchor\t=\t{isMobile ? \"end\" : \"middle\"}\r\n\t\t\t\t\t\t\ttick\t\t=\t{{ angle: isMobile ? -60 : 0 }} \r\n\t\t\t\t\t\t\theight\t\t=\t{isMobile ? 100 : 60}\r\n\t\t\t\t\t\t\tinterval\t=\t{0}\r\n\t\t\t\t\t\t\tposition\t=\t\"insideLeft\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<YAxis type=\"number\" dx\t=\t{0} />\r\n\t\t\t\t\t\t<CartesianGrid horizontal = {true} vertical = {false} textAnchor = {\"middle\"} />\r\n\t\t\t\t\t\t<Tooltip cursor={{fill: 'none'}}/>\r\n\t\t\t\t\t\t<Bar dataKey = \"value\" cursor =\"pointer\" radius = {[4, 4, 0, 0]} maxBarSize = {30} onClick={(event) => { handleOnClick(page + 1, event) }}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tDashboardReport.length > 0 && DashboardReport.map((entry, index) => {\r\n\t\t\t\t\t\t\t\t\tconst color \t= \tcolors[index < 9 ? index : index % 10]\r\n\t\t\t\t\t\t\t\t\treturn <Cell key = {index} fill = {`#${color}`} />;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Bar>\r\n\t\t\t\t\t</BarChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\r\n\t\t\t</Paper>\r\n\r\n\t\t</div>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default withStyles(ChartStyles(Theme))(ChartRender);\r\n"]},"metadata":{},"sourceType":"module"}