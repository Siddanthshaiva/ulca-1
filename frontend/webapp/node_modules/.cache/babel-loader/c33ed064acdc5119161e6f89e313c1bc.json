{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Theme from \"../../theme/theme-default\";\nimport { withStyles, Typography, Link, MuiThemeProvider, createMuiTheme, Paper, Grid, Button } from \"@material-ui/core\";\nimport ChartStyles from \"../../styles/Dashboard\";\nimport { ResponsiveContainer, BarChart, Bar, Brush, Cell, CartesianGrid, ReferenceLine, ReferenceArea, XAxis, YAxis, Tooltip, Legend, ErrorBar, LabelList, Rectangle } from 'recharts';\nimport Select from 'react-select';\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\nimport { isMobile } from 'react-device-detect';\nimport { FilterList } from '@material-ui/icons';\nimport Header from '../../components/common/Header';\nimport authenticate from '../../../configs/authenticate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar jp = require('jsonpath');\n\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"];\n\nconst ChartRender = props => {\n  _s();\n\n  const [selectedOption, setselectedOption] = useState({\n    value: 'Parallel Corpus',\n    label: 'Parallel Corpus'\n  });\n  const [title, setTitle] = useState(\"Number of parallel sentences per language with English\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const DashboardReport = useSelector(state => state.dashboardReport);\n  const {\n    classes\n  } = props;\n  const options = [{\n    value: 'Parallel Corpus',\n    label: 'Parallel Corpus'\n  }, {\n    value: 'Monolingual Dataset',\n    label: 'Monolingual Dataset'\n  }, {\n    value: 'ASR / TTS Dataset',\n    label: 'ASR / TTS Dataset'\n  }, {\n    value: 'OCR Dataset',\n    label: 'OCR Dataset'\n  }];\n  useEffect(() => {\n    const userObj = new FetchLanguageDataSets(\"parallel-corpus\", \"languagePairs\");\n    dispatch(APITransport(userObj));\n\n    if (authenticate()) {\n      history.push(`${process.env.PUBLIC_URL}/private-dashboard`);\n    } else {\n      localStorage.removeItem('token');\n      history.push(`${process.env.PUBLIC_URL}/dashboard`);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!authenticate() && /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: Theme,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"b\",\n            component: \"h3\",\n            children: \"Dataset Type :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"95%\",\n          height: 450,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 900,\n            height: 450,\n            data: DashboardReport,\n            maxBarSize: 100,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"label\",\n              textAnchor: isMobile ? \"end\" : \"middle\",\n              tick: {\n                angle: isMobile ? -60 : 0\n              },\n              height: isMobile ? 100 : 60,\n              interval: 0,\n              position: \"insideLeft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dx: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              horizontal: true,\n              vertical: false,\n              textAnchor: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"value\",\n              radius: [4, 4, 0, 0],\n              maxBarSize: 30,\n              children: DashboardReport.length > 0 && DashboardReport.map((entry, index) => {\n                const color = colors[index < 9 ? index : index % 10];\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: `#${color}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 48\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChartRender, \"w7VDSkc2rVDQrn7f4OPAsTicKB4=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = ChartRender;\nexport default withStyles(ChartStyles(Theme))(ChartRender);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartRender\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","Theme","withStyles","Typography","Link","MuiThemeProvider","createMuiTheme","Paper","Grid","Button","ChartStyles","ResponsiveContainer","BarChart","Bar","Brush","Cell","CartesianGrid","ReferenceLine","ReferenceArea","XAxis","YAxis","Tooltip","Legend","ErrorBar","LabelList","Rectangle","Select","APITransport","FetchLanguageDataSets","isMobile","FilterList","Header","authenticate","jp","require","colors","ChartRender","props","selectedOption","setselectedOption","value","label","title","setTitle","history","dispatch","DashboardReport","state","dashboardReport","classes","options","userObj","push","process","env","PUBLIC_URL","localStorage","removeItem","container","paper","angle","length","map","entry","index","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,SAASC,UAAT,EAAqBC,UAArB,EAAgCC,IAAhC,EAAsCC,gBAAtC,EAAwDC,cAAxD,EAAuEC,KAAvE,EAA8EC,IAA9E,EAAoFC,MAApF,QAAkG,mBAAlG;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SACIC,mBADJ,EAEIC,QAFJ,EAEcC,GAFd,EAEmBC,KAFnB,EAE0BC,IAF1B,EAEgCC,aAFhC,EAE+CC,aAF/C,EAE8DC,aAF9D,EAGIC,KAHJ,EAGWC,KAHX,EAGkBC,OAHlB,EAG2BC,MAH3B,EAGmCC,QAHnC,EAG6CC,SAH7C,EAGwDC,SAHxD,QAIO,UAJP;AAKA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAOC,qBAAP,MAAkC,uDAAlC;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIC,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,EAAiF,QAAjF,EAA2F,QAA3F,EAAqG,QAArG,CAAb;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAwC1C,QAAQ,CAAC;AAAE2C,IAAAA,KAAK,EAAE,iBAAT;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GAAD,CAAtD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAwC9C,QAAQ,CAAC,wDAAD,CAAtD;AACA,QAAM+C,OAAO,GAAiC5C,UAAU,EAAxD;AACA,QAAM6C,QAAQ,GAAgC/C,WAAW,EAAzD;AACA,QAAMgD,eAAe,GAAyB/C,WAAW,CAAGgD,KAAD,IAAWA,KAAK,CAACC,eAAnB,CAAzD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwCZ,KAA9C;AACA,QAAMa,OAAO,GAAG,CACZ;AAAEV,IAAAA,KAAK,EAAE,iBAAT;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GADY,EAEZ;AAAED,IAAAA,KAAK,EAAE,qBAAT;AAAgCC,IAAAA,KAAK,EAAE;AAAvC,GAFY,EAGZ;AAAED,IAAAA,KAAK,EAAE,mBAAT;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GAHY,EAIZ;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAJY,CAAhB;AAMJ7C,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuD,OAAO,GAAG,IAAIvB,qBAAJ,CAA0B,iBAA1B,EAA6C,eAA7C,CAAhB;AACAiB,IAAAA,QAAQ,CAAClB,YAAY,CAACwB,OAAD,CAAb,CAAR;;AACA,QAAInB,YAAY,EAAhB,EAAoB;AAChBY,MAAAA,OAAO,CAACQ,IAAR,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,oBAAvC;AACH,KAFD,MAEO;AACHC,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAb,MAAAA,OAAO,CAACQ,IAAR,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,YAAvC;AAEH;AACJ,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,eACM,CAACvB,YAAY,EAAb,iBACE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE/B,KAAzB;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAUI;AAAK,MAAA,SAAS,EAAEgD,OAAO,CAACS,SAAxB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAqB,QAAA,SAAS,EAAET,OAAO,CAACU,KAAxC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEV,OAAO,CAACP,KAAxB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,GAApB;AAAwB,YAAA,SAAS,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,mBAAD;AAAqB,UAAA,KAAK,EAAC,KAA3B;AAAiC,UAAA,MAAM,EAAE,GAAzC;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,GAAjB;AAAsB,YAAA,MAAM,EAAE,GAA9B;AAAmC,YAAA,IAAI,EAAEI,eAAzC;AAA0D,YAAA,UAAU,EAAE,GAAtE;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,OAAf;AACI,cAAA,UAAU,EAAEjB,QAAQ,GAAG,KAAH,GAAW,QADnC;AAEI,cAAA,IAAI,EAAE;AAAE+B,gBAAAA,KAAK,EAAE/B,QAAQ,GAAG,CAAC,EAAJ,GAAS;AAA1B,eAFV;AAEyC,cAAA,MAAM,EAAEA,QAAQ,GAAG,GAAH,GAAS,EAFlE;AAGI,cAAA,QAAQ,EAAE,CAHd;AAII,cAAA,QAAQ,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,EAAE,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI,QAAC,aAAD;AAAe,cAAA,UAAU,EAAE,IAA3B;AAAiC,cAAA,QAAQ,EAAE,KAA3C;AAAkD,cAAA,UAAU,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,oBATJ,eAWI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAYI,QAAC,GAAD;AAAK,cAAA,OAAO,EAAC,OAAb;AAAqB,cAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA7B;AAA2C,cAAA,UAAU,EAAE,EAAvD;AAAA,wBAGQiB,eAAe,CAACe,MAAhB,GAAyB,CAAzB,IAA8Bf,eAAe,CAACgB,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChE,sBAAMC,KAAK,GAAG9B,MAAM,CAAC6B,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoBA,KAAK,GAAG,EAA7B,CAApB;AACA,oCAAO,QAAC,IAAD;AAAkB,kBAAA,IAAI,EAAG,IAAGC,KAAM;AAAlC,mBAAWD,KAAX;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,eAH6B;AAHtC;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADJ;AA+CH,CAxED;;GAAM5B,W;UAGgDpC,U,EACAF,W,EACAC,W;;;KALhDqC,W;AA4EN,eAAelC,UAAU,CAACQ,WAAW,CAACT,KAAD,CAAZ,CAAV,CAA+BmC,WAA/B,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Theme from \"../../theme/theme-default\";\n\nimport { withStyles, Typography,Link, MuiThemeProvider, createMuiTheme,Paper, Grid, Button } from \"@material-ui/core\";\n\nimport ChartStyles from \"../../styles/Dashboard\";\nimport {\n    ResponsiveContainer,\n    BarChart, Bar, Brush, Cell, CartesianGrid, ReferenceLine, ReferenceArea,\n    XAxis, YAxis, Tooltip, Legend, ErrorBar, LabelList, Rectangle\n} from 'recharts';\nimport Select from 'react-select';\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\n\nimport { isMobile } from 'react-device-detect';\nimport {FilterList} from '@material-ui/icons';\nimport Header from '../../components/common/Header';\nimport authenticate from '../../../configs/authenticate';\n\nvar jp = require('jsonpath')\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"]\n\n\nconst ChartRender = (props) => {\n        const [selectedOption, setselectedOption]   = useState({ value: 'Parallel Corpus', label: 'Parallel Corpus' });\n        const [title, setTitle]                     = useState(\"Number of parallel sentences per language with English\");\n        const history                               = useHistory();\n        const dispatch                              = useDispatch();\n        const DashboardReport                       = useSelector( (state) => state.dashboardReport);\n        const { classes }                           = props;\n        const options = [\n            { value: 'Parallel Corpus', label: 'Parallel Corpus' },\n            { value: 'Monolingual Dataset', label: 'Monolingual Dataset' },\n            { value: 'ASR / TTS Dataset', label: 'ASR / TTS Dataset' },\n            { value: 'OCR Dataset', label: 'OCR Dataset' },\n          ];\n    useEffect(() => {\n        const userObj = new FetchLanguageDataSets(\"parallel-corpus\", \"languagePairs\");\n        dispatch(APITransport(userObj));\n        if (authenticate()) {\n            history.push(`${process.env.PUBLIC_URL}/private-dashboard`)\n        } else {\n            localStorage.removeItem('token')\n            history.push(`${process.env.PUBLIC_URL}/dashboard`)\n\n        }\n    }, []);\n\n    return (\n        <>\n            { !authenticate() &&\n                <MuiThemeProvider theme={Theme}>\n                    <Header />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                </MuiThemeProvider>\n            }\n            <div className={classes.container}>\n                <Paper elevation={3} className={classes.paper}>\n                    <div className={classes.title}>\n                        <Typography variant=\"b\" component=\"h3\">Dataset Type :</Typography>\n                    </div>\n                    <ResponsiveContainer width=\"95%\" height={450}>\n                        <BarChart width={900} height={450} data={DashboardReport} maxBarSize={100} >\n                            <XAxis dataKey=\"label\"\n                                textAnchor={isMobile ? \"end\" : \"middle\"}\n                                tick={{ angle: isMobile ? -60 : 0 }} height={isMobile ? 100 : 60}\n                                interval={0}\n                                position=\"insideLeft\"\n\n                            />\n                            <YAxis type=\"number\" dx={0} />\n                            <CartesianGrid horizontal={true} vertical={false} textAnchor={\"middle\"} />\n\n                            <Tooltip />\n                            <Bar dataKey=\"value\" radius={[4, 4, 0, 0]} maxBarSize={30}>\n\n                                {\n                                    DashboardReport.length > 0 && DashboardReport.map((entry, index) => {\n                                        const color = colors[index < 9 ? index : index % 10]\n                                        return <Cell key={index} fill={`#${color}`} />;\n                                    })\n                                }\n                            </Bar>\n                        </BarChart>\n                    </ResponsiveContainer>\n\n                </Paper>\n            </div>\n        </>\n    )\n\n\n}\n\n\n\nexport default withStyles(ChartStyles(Theme))(ChartRender);\n"]},"metadata":{},"sourceType":"module"}