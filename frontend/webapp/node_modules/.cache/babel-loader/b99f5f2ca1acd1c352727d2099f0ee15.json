{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/TitleBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Toolbar, FormControl, InputLabel, NativeSelect, AppBar, Paper, Grid } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles, Button, Menu, MenuItem, MuiThemeProvider } from \"@material-ui/core\";\nimport HeaderStyles from \"../../styles/HeaderStyles\";\nimport { DatasetItems } from \"../../../configs/DatasetItems\";\nimport Statistics from \"./Statistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TitleBar = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const [options, setOptions] = useState('parallel-corpus');\n  const gridArray = [{\n    title: 'Title1',\n    value: '35555'\n  }, {\n    title: 'Title2',\n    value: '4000'\n  }];\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setOptions(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Statistics, {\n      label: \"Total parallel sentences\",\n      totValue: \"53645447\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body2\",\n          children: \" Title Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h5\",\n          children: \"29875\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body2\",\n          children: \" Title Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h5\",\n          children: \"46786\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body2\",\n          children: \" Title Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h5\",\n          children: \"56676\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TitleBar, \"F42LAjFoUwae3i73HHIZcuTp0l0=\");\n\n_c = TitleBar;\nexport default withStyles(HeaderStyles)(TitleBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"TitleBar\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/TitleBar.jsx"],"names":["React","useState","Toolbar","FormControl","InputLabel","NativeSelect","AppBar","Paper","Grid","Typography","withStyles","Button","Menu","MenuItem","MuiThemeProvider","HeaderStyles","DatasetItems","Statistics","TitleBar","props","classes","options","setOptions","gridArray","title","value","handleChange","event","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,UAA/B,EAA2CC,YAA3C,EAAyDC,MAAzD,EAAiEC,KAAjE,EAAuEC,IAAvE,QAAmF,mBAAnF;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,gBAA7C,QAAqE,mBAArE;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,iBAAD,CAAtC;AACA,QAAMsB,SAAS,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAAD,EAAsC;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAAtC,CAAlB;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMF,KAAK,GAAGE,KAAK,CAACC,MAAN,CAAaH,KAA3B;AACAH,IAAAA,UAAU,CAACG,KAAD,CAAV;AACH,GAHD;;AAIA,sBACI;AAAA,2BAuBI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,0BAAlB;AAA6C,MAAA,QAAQ,EAAC,UAAtD;AAAA,8BAWI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAeI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAmBI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBJ,mBADJ;AAkDH,CA1DD;;GAAMP,Q;;KAAAA,Q;AA4DN,eAAeR,UAAU,CAACK,YAAD,CAAV,CAAyBG,QAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Toolbar, FormControl, InputLabel, NativeSelect, AppBar, Paper,Grid } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles, Button, Menu, MenuItem, MuiThemeProvider } from \"@material-ui/core\";\nimport HeaderStyles from \"../../styles/HeaderStyles\";\nimport { DatasetItems } from \"../../../configs/DatasetItems\";\nimport Statistics from \"./Statistics\";\n\nconst TitleBar = (props) => {\n    const { classes } = props;\n    const [options, setOptions] = useState('parallel-corpus');\n    const gridArray = [{ title: 'Title1', value: '35555' }, { title: 'Title2', value: '4000' }]\n    const handleChange = (event) => {\n        const value = event.target.value;\n        setOptions(value);\n    };\n    return (\n        <>\n            {/* <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n                <Toolbar>\n                    <FormControl className={classes.formControl}>\n                        <NativeSelect\n                            value={options}\n                            onChange={handleChange}\n                        >\n                            {\n                                DatasetItems.map(menu => {\n                                    return <option\n                                        value={menu.value}\n                                        className={classes.styledMenu}\n                                    >\n\n                                        {menu.label}\n                                    </option>\n                                })\n                            }\n                        </NativeSelect>\n                    </FormControl>\n                </Toolbar>\n            </AppBar> */}\n            <Statistics label='Total parallel sentences' totValue='53645447'>\n            {/* {\n                    gridArray.map(grid => {\n                        return (\n                            <Grid item>\n                                <Typography gutterBottom>{grid.title}</Typography>\n                                <Typography variant=\"h6\" component=\"h5\">{grid.value}</Typography>\n                            </Grid>\n                        )\n                    }) */\n                }\n                <Grid item>\n                    <Typography gutterBottom variant='body2'> Title Here</Typography>\n                    <Typography variant=\"h6\" component='h5'>29875</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography gutterBottom variant='body2'> Title Here</Typography>\n                    <Typography variant=\"h6\" component='h5'>46786</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography gutterBottom variant='body2'> Title Here</Typography>\n                    <Typography variant=\"h6\" component='h5'>56676</Typography>\n                </Grid>\n            </Statistics>\n        </>\n    )\n}\n\nexport default withStyles(HeaderStyles)(TitleBar);"]},"metadata":{},"sourceType":"module"}