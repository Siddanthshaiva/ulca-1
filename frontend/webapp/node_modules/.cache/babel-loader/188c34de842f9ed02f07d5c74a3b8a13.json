{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/DetailedStatus.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, MuiThemeProvider, createMuiTheme, Button, Typography } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect } from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport DetailedDatasetStatus from \"../../../../redux/actions/api/DataSet/DatasetView/DetailedDataset\";\nimport ErrorFileDownload from \"../../../../redux/actions/api/DataSet/DatasetView/ErrorDownload\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Cached, SaveAlt } from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailedStatus = props => {\n  _s();\n\n  const detailedReport = useSelector(state => state.detailedReport);\n  const dispatch = useDispatch();\n  const {\n    status,\n    id\n  } = useParams();\n  useEffect(() => {\n    DetailedDataSetStatusApi();\n  }, []);\n\n  const DetailedDataSetStatusApi = () => {\n    const userObj = new DetailedDatasetStatus(id);\n    const userId = new ErrorFileDownload(id);\n    dispatch(APITransport(userObj));\n    dispatch(APITransport(userId));\n  };\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MuiTableCell: {\n        head: {\n          backgroundColor: \"#c7c6c68a !important\"\n        }\n      },\n      MuiToolbar: {\n        root: {\n          display: \"none\"\n        }\n      },\n      MuiPaper: {\n        root: {\n          boxShadow: 'none !important',\n          borderRadius: 0,\n          border: \"1px solid rgb(224 224 224)\"\n        }\n      }\n    }\n  });\n\n  const fetchHeaderButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerButtons,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Validation Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }, this), status !== \"published\" && /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"medium\",\n        className: classes.ButtonRefresh,\n        variant: \"outlined\",\n        onClick: () => DetailedDataSetStatusApi(),\n        children: [/*#__PURE__*/_jsxDEV(Cached, {\n          className: classes.iconStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 200\n        }, this), \"Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"medium\",\n        variant: \"outlined\",\n        className: status !== \"published\" ? classes.buttonStyle : classes.ButtonRefresh,\n        onClick: () => this.handleLanguageChange(\"domain\"),\n        children: [/*#__PURE__*/_jsxDEV(SaveAlt, {\n          className: classes.iconStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 226\n        }, this), \"Error Logs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this);\n  };\n\n  const columns = [{\n    name: \"srNo\",\n    label: \"s id\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"datasetId\",\n    label: \"Stage\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"stage\",\n    label: \"Stage\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"status\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"recordCount\",\n    label: \"Record Count\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"failedCount\",\n    label: \"Failed Count\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    displaySelectToolbar: false,\n    fixedHeader: false,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    filter: false,\n    selectableRows: \"none\"\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.divStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [UrlConfig.dataset, UrlConfig.myContribution],\n        activeLink: \"Dataset details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerButtons,\n      children: fetchHeaderButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: getMuiTheme(),\n      children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: `My Contribution`,\n        data: detailedReport.responseData,\n        columns: columns,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }, this), status !== \"published\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.footerButtons,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => this.handleLanguageChange(\"domain\"),\n        children: \"Abort Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 17\n  }, this);\n};\n\n_s(DetailedStatus, \"VjxDLVrkiv89dVO98TOR7YqNeSg=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n\n_c = DetailedStatus;\nexport default withStyles(DataSet)(DetailedStatus);\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedStatus\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/DetailedStatus.jsx"],"names":["withStyles","MuiThemeProvider","createMuiTheme","Button","Typography","BreadCrum","React","useEffect","DataSet","APITransport","MUIDataTable","DetailedDatasetStatus","ErrorFileDownload","useDispatch","useSelector","Cached","SaveAlt","UrlConfig","useParams","DetailedStatus","props","detailedReport","state","dispatch","status","id","DetailedDataSetStatusApi","userObj","userId","getMuiTheme","overrides","MuiTableCell","head","backgroundColor","MuiToolbar","root","display","MuiPaper","boxShadow","borderRadius","border","fetchHeaderButton","classes","headerButtons","ButtonRefresh","iconStyle","buttonStyle","handleLanguageChange","columns","name","label","options","filter","sort","textLabels","body","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","displaySelectToolbar","fixedHeader","filterType","download","print","selectableRows","divStyle","breadcrum","dataset","myContribution","responseData","footerButtons","backButton"],"mappings":"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","sourcesContent":["import { withStyles,  MuiThemeProvider, createMuiTheme, Button, Typography } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect} from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport DetailedDatasetStatus from \"../../../../redux/actions/api/DataSet/DatasetView/DetailedDataset\";\nimport ErrorFileDownload from \"../../../../redux/actions/api/DataSet/DatasetView/ErrorDownload\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Cached, SaveAlt} from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useParams } from \"react-router\";\n\nconst DetailedStatus = (props) => {\n\n        const detailedReport          =       useSelector((state) => state.detailedReport);\n        const dispatch = useDispatch();\n        const {status, id} = useParams();\n\n        useEffect(() => {\n                \n                 DetailedDataSetStatusApi()\n                 \n        }, []);\n\n        const DetailedDataSetStatusApi  = () =>{\n                const userObj           = new DetailedDatasetStatus(id);\n                const userId           = new ErrorFileDownload(id);\n                dispatch(APITransport(userObj));\n                dispatch(APITransport(userId));\n        }\n        \n\n        const getMuiTheme = () => createMuiTheme({\n                overrides: {\n                        MuiTableCell: {\n                                head    : {\n                                        backgroundColor : \"#c7c6c68a !important\"\n                                }\n                        },\n                        MuiToolbar: {\n                                 root: { \n                                         display: \"none\" \n                                        } \n                                },\n                        MuiPaper: {\n                                root:{\n                                        boxShadow       : 'none !important',\n                                        borderRadius    : 0,\n                                        border          : \"1px solid rgb(224 224 224)\"\n                                }\n                        }\n                },\n        \n        });\n\n        const fetchHeaderButton= () => {\n                return (\n                        <div className={classes.headerButtons}>\n                                <Typography  variant=\"h5\" >Validation Stage</Typography>\n                                {status !== \"published\" && <Button color={\"primary\" } size=\"medium\" className = {classes.ButtonRefresh} variant=\"outlined\"  onClick={() => DetailedDataSetStatusApi()}><Cached className ={classes.iconStyle}/>Refresh</Button>}\n                                <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={status !== \"published\" ? classes.buttonStyle : classes.ButtonRefresh} onClick={() => this.handleLanguageChange(\"domain\")}><SaveAlt className ={classes.iconStyle}/>Error Logs</Button>\n                        \n                        </div>\n                );\n        }\n\n        \n        const columns = [\n                {\n                        name    : \"srNo\",\n                        label   : \"s id\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                display : \"excluded\",\n                        },\n                },{\n                        name    : \"datasetId\",\n                        label   : \"Stage\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },\n                {\n                        name    : \"stage\",\n                        label   : \"Stage\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },\n                {\n                        name    : \"status\",\n                        label   : \"Status\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },\n                {\n                        name    : \"recordCount\",\n                        label   : \"Record Count\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                \n                        },\n                },\n                {\n                        name    : \"failedCount\",\n                        label   : \"Failed Count\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                \n                        },\n                }\n        \n        ];\n\n        const options = {\n                textLabels              :       {\n                        body            :       {},\n                        toolbar         :       {\n                                search          : \"Search\",\n                                viewColumns     : \"View Column\",\n                        },\n                        pagination      :       { rowsPerPage     : \"Rows per page\"},\n                        options         :       { sortDirection   : \"desc\" },\n                },\n                displaySelectToolbar    :       false,\n                fixedHeader             :       false,\n                filterType              :       \"checkbox\",\n                download                :       false,\n                print                   :       false,\n                filter                  :       false,\n                selectableRows          :       \"none\",\n        };\n\n        const { classes }               = props;\n        return (\n                <div className  =       {classes.divStyle}>\n                        <div className  = {classes.breadcrum}>\n                                <BreadCrum links = {[UrlConfig.dataset,UrlConfig.myContribution]} activeLink = \"Dataset details\" />\n                        </div>\n                        <div className = {classes.headerButtons}>\n                                {fetchHeaderButton()} \n                        </div>\n                        <MuiThemeProvider theme = {getMuiTheme()}>  \n                                <MUIDataTable\n                                        title   =       {`My Contribution`}\n                                        data    =       {detailedReport.responseData}\n                                        columns =               {columns}\n                                        options ={options}\n                                />\n                        </MuiThemeProvider>\n                        {status !== \"published\" && <div className = {classes.footerButtons}>\n                                <Button color = {\"primary\" } size = \"medium\" variant = \"outlined\" className = {classes.backButton} onClick = {() => this.handleLanguageChange(\"domain\")}>Abort Process</Button>\n                                \n                        </div>}\n                </div>\n        );\n};\n\nexport default withStyles(DataSet)(DetailedStatus);\n"]},"metadata":{},"sourceType":"module"}