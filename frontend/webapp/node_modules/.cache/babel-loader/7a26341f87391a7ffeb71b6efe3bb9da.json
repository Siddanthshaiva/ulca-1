{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/Dashboard.jsx\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChartStyles from \"../../../styles/web/chartStyles\";\nimport { ResponsiveContainer, BarChart, Bar, Brush, Cell, CartesianGrid, ReferenceLine, ReferenceArea, XAxis, YAxis, Tooltip, Legend, ErrorBar, LabelList, Rectangle } from 'recharts';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport { showSidebar } from '../../../redux/actions/apis/common/showSidebar';\nimport FetchLanguageDataSets from \"../../../redux/actions/apis/dashboard/languageDatasets\";\nimport ChartRenderHeader from \"./ChartRenderHeader\";\nimport Container from '@material-ui/core/Container';\nimport { isMobile } from 'react-device-detect';\nimport Button from '@material-ui/core/Button';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar jp = require('jsonpath');\n\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"];\n\nclass ChartRender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleApiCall = (dataType, value, criterions) => {\n      const apiObj = new FetchLanguageDataSets(dataType, value, criterions);\n      this.props.APITransport(apiObj);\n    };\n\n    this.handleCardNavigation = () => {\n      if (this.state.cardNavigation) {\n        this.fetchChartData();\n      } else {\n        this.handleOnClick(this.state.currentPage - 1);\n      }\n    };\n\n    this.handleLanguageChange = value => {\n      this.setState({\n        filterValue: value\n      });\n      this.handleOnClick(1, \"\", value);\n    };\n\n    this.state = {\n      loading: false,\n      word: \"\",\n      currentPage: 0,\n      dataSetValues: [],\n      filterValue: 'domain',\n      title: \"English-Indic language parallel corpus\"\n    };\n  }\n\n  getData(dataValue) {\n    let condition = `$..[*].${dataValue}`;\n    let dataCalue = jp.query(this.state.dataSetValues, condition);\n    return dataCalue;\n  }\n\n  componentDidMount() {\n    this.handleApiCall(\"parallel-corpus\", \"languagePairs\", []);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.dataValues !== this.props.dataValues) {\n      if (this.props.dataValues.length > 0) {\n        this.fetchChartData();\n      }\n    }\n  }\n\n  fetchChartData() {\n    if (this.props.dataValues.length > 0) {\n      let others = this.props.dataValues.slice(7, this.props.dataValues.length);\n      let othersCount = 0;\n      others.map(dataVal => {\n        othersCount = dataVal.value + othersCount;\n      });\n      let dataSetValues = this.props.dataValues.slice(0, 7);\n      let obj = {};\n\n      if (this.props.dataValues.length > 7) {\n        obj.value = othersCount;\n        obj.label = \"Others\";\n        dataSetValues.push(obj);\n      }\n\n      this.setState({\n        dataSetValues,\n        originalValues: this.props.dataValues\n      });\n\n      if (this.state.cardNavigation) {\n        this.setState({\n          cardNavigation: false\n        });\n      }\n    }\n  }\n\n  handleOnClick(value, event, filterValue) {\n    if (event && event.hasOwnProperty(\"label\") && event.label === \"Others\") {\n      let others = this.props.dataValues.slice(7, this.props.dataValues.length);\n      this.setState({\n        dataSetValues: others,\n        cardNavigation: true\n      });\n    } else {\n      switch (value) {\n        case 1:\n          this.handleApiCall(\"parallel-corpus\", filterValue ? filterValue : this.state.filterValue, [{\n            \"type\": \"PARAMS\",\n            \"sourceLanguage\": {\n              \"type\": \"PARAMS\",\n              \"value\": \"English\"\n            },\n            \"targetLanguage\": {\n              \"type\": \"PARAMS\",\n              \"value\": this.state.selectedLanguage ? this.state.selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label\n            }\n          }]);\n          this.setState({\n            currentPage: value,\n            dataSetValues: [],\n            selectedLanguage: this.state.selectedLanguage ? this.state.selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label,\n            title: `English-${this.state.selectedLanguage ? this.state.selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label}  parallel corpus - Grouped by ${filterValue == \"domain\" ? \"Domain\" : filterValue == \"source\" ? \"Source\" : filterValue == \"collectionMethod\" ? \"Collection Method\" : \"Domain\"}`\n          });\n          break;\n\n        case 2:\n          this.handleApiCall(\"parallel-corpus\", this.state.filterValue == \"source\" ? \"domain\" : \"source\", [{\n            \"type\": \"PARAMS\",\n            \"sourceLanguage\": {\n              \"type\": \"PARAMS\",\n              \"value\": \"English\"\n            },\n            \"targetLanguage\": {\n              \"type\": \"PARAMS\",\n              \"value\": this.state.selectedLanguage\n            }\n          }, {\n            \"type\": \"PARAMS\",\n            \"value\": event && event.hasOwnProperty(\"label\") && event.label\n          }]);\n          this.setState({\n            currentPage: value,\n            dataSetValues: [],\n            title: `English-${this.state.selectedLanguage} parallel corpus`,\n            filterValue: 'domain'\n          });\n          break;\n\n        case 0:\n          this.handleApiCall(\"parallel-corpus\", \"languagePairs\", []);\n          this.setState({\n            currentPage: value,\n            filterValue: 'domain',\n            selectedLanguage: '',\n            dataSetValues: [],\n            title: \"English-Indic language parallel corpus\"\n          });\n          break;\n\n        default:\n      }\n    }\n  }\n\n  fetchLanuagePairButtons() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: this.state.filterValue === \"domain\" ? \"primary\" : \"light\",\n        style: this.state.filterValue === \"domain\" ? {\n          backgroundColor: \"#E8F5F8\"\n        } : {},\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => this.handleLanguageChange(\"domain\"),\n        children: \"Domain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: this.state.filterValue === \"source\" ? \"primary\" : \"light\",\n        style: this.state.filterValue === \"source\" ? {\n          backgroundColor: \"#E8F5F8\"\n        } : {},\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => this.handleLanguageChange(\"source\"),\n        children: \"Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: this.state.filterValue === \"collectionMethod\" ? \"primary\" : \"light\",\n        style: this.state.filterValue === \"collectionMethod\" ? {\n          backgroundColor: \"#E8F5F8\"\n        } : {},\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => this.handleLanguageChange(\"collectionMethod\"),\n        children: \"Collection Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    console.log(this.state.dataSetValues);\n    const {\n      classes\n    } = this.props;\n    this.getData();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChartRenderHeader, {\n        handleOnClick: this.handleOnClick.bind(this),\n        currentPage: this.state.currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cardHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.cardHeaderContainer,\n                children: (this.state.cardNavigation || this.state.currentPage !== 0) && this.state.dataSetValues.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"light\",\n                    size: \"medium\",\n                    variant: \"contained\",\n                    className: classes.backButton,\n                    startIcon: /*#__PURE__*/_jsxDEV(BackIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 139\n                    }, this),\n                    onClick: () => this.handleCardNavigation(),\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.seperator\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.title,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                value: \"\",\n                variant: \"h6\",\n                children: this.state.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.langPairButtons,\n            children: this.state.currentPage === 1 && this.fetchLanuagePairButtons()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"95%\",\n              height: 450,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                width: 900,\n                height: 450,\n                data: this.state.dataSetValues,\n                maxBarSize: 100,\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"label\",\n                  textAnchor: isMobile ? \"end\" : \"middle\",\n                  tick: {\n                    angle: isMobile ? -60 : 0\n                  },\n                  height: isMobile ? 100 : 60,\n                  interval: 0,\n                  position: \"insideLeft\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  type: \"number\",\n                  dx: 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  horizontal: true,\n                  vertical: false,\n                  textAnchor: \"middle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"value\",\n                  radius: [4, 4, 0, 0],\n                  maxBarSize: 30,\n                  onClick: event => {\n                    this.handleOnClick(this.state.currentPage + 1, event);\n                  },\n                  className: this.state.currentPage !== 2 && classes.cursor,\n                  children: this.state.dataSetValues.length > 0 && this.state.dataSetValues.map((entry, index) => {\n                    const color = colors[index < 9 ? index : index % 10];\n                    return /*#__PURE__*/_jsxDEV(Cell, {\n                      fill: `#${color}`\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 56\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dataValues: state.dataValues\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  APITransport,\n  showSidebar\n}, dispatch);\n\nexport default withRouter(withStyles(ChartStyles)(connect(mapStateToProps, mapDispatchToProps)(ChartRender)));","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/Dashboard.jsx"],"names":["React","withRouter","withStyles","bindActionCreators","connect","Paper","Typography","ChartStyles","ResponsiveContainer","BarChart","Bar","Brush","Cell","CartesianGrid","ReferenceLine","ReferenceArea","XAxis","YAxis","Tooltip","Legend","ErrorBar","LabelList","Rectangle","createMuiTheme","APITransport","showSidebar","FetchLanguageDataSets","ChartRenderHeader","Container","isMobile","Button","BackIcon","jp","require","colors","ChartRender","Component","constructor","props","handleApiCall","dataType","value","criterions","apiObj","handleCardNavigation","state","cardNavigation","fetchChartData","handleOnClick","currentPage","handleLanguageChange","setState","filterValue","loading","word","dataSetValues","title","getData","dataValue","condition","dataCalue","query","componentDidMount","componentDidUpdate","prevProps","prevState","dataValues","length","others","slice","othersCount","map","dataVal","obj","label","push","originalValues","event","hasOwnProperty","selectedLanguage","fetchLanuagePairButtons","classes","backgroundColor","backButton","render","console","log","bind","container","card","cardHeader","cardHeaderContainer","seperator","langPairButtons","paper","angle","cursor","entry","index","color","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChartStyles from \"../../../styles/web/chartStyles\";\nimport {\n    ResponsiveContainer,\n    BarChart, Bar, Brush, Cell, CartesianGrid, ReferenceLine, ReferenceArea,\n    XAxis, YAxis, Tooltip, Legend, ErrorBar, LabelList, Rectangle\n} from 'recharts';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport { showSidebar } from '../../../redux/actions/apis/common/showSidebar';\nimport FetchLanguageDataSets from \"../../../redux/actions/apis/dashboard/languageDatasets\";\nimport ChartRenderHeader from \"./ChartRenderHeader\"\nimport Container from '@material-ui/core/Container';\nimport { isMobile } from 'react-device-detect';\nimport Button from '@material-ui/core/Button';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nvar jp = require('jsonpath')\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"]\n\nclass ChartRender extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            word: \"\",\n            currentPage: 0,\n            dataSetValues: [],\n            filterValue: 'domain',\n            title: \"English-Indic language parallel corpus\"\n        }\n\n    }\n\n    getData(dataValue) {\n        let condition = `$..[*].${dataValue}`\n        let dataCalue = jp.query(this.state.dataSetValues, condition)\n        return dataCalue\n    }\n\n    componentDidMount() {\n        this.handleApiCall(\"parallel-corpus\", \"languagePairs\", [])\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.dataValues !== this.props.dataValues) {\n            if (this.props.dataValues.length > 0) {\n                this.fetchChartData()\n            }\n\n        }\n    }\n\n    fetchChartData() {\n        if (this.props.dataValues.length > 0) {\n            let others = this.props.dataValues.slice(7, this.props.dataValues.length)\n            let othersCount = 0\n            others.map(dataVal => {\n                othersCount = dataVal.value + othersCount\n\n            })\n\n            let dataSetValues = this.props.dataValues.slice(0, 7)\n            let obj = {}\n\n            if (this.props.dataValues.length > 7) {\n                obj.value = othersCount\n                obj.label = \"Others\"\n                dataSetValues.push(obj)\n            }\n\n            this.setState({ dataSetValues, originalValues: this.props.dataValues })\n\n            if (this.state.cardNavigation) {\n                this.setState({\n                    cardNavigation: false\n                })\n            }\n        }\n\n    }\n\n    handleApiCall = (dataType, value, criterions) => {\n        const apiObj = new FetchLanguageDataSets(dataType, value, criterions);\n        this.props.APITransport(apiObj);\n    }\n\n    handleOnClick(value, event, filterValue) {\n        if (event && event.hasOwnProperty(\"label\") && event.label === \"Others\") {\n            let others = this.props.dataValues.slice(7, this.props.dataValues.length)\n            this.setState({\n                dataSetValues: others,\n                cardNavigation: true\n            })\n        } else {\n            switch (value) {\n                case 1:\n                    this.handleApiCall(\"parallel-corpus\", filterValue ? filterValue : this.state.filterValue, [{ \"type\": \"PARAMS\", \"sourceLanguage\": { \"type\": \"PARAMS\", \"value\": \"English\" }, \"targetLanguage\": { \"type\": \"PARAMS\", \"value\": this.state.selectedLanguage ? this.state.selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label } }])\n                    this.setState({ currentPage: value, dataSetValues: [], selectedLanguage: this.state.selectedLanguage ? this.state.selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label, title: `English-${this.state.selectedLanguage ? this.state.selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label}  parallel corpus - Grouped by ${(filterValue == \"domain\") ? \"Domain\" : (filterValue == \"source\") ? \"Source\" : filterValue == \"collectionMethod\" ? \"Collection Method\" : \"Domain\"}` })\n                    break;\n                case 2:\n                    this.handleApiCall(\"parallel-corpus\", this.state.filterValue == \"source\" ? \"domain\" : \"source\", [{ \"type\": \"PARAMS\", \"sourceLanguage\": { \"type\": \"PARAMS\", \"value\": \"English\" }, \"targetLanguage\": { \"type\": \"PARAMS\", \"value\": this.state.selectedLanguage } }, { \"type\": \"PARAMS\", \"value\": event && event.hasOwnProperty(\"label\") && event.label }])\n                    this.setState({ currentPage: value, dataSetValues: [], title: `English-${this.state.selectedLanguage} parallel corpus`, filterValue: 'domain' })\n                    break;\n                case 0:\n                    this.handleApiCall(\"parallel-corpus\", \"languagePairs\", [])\n                    this.setState({ currentPage: value, filterValue: 'domain', selectedLanguage: '', dataSetValues: [], title: \"English-Indic language parallel corpus\" })\n                    break;\n                default:\n\n            }\n        }\n    }\n\n    handleCardNavigation = () => {\n        if (this.state.cardNavigation) {\n            this.fetchChartData()\n        } else {\n            this.handleOnClick(this.state.currentPage - 1)\n        }\n    }\n\n    handleLanguageChange = (value) => {\n        this.setState({ filterValue: value })\n        this.handleOnClick(1, \"\", value)\n    }\n\n    fetchLanuagePairButtons() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Button color={this.state.filterValue === \"domain\" ? \"primary\" : \"light\"} style={ this.state.filterValue === \"domain\" ? {backgroundColor: \"#E8F5F8\"} : {} } size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => this.handleLanguageChange(\"domain\")}>Domain</Button>\n                <Button color={this.state.filterValue === \"source\" ? \"primary\" : \"light\"} style={ this.state.filterValue === \"source\" ? {backgroundColor: \"#E8F5F8\"} : {} }size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => this.handleLanguageChange(\"source\")}>Source</Button>\n                <Button color={this.state.filterValue === \"collectionMethod\" ? \"primary\" : \"light\"} style={ this.state.filterValue === \"collectionMethod\" ? {backgroundColor: \"#E8F5F8\"} : {} } size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => this.handleLanguageChange(\"collectionMethod\")}>Collection Method</Button>\n           \n            </div>\n        )\n    }\n\n    render() {\n        console.log(this.state.dataSetValues)\n        const { classes } = this.props;\n      \n        this.getData()\n\n        return (\n            <>\n                <ChartRenderHeader\n                    handleOnClick={this.handleOnClick.bind(this)}\n                    currentPage={this.state.currentPage}\n\n                />\n                <Container className={classes.container}>\n\n                    <div className={classes.card}>\n                        <div className={classes.cardHeader}>\n                            <div>\n                                \n                                    <div className={classes.cardHeaderContainer}>\n                                    {(this.state.cardNavigation || this.state.currentPage !== 0) && this.state.dataSetValues.length > 0 &&\n                                    <>\n                                        <Button color=\"light\" size=\"medium\" variant=\"contained\" className={classes.backButton} startIcon={<BackIcon />} onClick={() => this.handleCardNavigation()}>Back</Button>\n                                    \n                                        <div className={classes.seperator}></div>\n                                        </>\n                                    }\n                                    </div>\n                                \n                            </div>\n\n                            <div className={classes.title}>\n                                <Typography value=\"\" variant=\"h6\">\n\n                                    {this.state.title}\n                                </Typography>\n                            </div>\n                        </div>\n                        <div className={classes.langPairButtons}>\n                            {this.state.currentPage === 1 && this.fetchLanuagePairButtons()}\n                        </div>\n                        <Paper elevation={3} className={classes.paper}>\n\n                            <ResponsiveContainer width=\"95%\" height={450}>\n                                <BarChart width={900} height={450} data={this.state.dataSetValues} maxBarSize={100} >\n                                    <XAxis dataKey=\"label\"\n                                        textAnchor={isMobile ? \"end\" : \"middle\"}\n                                        tick={{ angle: isMobile ? -60 : 0 }} height={isMobile ? 100 : 60}\n                                        interval={0}\n                                        position=\"insideLeft\"\n\n                                    />\n                                    <YAxis type=\"number\" dx={0} />\n                                    <CartesianGrid horizontal={true} vertical={false} textAnchor={\"middle\"} />\n\n                                    <Tooltip />\n                                    <Bar dataKey=\"value\" radius={[4, 4, 0, 0]} maxBarSize={30} onClick={(event) => { this.handleOnClick(this.state.currentPage + 1, event) }} className={this.state.currentPage !== 2 && classes.cursor}>\n\n                                        {\n                                            this.state.dataSetValues.length > 0 && this.state.dataSetValues.map((entry, index) => {\n                                                const color = colors[index < 9 ? index : index % 10]\n                                                return <Cell key={index} fill={`#${color}`} />;\n                                            })\n                                        }\n                                    </Bar>\n                                </BarChart>\n                            </ResponsiveContainer>\n\n                        </Paper>\n                    </div>\n                </Container>\n\n            </>\n        )\n\n    }\n\n}\n\nconst mapStateToProps = state => ({\n\n    dataValues: state.dataValues\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    {\n        APITransport,\n        showSidebar\n    },\n    dispatch\n);\n\nexport default withRouter(withStyles(ChartStyles)(connect(mapStateToProps, mapDispatchToProps)(ChartRender)));\n"]},"metadata":{},"sourceType":"module"}