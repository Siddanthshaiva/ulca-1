{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Theme from \"../../theme/theme-default\";\nimport { withStyles, Typography, Link, MuiThemeProvider, createMuiTheme, Paper, Grid, Button } from \"@material-ui/core\";\nimport ChartStyles from \"../../styles/Dashboard\";\nimport { ResponsiveContainer, BarChart, Bar, Brush, Cell, CartesianGrid, ReferenceLine, ReferenceArea, XAxis, YAxis, Tooltip, Legend, ErrorBar, LabelList, Rectangle } from 'recharts';\nimport Select from 'react-select';\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\nimport { isMobile } from 'react-device-detect';\nimport { FilterList } from '@material-ui/icons';\nimport Header from '../../components/common/Header';\nimport authenticate from '../../../configs/authenticate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar jp = require('jsonpath');\n\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"];\n\nconst ChartRender = props => {\n  _s();\n\n  const [selectedOption, setselectedOption] = useState({\n    value: 'Parallel Corpus',\n    label: 'Parallel Corpus'\n  });\n  const [title, setTitle] = useState(\"Number of parallel sentences per language with English\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const DashboardReport = useSelector(state => state.dashboardReport);\n  const {\n    classes\n  } = props;\n  const options = [{\n    value: 'Parallel Corpus',\n    label: 'Parallel Corpus'\n  }, {\n    value: 'Monolingual Dataset',\n    label: 'Monolingual Dataset'\n  }, {\n    value: 'ASR / TTS Dataset',\n    label: 'ASR / TTS Dataset'\n  }, {\n    value: 'OCR Dataset',\n    label: 'OCR Dataset'\n  }];\n  useEffect(() => {\n    const userObj = new FetchLanguageDataSets(\"parallel-corpus\", \"languagePairs\");\n    dispatch(APITransport(userObj));\n\n    if (authenticate()) {\n      history.push(`${process.env.PUBLIC_URL}/private-dashboard`);\n    } else {\n      localStorage.removeItem('token');\n      history.push(`${process.env.PUBLIC_URL}/dashboard`);\n    }\n  }, []);\n  const customStyles = {\n    option: (provided, state) => ({ ...provided,\n      borderColor: \"green\",\n      color: 'black',\n      padding: 20,\n      background: state.isSelected && \"#c7c6c68a !important\"\n    }),\n    control: (base, state) => ({ ...base,\n      // This line disable the blue border\n      borderColor: \"#392C71\",\n      border: \"1px solid rgba(57, 44, 113, 0.5)\",\n      boxShadow: state.isFocused ? 0 : 0,\n      fontFamily: \"Source Sans Pro, Arial, sans-serif \"\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!authenticate() && /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: Theme,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.titleBar,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"b\",\n            component: \"h3\",\n            className: classes.Typography,\n            children: \"Dataset Type :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: classes.select,\n            styles: customStyles,\n            color: \"primary\",\n            value: selectedOption,\n            onChange: value => setselectedOption(value),\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"medium\",\n            variant: \"outlined\",\n            className: classes.filterButton,\n            onClick: () => this.handleLanguageChange(\"domain\"),\n            children: [/*#__PURE__*/_jsxDEV(FilterList, {\n              className: classes.iconStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 162\n            }, this), \"Filter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"medium\",\n            variant: \"outlined\",\n            className: classes.filterButtonIcon,\n            onClick: () => this.handleLanguageChange(\"domain\"),\n            children: /*#__PURE__*/_jsxDEV(FilterList, {\n              className: classes.iconStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 166\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            value: \"\",\n            variant: \"h6\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"95%\",\n          height: 450,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 900,\n            height: 450,\n            data: DashboardReport,\n            maxBarSize: 100,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"label\",\n              textAnchor: isMobile ? \"end\" : \"middle\",\n              tick: {\n                angle: isMobile ? -60 : 0\n              },\n              height: isMobile ? 100 : 60,\n              interval: 0,\n              position: \"insideLeft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dx: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              horizontal: true,\n              vertical: false,\n              textAnchor: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"value\",\n              radius: [4, 4, 0, 0],\n              maxBarSize: 30,\n              children: DashboardReport.length > 0 && DashboardReport.map((entry, index) => {\n                const color = colors[index < 9 ? index : index % 10];\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: `#${color}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 13\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChartRender, \"w7VDSkc2rVDQrn7f4OPAsTicKB4=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = ChartRender;\nexport default withStyles(ChartStyles(Theme))(ChartRender);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartRender\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","Theme","withStyles","Typography","Link","MuiThemeProvider","createMuiTheme","Paper","Grid","Button","ChartStyles","ResponsiveContainer","BarChart","Bar","Brush","Cell","CartesianGrid","ReferenceLine","ReferenceArea","XAxis","YAxis","Tooltip","Legend","ErrorBar","LabelList","Rectangle","Select","APITransport","FetchLanguageDataSets","isMobile","FilterList","Header","authenticate","jp","require","colors","ChartRender","props","selectedOption","setselectedOption","value","label","title","setTitle","history","dispatch","DashboardReport","state","dashboardReport","classes","options","userObj","push","process","env","PUBLIC_URL","localStorage","removeItem","customStyles","option","provided","borderColor","color","padding","background","isSelected","control","base","border","boxShadow","isFocused","fontFamily","container","paper","titleBar","select","filterButton","handleLanguageChange","iconStyle","filterButtonIcon","angle","length","map","entry","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Theme from \"../../theme/theme-default\";\r\n\r\nimport { withStyles, Typography,Link, MuiThemeProvider, createMuiTheme,Paper, Grid, Button } from \"@material-ui/core\";\r\n\r\nimport ChartStyles from \"../../styles/Dashboard\";\r\nimport {\r\n    ResponsiveContainer,\r\n    BarChart, Bar, Brush, Cell, CartesianGrid, ReferenceLine, ReferenceArea,\r\n    XAxis, YAxis, Tooltip, Legend, ErrorBar, LabelList, Rectangle\r\n} from 'recharts';\r\nimport Select from 'react-select';\r\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\r\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\r\n\r\nimport { isMobile } from 'react-device-detect';\r\nimport {FilterList} from '@material-ui/icons';\r\nimport Header from '../../components/common/Header';\r\nimport authenticate from '../../../configs/authenticate';\r\n\r\nvar jp = require('jsonpath')\r\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"]\r\n\r\n\r\nconst ChartRender = (props) => {\r\n        const [selectedOption, setselectedOption]   = useState({ value: 'Parallel Corpus', label: 'Parallel Corpus' });\r\n        const [title, setTitle]                     = useState(\"Number of parallel sentences per language with English\");\r\n        const history                               = useHistory();\r\n        const dispatch                              = useDispatch();\r\n        const DashboardReport                       = useSelector( (state) => state.dashboardReport);\r\n        const { classes }                           = props;\r\n        const options = [\r\n            { value: 'Parallel Corpus', label: 'Parallel Corpus' },\r\n            { value: 'Monolingual Dataset', label: 'Monolingual Dataset' },\r\n            { value: 'ASR / TTS Dataset', label: 'ASR / TTS Dataset' },\r\n            { value: 'OCR Dataset', label: 'OCR Dataset' },\r\n          ];\r\n\r\n    useEffect(() => {\r\n        const userObj = new FetchLanguageDataSets(\"parallel-corpus\", \"languagePairs\");\r\n        dispatch(APITransport(userObj));\r\n        if (authenticate()) {\r\n            history.push(`${process.env.PUBLIC_URL}/private-dashboard`)\r\n        } else {\r\n            localStorage.removeItem('token')\r\n            history.push(`${process.env.PUBLIC_URL}/dashboard`)\r\n\r\n        }\r\n    }, []);\r\n\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n          ...provided,\r\n          borderColor:\"green\",\r\n          color: 'black',\r\n          padding: 20,\r\n          background: state.isSelected && \"#c7c6c68a !important\",\r\n\r\n        }),\r\n        control: (base, state) => ({\r\n            ...base,\r\n\r\n            // This line disable the blue border\r\n            borderColor:\"#392C71\",\r\n            border : \"1px solid rgba(57, 44, 113, 0.5)\",\r\n            boxShadow: state.isFocused ? 0 : 0,\r\n            fontFamily: \"Source Sans Pro, Arial, sans-serif \"\r\n          })\r\n\r\n      }\r\n\r\n     return (\r\n        <>\r\n            \t{ !authenticate() &&\r\n\t\t\t<MuiThemeProvider theme={Theme}>\r\n\t\t\t\t<Header /><br /><br /><br /><br />\r\n\t\t\t</MuiThemeProvider>\r\n        \t}\r\n                <div className={classes.container}>\r\n\r\n\r\n                    {/* <div className={classes.breadcrum}>\r\n                <BreadCrum links={[\"Dataset\"]} activeLink=\"Submit Dataset\" />\r\n            </div> */}\r\n            <Paper elevation={3} className={classes.paper}>\r\n\r\n\r\n            \t<div className={classes.titleBar}>\r\n                <Typography variant=\"b\" component=\"h3\" className = {classes.Typography}>Dataset Type :</Typography>\r\n                <Select className = {classes.select} styles= {customStyles} color= \"primary\"\r\n                \tvalue   ={selectedOption}\r\n                    \tonChange={(value)=>setselectedOption( value)}\r\n                    \toptions={options}\r\n                />\r\n                <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.filterButton} onClick={() => this.handleLanguageChange(\"domain\")}><FilterList className ={classes.iconStyle}/>Filter</Button>\r\n                <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.filterButtonIcon} onClick={() => this.handleLanguageChange(\"domain\")}><FilterList className ={classes.iconStyle}/></Button>\r\n                </div>\r\n\t\t<div className={classes.title}>\r\n\t\t\t<Typography value=\"\" variant=\"h6\">\r\n\t\t\t\t{title}\r\n\t\t\t</Typography>\r\n\t\t</div>\r\n\t\t\t<ResponsiveContainer width=\"95%\" height={450}>\r\n\t\t\t<BarChart width={900} height={450} data={DashboardReport} maxBarSize={100} >\r\n\t\t\t<XAxis dataKey=\"label\"\r\n\t\t\t\ttextAnchor={isMobile ? \"end\" : \"middle\"}\r\n\t\t\t\ttick={{ angle: isMobile ? -60 : 0 }} height={isMobile ? 100 : 60}\r\n\t\t\t\tinterval={0}\r\n\t\t\t\tposition=\"insideLeft\"\r\n\t\t\t/>\r\n\t\t\t<YAxis type=\"number\" dx={0} />\r\n\t\t\t<CartesianGrid horizontal={true} vertical={false} textAnchor={\"middle\"} />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Bar dataKey=\"value\" radius={[4, 4, 0, 0]} maxBarSize={30}>\r\n\t\t\t\t{ DashboardReport.length > 0 && DashboardReport.map((entry, index) => {\r\n\t\t\t\t\tconst color = colors[index < 9 ? index : index % 10]\r\n\t\t\t\t\treturn <Cell key={index} fill={`#${color}`} />;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t</Bar>\r\n\t\t\t</BarChart>\r\n\t\t\t</ResponsiveContainer>\r\n\r\n                        </Paper>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default withStyles(ChartStyles(Theme))(ChartRender);\r\n"]},"metadata":{},"sourceType":"module"}