{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/MySearches.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, Typography, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MySearchReport from \"../../../../redux/actions/api/DataSet/DatasetSearch/MySearches\";\nimport { PageChange, RowChange } from \"../../../../redux/actions/api/DataSet/DatasetView/DatasetAction\";\nimport C from \"../../../../redux/actions/constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Cached } from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySearches = props => {\n  _s();\n\n  const detailedReport = useSelector(state => state.mySearchReport);\n  const PageInfo = useSelector(state => state.searchPageDetails);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [page, setPage] = useState(0);\n  useEffect(() => {\n    MySearchListApi();\n  }, []);\n  console.log(PageInfo);\n\n  const MySearchListApi = () => {\n    const userObj = new MySearchReport();\n    dispatch(APITransport(userObj));\n  };\n\n  const processTableClickedNextOrPrevious = (page, sortOrder) => {\n    dispatch(PageChange(page, C.SEARCH_PAGE_NO));\n    setPage(page);\n  };\n\n  const fetchHeaderButton = () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      size: \"medium\",\n      variant: \"outlined\",\n      className: classes.ButtonRefresh,\n      onClick: () => MySearchListApi(),\n      children: [/*#__PURE__*/_jsxDEV(Cached, {\n        className: classes.iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 149\n      }, this), \"Refresh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this);\n  };\n\n  const renderAction = rowData => {\n    const status = rowData[4].toLowerCase();\n    history.push({\n      pathname: `/search-and-download-rec/${status}/${rowData[0]}`,\n      pageInfo: page\n    }); // history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/${status}/${rowData[0]}`)\n  };\n\n  const columns = [{\n    name: \"sr_no\",\n    label: \"SR No\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"search_criteria\",\n    label: \"Search Criteria\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"searched_on\",\n    label: \"Searched On\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"count\",\n    label: \"#Record\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"status\",\n    label: \"Status\",\n    options: {\n      filter: true,\n      sort: true\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {\n        noMatch: \"No records\"\n      },\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    filter: {\n      all: \"All\",\n      title: \"Status\",\n      reset: \"Clear All\"\n    },\n    customToolbar: fetchHeaderButton,\n    filterType: \"checkbox\",\n    download: true,\n    print: false,\n    fixedHeader: true,\n    selectableRows: \"none\",\n    sortOrder: {\n      name: 'registered_time',\n      direction: 'desc'\n    },\n    rowsPerPageOptions: [10, 25, 50, 100],\n    rowsPerPage: PageInfo.count,\n    page: PageInfo.page,\n    viewColumns: false,\n    selectableRows: \"none\",\n    onTableChange: (action, tableState) => {\n      switch (action) {\n        case \"changePage\":\n          processTableClickedNextOrPrevious(tableState.page);\n          break;\n\n        case \"changeRowsPerPage\":\n          dispatch(RowChange(tableState.rowsPerPage, C.SEARCH_ROW_COUNT_CHANGE));\n          break;\n\n        default:\n      }\n    },\n    onRowClick: (rowData, rowMeta) => rowData[3] && renderAction(rowData)\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [UrlConfig.dataset],\n        activeLink: \"My Searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MUIDataTable, {\n      title: `My Searches`,\n      data: detailedReport.responseData,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 17\n  }, this);\n};\n\n_s(MySearches, \"0ZpSwX4gqUxeh9GVnqWePngmSZk=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = MySearches;\nexport default withStyles(DataSet)(MySearches);\n\nvar _c;\n\n$RefreshReg$(_c, \"MySearches\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/MySearches.jsx"],"names":["withStyles","Typography","MuiThemeProvider","createMuiTheme","Button","BreadCrum","React","useEffect","useState","DataSet","APITransport","MUIDataTable","MySearchReport","PageChange","RowChange","C","useDispatch","useSelector","Cached","UrlConfig","useHistory","MySearches","props","detailedReport","state","mySearchReport","PageInfo","searchPageDetails","dispatch","history","page","setPage","MySearchListApi","console","log","userObj","processTableClickedNextOrPrevious","sortOrder","SEARCH_PAGE_NO","fetchHeaderButton","classes","ButtonRefresh","iconStyle","renderAction","rowData","status","toLowerCase","push","pathname","pageInfo","columns","name","label","options","filter","sort","display","textLabels","body","noMatch","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","all","title","reset","customToolbar","filterType","download","print","fixedHeader","selectableRows","direction","rowsPerPageOptions","count","onTableChange","action","tableState","SEARCH_ROW_COUNT_CHANGE","onRowClick","rowMeta","breadcrum","dataset","responseData"],"mappings":"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","sourcesContent":["import { withStyles, Typography, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect,useState} from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MySearchReport from \"../../../../redux/actions/api/DataSet/DatasetSearch/MySearches\";\nimport {PageChange, RowChange} from \"../../../../redux/actions/api/DataSet/DatasetView/DatasetAction\";\nimport C from \"../../../../redux/actions/constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Cached} from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport {  useHistory } from \"react-router-dom\";\n\nconst MySearches = (props) => {\n\n        const detailedReport            =       useSelector((state) => state.mySearchReport);\n        const PageInfo            =       useSelector((state) => state.searchPageDetails);\n        const dispatch                  = useDispatch();\n        const history                   = useHistory();\n        const [page, setPage]           = useState(0);\n        \n        useEffect(() => {\n                MySearchListApi()   \n        }, []);\n\n        console.log(PageInfo)\n        const  MySearchListApi  = () =>{\n                \n                const userObj         = new MySearchReport()\n                dispatch(APITransport(userObj));\n        }\n\n        const processTableClickedNextOrPrevious = (page, sortOrder) => {\n                dispatch(PageChange(page, C.SEARCH_PAGE_NO));\n               setPage(page)\n                }\n              \n\n       \n\n        const fetchHeaderButton= () => {\n            return <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.ButtonRefresh}  onClick={() =>MySearchListApi() }><Cached className ={classes.iconStyle}/>Refresh</Button>\n    }\n\n    const renderAction = (rowData) =>{\n\n        const status = rowData[4].toLowerCase();\n\n        history.push({ \n                pathname: `/search-and-download-rec/${status}/${rowData[0]}`,\n                pageInfo: page\n               });\n        // history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/${status}/${rowData[0]}`)\n    }\n\n        \n        const columns = [\n                {\n                        name    : \"sr_no\",\n                        label   : \"SR No\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                display : \"excluded\"\n                                \n                        },\n                },\n                {\n                        name    : \"search_criteria\",\n                        label   : \"Search Criteria\",\n                        options : {\n                                filter  : false,\n                                sort    : true,\n                        },\n                },\n                {\n                        name    : \"searched_on\",\n                        label   : \"Searched On\",\n                        options : {\n                                filter  : false,\n                                sort    : true,\n                        },\n                },{\n                        name    : \"count\",\n                        label   : \"#Record\",\n                        options : {\n                                filter  : false,\n                                sort    : true,\n                                \n                  }  },\n                {\n                        name    : \"status\",\n                        label   : \"Status\",\n                        options : {\n                                filter  : true,\n                                sort    : true,\n                                \n                        },\n                }\n        \n        ];\n\n        const options = {\n                textLabels              :       {\n                        body            :       {\n                                noMatch: \"No records\"\n                        },\n                        toolbar         :       {\n                                search          : \"Search\",\n                                viewColumns     : \"View Column\",\n                        },\n                        pagination      :       { rowsPerPage     : \"Rows per page\"},\n                        options         :       { sortDirection   : \"desc\" },\n                },\n                filter: {\n                        all: \"All\",\n                        title: \"Status\",\n                        reset:\"Clear All\"\n                 },\n                customToolbar: fetchHeaderButton,\n                filterType: \"checkbox\",\n                download: true,\n                print: false,\n                fixedHeader: true,\n                \n                selectableRows: \"none\",\n                sortOrder: {\n                  name: 'registered_time',\n                  direction: 'desc'\n                },\n                rowsPerPageOptions      :       [10,25,50,100],\n                rowsPerPage:PageInfo.count,\n               \n                page: PageInfo.page,\n                viewColumns     : false,\n                selectableRows          :       \"none\",\n                onTableChange: (action, tableState) => {\n                        switch (action) {\n                          case \"changePage\":\n                            processTableClickedNextOrPrevious(\n                              tableState.page\n                            );\n                            break;\n                            case \"changeRowsPerPage\":\n                                dispatch(RowChange(tableState.rowsPerPage, C.SEARCH_ROW_COUNT_CHANGE))\n                                break;\n                          default:\n                        }\n                      },\n\n                onRowClick                 : (rowData, rowMeta) =>rowData[3] &&  renderAction(rowData)\n        };\n\n        const { classes }               = props;\n\n        return (\n                <div >\n                        <div className  = {classes.breadcrum}>\n                                <BreadCrum links = {[UrlConfig.dataset]} activeLink = \"My Searches\" />\n                        </div>\n\n                                <MUIDataTable\n                                        title   =       {`My Searches`}\n                                        data    =       {detailedReport.responseData}\n                                        columns =               {columns}\n                                        options ={options}\n                                />\n\n                        \n                </div>\n        );\n};\n\nexport default withStyles(DataSet)(MySearches);\n"]},"metadata":{},"sourceType":"module"}