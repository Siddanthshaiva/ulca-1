{"ast":null,"code":"import C from '../../actions/constants';\n\nvar jp = require('jsonpath');\n\nconst initialState = {\n  responseData: []\n};\n\nconst getTime = duration => {\n  var milliseconds = parseInt(duration % 1000 / 100),\n      seconds = parseInt(duration / 1000 % 60),\n      minutes = parseInt(duration / (1000 * 60) % 60),\n      hours = parseInt(duration / (1000 * 60 * 60) % 24);\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n\nfunction removeDuplicates(originalArray, prop) {\n  var newArray = [];\n  var lookupObject = {};\n\n  for (var i in originalArray) {\n    lookupObject[originalArray[i][prop]] = originalArray[i];\n  }\n\n  for (i in lookupObject) {\n    newArray.push(lookupObject[i]);\n  }\n\n  return newArray;\n}\n\nconst getUserEventData = payload => {\n  let result = [];\n  payload.forEach(res => {\n    res.forEach(data => {\n      const {\n        src,\n        initial,\n        bleu_score,\n        final,\n        time_spent,\n        s_id,\n        user_events\n      } = data.context.cdata;\n      var index = result.findIndex(row => row.s_id === s_id);\n\n      if (index < 0) {\n        src && result.push({\n          src,\n          mt: initial !== undefined ? initial : \"\",\n          bleu_score: Number(bleu_score).toFixed(2),\n          tgt: final,\n          time_spent: getTime(time_spent),\n          s_id,\n          user_events: user_events !== undefined ? user_events : []\n        });\n      } else {\n        result[index] = {\n          src,\n          mt: initial !== undefined ? initial : \"\",\n          bleu_score: Number(bleu_score).toFixed(2),\n          tgt: final,\n          time_spent: getTime(time_spent),\n          s_id,\n          user_events: result[index].user_events !== undefined ? result[index].user_events.concat(data.context.cdata.user_events) : []\n        };\n      }\n    });\n  }); // let latestEvent = removeDuplicates(result, 's_id')\n  // return latestEvent;\n\n  console.log(result);\n  return result;\n};\n\nexport default reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case C.GET_CONTRIBUTION_LIST:\n      return {\n        getUserEvent: getUserEventData(action.payload.responseData),\n        ...state\n      };\n\n    case C.CLEAR_USER_EVENT:\n      return { ...initialState\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/DataSet/myContribution.js"],"names":["C","jp","require","initialState","responseData","getTime","duration","milliseconds","parseInt","seconds","minutes","hours","removeDuplicates","originalArray","prop","newArray","lookupObject","i","push","getUserEventData","payload","result","forEach","res","data","src","initial","bleu_score","final","time_spent","s_id","user_events","context","cdata","index","findIndex","row","mt","undefined","Number","toFixed","tgt","concat","console","log","reducer","state","action","type","GET_CONTRIBUTION_LIST","getUserEvent","CLEAR_USER_EVENT"],"mappings":"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","sourcesContent":["import C from '../../actions/constants';\nvar jp = require('jsonpath')\n\nconst initialState = {\n    responseData: []\n}\n\nconst getTime = (duration) => {\n    var milliseconds = parseInt((duration % 1000) / 100),\n        seconds = parseInt((duration / 1000) % 60),\n        minutes = parseInt((duration / (1000 * 60)) % 60),\n        hours = parseInt((duration / (1000 * 60 * 60)) % 24);\n\n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n    return hours + \":\" + minutes + \":\" + seconds;\n}\n\nfunction removeDuplicates(originalArray, prop) {\n    var newArray = [];\n    var lookupObject = {};\n\n    for (var i in originalArray) {\n        lookupObject[originalArray[i][prop]] = originalArray[i];\n    }\n    for (i in lookupObject) {\n        newArray.push(lookupObject[i]);\n    }\n    return newArray;\n}\n\nconst getUserEventData = (payload) => {\n    let result = []\n    payload.forEach(res => {\n        res.forEach(data => {\n            const { src, initial, bleu_score, final, time_spent, s_id, user_events } = data.context.cdata\n            var index = result.findIndex(row=> row.s_id === s_id);\n            if(index<0){\n                src && result.push({\n                    src,\n                    mt: initial !== undefined ? initial : \"\",\n                    bleu_score: Number(bleu_score).toFixed(2),\n                    tgt: final,\n                    time_spent: getTime(time_spent),\n                    s_id,\n                    user_events: user_events !== undefined ? user_events : []\n                })\n\n            }\n            else{\n                result[index]=({\n                    src,\n                    mt: initial !== undefined ? initial : \"\",\n                    bleu_score: Number(bleu_score).toFixed(2),\n                    tgt: final,\n                    time_spent: getTime(time_spent),\n                    s_id,\n                    user_events: result[index].user_events !== undefined ? result[index].user_events.concat(data.context.cdata.user_events) : []\n                })\n\n            }\n            \n        })\n    })\n\n    // let latestEvent = removeDuplicates(result, 's_id')\n\n    // return latestEvent;\n    console.log(result)\n    return result;\n}\n\nexport default reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case C.GET_CONTRIBUTION_LIST:\n            return {\n                getUserEvent: getUserEventData(action.payload.responseData),\n                ...state\n\n                \n            }\n        case C.CLEAR_USER_EVENT:\n            return {\n                ...initialState\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}"]},"metadata":{},"sourceType":"module"}