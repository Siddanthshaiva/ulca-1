{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/components/common/AppInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Popup from 'reactjs-popup'; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ControlledRefPopup = () => {\n  _s();\n\n  const ref = useRef();\n\n  const openTooltip = () => ref.current.open();\n\n  const closeTooltip = () => ref.current.close();\n\n  const toggleTooltip = () => ref.current.toggle();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"button\",\n      onClick: openTooltip,\n      children: \"open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"button\",\n      onClick: closeTooltip,\n      children: \"close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"button\",\n      onClick: toggleTooltip,\n      children: \"toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      ref: ref,\n      trigger: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"button\",\n        children: \"I am the trigger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Lorem ipsum dolor sit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ControlledRefPopup, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = ControlledRefPopup;\nexport default ControlledRefPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledRefPopup\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/components/common/AppInfo.jsx"],"names":["React","useRef","Popup","ControlledRefPopup","ref","openTooltip","current","open","closeTooltip","close","toggleTooltip","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,GAAG,GAAGH,MAAM,EAAlB;;AACA,QAAMI,WAAW,GAAG,MAAMD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,EAA1B;;AACA,QAAMC,YAAY,GAAG,MAAMJ,GAAG,CAACE,OAAJ,CAAYG,KAAZ,EAA3B;;AACA,QAAMC,aAAa,GAAG,MAAMN,GAAG,CAACE,OAAJ,CAAYK,MAAZ,EAA5B;;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAEN,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAEG,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAEE,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,KAAD;AACE,MAAA,GAAG,EAAEN,GADP;AAEE,MAAA,OAAO,eACL;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,6BAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA9BD;;GAAMD,kB;;KAAAA,kB;AA+BN,eAAeA,kBAAf","sourcesContent":["import React, { useRef } from 'react';\n\nimport Popup from 'reactjs-popup';\n//\n\nconst ControlledRefPopup = () => {\n  const ref = useRef();\n  const openTooltip = () => ref.current.open();\n  const closeTooltip = () => ref.current.close();\n  const toggleTooltip = () => ref.current.toggle();\n\n  return (\n    <div>\n      <button type=\"button\" className=\"button\" onClick={openTooltip}>\n        open\n      </button>\n      <button type=\"button\" className=\"button\" onClick={closeTooltip}>\n        close\n      </button>\n\n      <button type=\"button\" className=\"button\" onClick={toggleTooltip}>\n        toggle\n      </button>\n      <Popup\n        ref={ref}\n        trigger={\n          <button type=\"button\" className=\"button\">\n            I am the trigger\n          </button>\n        }\n      >\n        <div>Lorem ipsum dolor sit</div>\n      </Popup>\n    </div>\n  );\n};\nexport default ControlledRefPopup;"]},"metadata":{},"sourceType":"module"}