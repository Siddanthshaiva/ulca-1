{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/ActivateUser.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, Typography, Link, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dialog from \"../../components/common/Dialog\";\nimport Snackbar from '../../components/common/Snackbar';\nimport UrlConfig from '../../../configs/internalurlmapping';\nimport ActivateUserId from \"../../../redux/actions/api/UserManagement/ActivateUser\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributionList = props => {\n  _s();\n\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"Do you want to delete\");\n  const [title, setTitle] = useState(\"Delete\");\n  const {\n    email,\n    userId\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [snackbar, setSnackbarInfo] = useState({\n    open: false,\n    message: '',\n    variant: 'success'\n  });\n  useEffect(() => {\n    UserActivate();\n  }, []);\n\n  const UserActivate = () => {\n    let apiObj = new ActivateUserId(email, userId);\n    var rsp_data = [];\n    fetch(apiObj.apiEndPoint(), {\n      method: 'post',\n      body: JSON.stringify(apiObj.getBody()),\n      headers: apiObj.getHeaders().headers\n    }).then(async response => {\n      rsp_data = await response.json();\n      debugger;\n      setLoading(false);\n\n      if (!response.ok) {\n        return Promise.reject('');\n      } else {\n        setSnackbarInfo({ ...snackbar,\n          open: true,\n          message: rsp_data.message ? rsp_data.message : \"Verification completed successfully.\",\n          variant: 'success'\n        });\n        setTimeout(() => {\n          history.push(`${process.env.PUBLIC_URL}/user/login`);\n        }, 4000);\n      }\n    }).catch(error => {\n      setLoading(false);\n      setSnackbarInfo({ ...snackbar,\n        open: true,\n        message: rsp_data.message ? rsp_data.message : \"Verification failed. please try again\",\n        variant: 'error'\n      });\n    });\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar,\n      open: false\n    });\n  };\n\n  debugger;\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: snackbar.open && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      handleClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      message: snackbar.message,\n      variant: snackbar.variant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ContributionList, \"RhAH6m/RpumyPxp/zBLf7rzX8wo=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = ContributionList;\nexport default ContributionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributionList\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/ActivateUser.jsx"],"names":["withStyles","Typography","Link","MuiThemeProvider","createMuiTheme","Button","React","useEffect","useState","useHistory","Dialog","Snackbar","UrlConfig","ActivateUserId","useParams","ContributionList","props","history","open","setOpen","message","setMessage","title","setTitle","email","userId","loading","setLoading","snackbar","setSnackbarInfo","variant","UserActivate","apiObj","rsp_data","fetch","apiEndPoint","method","body","JSON","stringify","getBody","headers","getHeaders","then","response","json","ok","Promise","reject","setTimeout","push","process","env","PUBLIC_URL","catch","error","handleSnackbarClose","classes","vertical","horizontal"],"mappings":"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","sourcesContent":["\nimport { withStyles, Typography,Link, MuiThemeProvider, createMuiTheme,Button } from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport {  useHistory } from \"react-router-dom\";\nimport Dialog from \"../../components/common/Dialog\"\nimport Snackbar from '../../components/common/Snackbar';\nimport UrlConfig from '../../../configs/internalurlmapping';\nimport ActivateUserId from \"../../../redux/actions/api/UserManagement/ActivateUser\"\nimport { useParams } from \"react-router\";\n\nconst ContributionList = (props) => {\n\n        const history                 = useHistory();\n       \n        const [open, setOpen]         = useState(false)\n        const [message, setMessage]   = useState(\"Do you want to delete\")\n        const [title, setTitle]       = useState(\"Delete\")\n        const {email, userId}                 = useParams()\n        const [loading, setLoading] = useState(true);\n        const [snackbar, setSnackbarInfo] = useState({\n            open: false,\n            message: '',\n            variant: 'success'\n        })\n        \n        useEffect(()                  => {\n                 UserActivate()\n        }, []);\n\n        \n  \n        const  UserActivate  = () =>{\n            let apiObj = new ActivateUserId(email, userId)\n            var rsp_data =[]\n              fetch(apiObj.apiEndPoint(), {\n                method: 'post',\n                body: JSON.stringify(apiObj.getBody()),\n                headers: apiObj.getHeaders().headers\n              }).then(async response => {\n                rsp_data = await response.json();\n                debugger\n                setLoading(false)\n                if (!response.ok) {\n                  \n                  return Promise.reject('');\n                } else {\n                    setSnackbarInfo({\n                        ...snackbar,\n                        open: true,\n                        message: rsp_data.message ? rsp_data.message : \"Verification completed successfully.\",\n                        variant: 'success'\n                    })\n    \n                  \n                  setTimeout(() => {\n                    history.push(`${process.env.PUBLIC_URL}/user/login`)\n                }, 4000)\n                 \n                }\n              }).catch((error) => {\n                setLoading(false)\n                \n                  setSnackbarInfo({\n                                  ...snackbar,\n                                  open: true,\n                                  message: rsp_data.message ? rsp_data.message : \"Verification failed. please try again\",\n                                  variant: 'error'\n                              })\n              });\n            \n              }\n            \n        \n\n        \n\n\n              const handleSnackbarClose = () => {\n                setSnackbarInfo({ ...snackbar, open: false })\n            }\n\n\n    debugger\n        const { classes } = props;\n        return (\n                <div >\n                       \n                        \n                       {snackbar.open &&\n      <Snackbar\n          open={snackbar.open}\n          handleClose={handleSnackbarClose}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          message={snackbar.message}\n          variant={snackbar.variant}\n      />}\n                </div>\n        );\n};\n\nexport default (ContributionList);\n"]},"metadata":{},"sourceType":"module"}