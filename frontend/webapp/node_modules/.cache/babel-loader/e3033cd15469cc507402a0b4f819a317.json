{"ast":null,"code":"import C from '../../../actions/constants';\nconst initialState = {\n  responseData: []\n};\n\nconst getDetailedReport = payload => {\n  debugger;\n  let responseData = [];\n  let refreshStatus = false;\n  payload.forEach(element => {\n    responseData.push({\n      srNo: element.serviceRequestNumber,\n      datasetId: element.datasetName,\n      recordCount: element.details ? element.details : 0,\n      stage: element.tool,\n      status: element.status\n    });\n\n    if (element.status === \"INPROGRESS\" || \"NOTSTARTED\") {\n      refreshStatus = true;\n    }\n  });\n  responseData = responseData.reverse();\n  return {\n    responseData,\n    refreshStatus\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case C.GET_DETAILED_REPORT:\n      return getDetailedReport(action.payload);\n\n    case C.CLEAR_DETAILED_REPORT:\n      return { ...initialState\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/DataSet/DatasetView/DetailedDataSet.js"],"names":["C","initialState","responseData","getDetailedReport","payload","refreshStatus","forEach","element","push","srNo","serviceRequestNumber","datasetId","datasetName","recordCount","details","stage","tool","status","reverse","reducer","state","action","type","GET_DETAILED_REPORT","CLEAR_DETAILED_REPORT"],"mappings":"AAAA,OAAOA,CAAP,MAAc,4BAAd;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAKA,MAAMC,iBAAiB,GAAIC,OAAD,IAAa;AACnC;AACA,MAAIF,YAAY,GAAG,EAAnB;AACA,MAAIG,aAAa,GAAG,KAApB;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgBC,OAAO,IAAI;AACvBL,IAAAA,YAAY,CAACM,IAAb,CACI;AACQC,MAAAA,IAAI,EAAsBF,OAAO,CAACG,oBAD1C;AAESC,MAAAA,SAAS,EAAgBJ,OAAO,CAACK,WAF1C;AAGSC,MAAAA,WAAW,EAAcN,OAAO,CAACO,OAAR,GAAiBP,OAAO,CAACO,OAAzB,GAAkC,CAHpE;AAISC,MAAAA,KAAK,EAAoBR,OAAO,CAACS,IAJ1C;AAKSC,MAAAA,MAAM,EAAmBV,OAAO,CAACU;AAL1C,KADJ;;AASA,QAAGV,OAAO,CAACU,MAAR,KAAmB,YAAnB,IAAmC,YAAtC,EAAmD;AAC/CZ,MAAAA,aAAa,GAAG,IAAhB;AACH;AACJ,GAbD;AAcAH,EAAAA,YAAY,GAAGA,YAAY,CAACgB,OAAb,EAAf;AACA,SAAO;AAAChB,IAAAA,YAAD;AAAgBG,IAAAA;AAAhB,GAAP;AACH,CApBD;;AAuBA,MAAMc,OAAO,GAAG,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKtB,CAAC,CAACuB,mBAAP;AACI,aAAQpB,iBAAiB,CAACkB,MAAM,CAACjB,OAAR,CAAzB;;AAEJ,SAAKJ,CAAC,CAACwB,qBAAP;AACI,aAAO,EACH,GAAGvB;AADA,OAAP;;AAGJ;AACI,aAAO,EACH,GAAGmB;AADA,OAAP;AATR;AAaH,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["import C from '../../../actions/constants';\n\nconst initialState = {\n    responseData: []\n}\n\n\nconst getDetailedReport = (payload) => {\n    debugger\n    let responseData = [];\n    let refreshStatus = false;\n    payload.forEach(element => {\n        responseData.push(\n            {\n                    srNo                    : element.serviceRequestNumber,\n                     datasetId              : element.datasetName,\n                     recordCount            : element.details? element.details: 0,\n                     stage                  : element.tool,\n                     status                 : element.status \n                    }\n        )\n        if(element.status === \"INPROGRESS\" || \"NOTSTARTED\"){\n            refreshStatus = true\n        }\n    }); \n    responseData = responseData.reverse()\n    return {responseData , refreshStatus};\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case C.GET_DETAILED_REPORT:\n            return  getDetailedReport(action.payload)  \n            \n        case C.CLEAR_DETAILED_REPORT:\n            return {\n                ...initialState\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}