{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ContributionList.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, withStyles, Tooltip, Typography, Link, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport BreadCrum from '../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport DataSet from \"../../styles/Dataset\";\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../redux/actions/api/DataSet/MyContribution\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CloudDownload } from \"@material-ui/icons\";\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributionList = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const myContributionReport = useSelector(state => state.myContributionReport);\n  useEffect(() => {\n    const userObj = new MyContributionList(\"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n    myContributionReport.responseData.length == 0 && dispatch(APITransport(userObj));\n  }, []);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MuiTableCell: {\n        head: {\n          backgroundColor: \"#c7c6c68a !important\"\n        }\n      },\n      MuiPaper: {\n        root: {\n          boxShadow: 'none !important',\n          borderRadius: 0,\n          border: \"1px solid rgb(224 224 224)\"\n        }\n      },\n      MUIDataTableToolbar: {\n        root: {\n          display: \"none\"\n        }\n      }\n    }\n  });\n\n  const renderStatus = (id, value) => {\n    if (value === \"Inprogress\") {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.link,\n        onClick: () => {\n          history.push(`${process.env.PUBLIC_URL}/dataset-status/${id}}`);\n        },\n        children: \" In-progress \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: \"Published \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }, this);\n    }\n  };\n\n  const renderAction = (id, value) => {\n    if (value === \"Inprogress\") {} else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.span,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.link,\n          onClick: () => {\n            history.push(`${process.env.PUBLIC_URL}/submit-dataset/upload`);\n          },\n          children: \" Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.link,\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 191\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 32\n      }, this);\n    }\n  };\n\n  const columns = [{\n    name: \"sr_no\",\n    label: \"s id\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"sr_no\",\n    label: \"Sr No.\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Dataset\",\n    label: \"Dataset Name\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Submitted_on\",\n    label: \"Submitted On\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Status\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"Status\",\n    label: \"status\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderStatus(tableMeta.rowData[0], tableMeta.rowData[4])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 48\n          }, this);\n        }\n      }\n    }\n  }, {\n    name: \"Action\",\n    label: \"action\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderAction(tableMeta.rowData[0], tableMeta.rowData[4])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 24\n          }, this);\n        }\n      }\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: true,\n    filter: false,\n    selectableRows: \"none\"\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.divStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [\"Dataset\"],\n        activeLink: \"My Contribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"b\",\n        component: \"h2\",\n        children: \"My Contribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: getMuiTheme(),\n      children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: `My Contribution`,\n        data: myContributionReport.responseData,\n        columns: columns,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContributionList, \"JPYArIHHRuCZQsVWmYQ6PZ/FaFA=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = ContributionList;\nexport default withStyles(DataSet)(ContributionList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributionList\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ContributionList.jsx"],"names":["Grid","withStyles","Tooltip","Typography","Link","MuiThemeProvider","createMuiTheme","BreadCrum","React","useEffect","useState","DataSet","APITransport","MUIDataTable","MyContributionList","useDispatch","useSelector","CloudDownload","OpenInNewIcon","useHistory","ContributionList","props","history","dispatch","myContributionReport","state","userObj","responseData","length","getMuiTheme","overrides","MuiTableCell","head","backgroundColor","MuiPaper","root","boxShadow","borderRadius","border","MUIDataTableToolbar","display","renderStatus","id","value","classes","link","push","process","env","PUBLIC_URL","span","renderAction","columns","name","label","options","filter","sort","empty","customBodyRender","tableMeta","updateValue","rowData","textLabels","body","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","filterType","download","print","fixedHeader","selectableRows","divStyle","breadcrum","title"],"mappings":"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","sourcesContent":["import { Grid, withStyles, Tooltip, Typography,Link, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport BreadCrum from '../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport DataSet from \"../../styles/Dataset\";\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../redux/actions/api/DataSet/MyContribution\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CloudDownload } from \"@material-ui/icons\";\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport {  useHistory } from \"react-router-dom\";\n\nconst ContributionList = (props) => {\n\n        const history                 = useHistory();\n        const dispatch                = useDispatch();\n        const myContributionReport    = useSelector( (state) => state.myContributionReport);\n        \n        useEffect(()                  => {\n                const userObj               = new MyContributionList( \"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n                myContributionReport.responseData.length == 0  && dispatch(APITransport(userObj));\n        }, []);\n  \n\n        const getMuiTheme = ()          => createMuiTheme({\n                overrides: {\n                MuiTableCell: {\n                        head: {\n                                backgroundColor: \"#c7c6c68a !important\"\n                        }\n                },\n                MuiPaper: {\n                        root:{\n                                boxShadow: 'none !important',\n                                borderRadius: 0,\n                                border: \"1px solid rgb(224 224 224)\"\n                        }\n                },\n                MUIDataTableToolbar:{ root: { display: \"none\" } }\n                }\n        });\n\n        const renderStatus = (id,value) => {\n                if(value === \"Inprogress\"){\n                        return  <Link className = {classes.link} onClick={()=>{history.push(`${process.env.PUBLIC_URL}/dataset-status/${id}}`)}}> In-progress </Link>\n                }\n                else{\n                        return <span className = {classes.span}>Published </span>\n                }\n        }\n\n        const renderAction = (id,value) => {\n                if(value === \"Inprogress\"){}\n                else{\n                        return <div className= {classes.span}> <Link className= {classes.link} onClick={()=>{history.push(`${process.env.PUBLIC_URL}/submit-dataset/upload`)}}> Update </Link><Link className= {classes.link}> Delete </Link> </div> \n                }\n        }\n\n    \n        const columns = [\n        {\n        name: \"sr_no\",\n        label: \"s id\",\n        options: {\n                filter  : false,\n                sort    : false,\n                display : \"excluded\",\n        },\n        },\n        {\n                name    : \"sr_no\",\n                label   : \"Sr No.\",\n                options : {\n                                filter  : false,\n                                sort    : false,\n                },\n        },\n        {\n                name    : \"Dataset\",\n                label   : \"Dataset Name\",\n                options: {\n                        filter  : false,\n                        sort    : false,\n                },\n        },\n        {\n                name    : \"Submitted_on\",\n                label   : \"Submitted On\",\n                options : {\n                                filter  : false,\n                                sort    : false,\n                        \n                },\n        },\n        {\n                name    : \"Status\",\n                label   : \"Status\",\n                options : {\n                        filter  : false,\n                        sort    : false,\n                        display : \"excluded\",\n                },\n        },\n        {\n                name: \"Status\",\n                label: \"status\",\n                options: {\n                        filter  : true,\n                        sort    : false,\n                        empty   : true,\n                        customBodyRender: (value, tableMeta, updateValue) => {\n                                if (tableMeta.rowData) {\n                                        return <div>{renderStatus(tableMeta.rowData[0],tableMeta.rowData[4])}</div>;\n                                }\n                        },\n                },\n        },\n\n        {\n        name: \"Action\",\n        label: \"action\",\n        options: {\n                filter: true,\n                sort: false,\n                empty: true,\n                customBodyRender: (value, tableMeta, updateValue) => {\n                if (tableMeta.rowData) {\n                return <div>{renderAction(tableMeta.rowData[0], tableMeta.rowData[4])}</div>;\n                }\n                },\n        },\n        },\n        ];\n\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\",\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\",\n      },\n      options: { sortDirection: \"desc\" },\n    },\n\n    \n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: true,\n    filter: false,\n    selectableRows: \"none\",\n  };\n\n  const { classes } = props;\n  return (\n    <div className={classes.divStyle}>\n      <div className={classes.breadcrum}>\n                <BreadCrum links={[\"Dataset\"]} activeLink=\"My Contribution\" />\n            </div>\n      <div className={classes.title}>\n      \n      <Typography variant=\"b\" component=\"h2\">My Contribution</Typography>\n  \n      </div>\n      <MuiThemeProvider theme={getMuiTheme()}>  \n      <MUIDataTable\n        title={`My Contribution`}\n        data={myContributionReport.responseData}\n        columns={columns}\n        options={options}\n      />\n      </MuiThemeProvider>\n    </div>\n  );\n};\n\nexport default withStyles(DataSet)(ContributionList);\n"]},"metadata":{},"sourceType":"module"}