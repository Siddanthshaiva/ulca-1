{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/UploadDataset/SubmitDataset.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Divider, FormControl, Button, TextField, Hidden, Popover } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport { withStyles } from '@material-ui/core/styles';\nimport { RadioButton, RadioGroup } from 'react-radio-buttons';\nimport DatasetStyle from '../../../styles/Dataset';\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Snackbar from '../../../components/common/Snackbar';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubmitDataset = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [dataset, setDatasetInfo] = useState({\n    name: \"\",\n    url: \"\",\n    type: \"pd\",\n    filteredName: \"\"\n  });\n  const [snackbar, setSnackbarInfo] = useState({\n    timeOut: 3000,\n    open: false,\n    message: '',\n    variant: 'success'\n  });\n  const [error, setError] = useState({\n    name: false,\n    url: false,\n    type: false,\n    filteredName: false\n  });\n  const [search, setSearch] = useState(false);\n  const history = useHistory();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDone = () => {\n    if (dataset.filteredName) {\n      setDatasetInfo({ ...dataset,\n        name: dataset.filteredName\n      });\n    }\n\n    handleClose();\n  };\n\n  const renderUpdateDatasetSearch = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.updateDataset,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 12,\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"tags-outlined\",\n              options: [{\n                \"name\": 'Test'\n              }, {\n                \"name\": 'Test123'\n              }, {\n                \"name\": 'Test456'\n              }],\n              getOptionLabel: option => option.name,\n              filterSelectedOptions: true,\n              open: search,\n              onChange: (e, value) => {\n                setDatasetInfo({ ...dataset,\n                  filteredName: value !== null ? value.name : \"\"\n                });\n                setError({ ...error,\n                  name: false\n                });\n              },\n              onOpen: () => {\n                setTimeout(() => setSearch(true), 200);\n              },\n              onClose: () => {\n                setSearch(false);\n              },\n              openOnFocus: true,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"search-dataset\",\n                variant: \"outlined\",\n                placeholder: \"Search Dataset\",\n                autoFocus: true,\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: handleDone,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  };\n\n  const validURL = str => {\n    var pattern = new RegExp('^((ft|htt)ps?:\\\\/\\\\/)?' + // protocol\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name and extension\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n    '(\\\\:\\\\d+)?' + // port\n    '(\\\\/[-a-z\\\\d%@_.~+&:]*)*' + // path\n    '(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?' + // query string\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n\n    return pattern.test(str);\n  };\n\n  const handleSubmitDataset = e => {\n    if (dataset.name.trim() !== \"\" && dataset.name.length > 256) {\n      setError({ ...error,\n        name: true\n      });\n    } else if (dataset.url.trim() !== \"\" && !validURL(dataset.url)) {\n      setError({ ...error,\n        url: true\n      });\n    } else {\n      setSnackbarInfo({ ...snackbar,\n        open: true,\n        message: 'Please wait while we process your request...',\n        timeOut: 3000,\n        variant: 'info'\n      });\n      setTimeout(() => history.push(`${process.env.PUBLIC_URL}/submit-dataset/submission/${5}`), 3000);\n    }\n  };\n\n  const renderDatasetType = () => {\n    let {\n      type\n    } = dataset;\n\n    switch (type) {\n      case 'pd':\n        return 'Parallel Dataset';\n\n      case 'md':\n        return 'Monolingual Dataset';\n\n      case 'atd':\n        return 'ASR/TTS Dataset';\n\n      case 'od':\n        return 'OCR Dataset';\n\n      default:\n        return 'Parallel Dataset';\n    }\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar,\n      open: false\n    });\n  };\n\n  const url = UrlConfig.dataset;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.breadcrum,\n        children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n          links: [url],\n          activeLink: \"Submit Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Submit Dataset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 5,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 5,\n            lg: 5,\n            xl: 5,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"subtitle1\",\n              children: \"STEP-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.form,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.typography,\n                variant: \"h5\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Select Dataset Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 89\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                value: dataset.type,\n                onChange: e => setDatasetInfo({ ...dataset,\n                  type: e\n                }),\n                className: classes.radioGroup,\n                vertical: \"true\",\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  rootColor: \"grey\",\n                  pointColor: \"black\",\n                  value: \"pd\",\n                  children: \"Parallel Dataset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n                  rootColor: \"grey\",\n                  pointColor: \"black\",\n                  value: \"md\",\n                  children: \"Monolingual Dataset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n                  rootColor: \"grey\",\n                  pointColor: \"black\",\n                  value: \"atd\",\n                  children: \"ASR/TTS Dataset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n                  rootColor: \"grey\",\n                  pointColor: \"black\",\n                  value: \"od\",\n                  children: \"OCR Dataset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xl: 1,\n              lg: 1,\n              md: 1,\n              sm: 1,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(Divider, {\n                orientation: \"vertical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            xl: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"subtitle1\",\n              children: \"STEP-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.form,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xl: 12,\n                  lg: 12,\n                  md: 12,\n                  sm: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 5,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xl: 6,\n                      lg: 6,\n                      md: 6,\n                      sm: 6,\n                      xs: 6,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: renderDatasetType()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 197,\n                          columnNumber: 74\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xl: 6,\n                      lg: 6,\n                      md: 6,\n                      sm: 6,\n                      xs: 6,\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        className: classes.updateBtn,\n                        color: \"inherit\",\n                        variant: \"contained\",\n                        onClick: e => handleClick(e),\n                        children: \"Update an existing dataset\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n                        className: classes.popOver,\n                        id: \"update-dataset\",\n                        open: Boolean(anchorEl),\n                        anchorEl: anchorEl,\n                        onClose: handleClose,\n                        anchorOrigin: {\n                          vertical: 'bottom',\n                          horizontal: 'left'\n                        },\n                        transformOrigin: {\n                          vertical: 'top',\n                          horizontal: \"center\"\n                        },\n                        children: renderUpdateDatasetSearch()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xl: 12,\n                  lg: 12,\n                  md: 12,\n                  sm: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xl: 12,\n                      lg: 12,\n                      md: 12,\n                      sm: 12,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        variant: \"outlined\",\n                        color: \"primary\",\n                        label: \"Dataset name\",\n                        value: dataset.name,\n                        error: error.name,\n                        helperText: error.name ? \"Dataset name already exists\" : \"\",\n                        onChange: e => {\n                          setDatasetInfo({ ...dataset,\n                            name: e.target.value\n                          });\n                          setError({ ...error,\n                            url: false\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xl: 12,\n                      lg: 12,\n                      md: 12,\n                      sm: 12,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        variant: \"outlined\",\n                        color: \"primary\",\n                        label: \"Paste the URL of the public repository\",\n                        value: dataset.url,\n                        helperText: error.url ? \"Url is nor proper\" : \"\",\n                        onChange: e => {\n                          setDatasetInfo({ ...dataset,\n                            url: e.target.value\n                          });\n                          setError({ ...error,\n                            url: false\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                className: classes.submitBtn,\n                variant: \"contained\",\n                onClick: handleSubmitDataset,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      timeOut: snackbar.timeOut,\n      handleClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      message: snackbar.message,\n      variant: snackbar.variant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubmitDataset, \"JVTS8XO3m8T76PGWNpePCI0O06s=\", false, function () {\n  return [useHistory];\n});\n\n_c = SubmitDataset;\nexport default withStyles(DatasetStyle)(SubmitDataset);\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitDataset\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/UploadDataset/SubmitDataset.jsx"],"names":["Grid","Paper","Typography","Divider","FormControl","Button","TextField","Hidden","Popover","Autocomplete","BreadCrum","withStyles","RadioButton","RadioGroup","DatasetStyle","useState","useHistory","Snackbar","UrlConfig","SubmitDataset","props","classes","anchorEl","setAnchorEl","dataset","setDatasetInfo","name","url","type","filteredName","snackbar","setSnackbarInfo","timeOut","open","message","variant","error","setError","search","setSearch","history","handleClick","event","currentTarget","handleClose","handleDone","renderUpdateDatasetSearch","updateDataset","option","e","value","setTimeout","params","float","validURL","str","pattern","RegExp","test","handleSubmitDataset","trim","length","push","process","env","PUBLIC_URL","renderDatasetType","handleSnackbarClose","divStyle","breadcrum","paper","title","form","typography","radioGroup","updateBtn","popOver","Boolean","vertical","horizontal","target","submitBtn"],"mappings":"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","sourcesContent":["import {\n    Grid,\n    Paper,\n    Typography,\n    Divider,\n    FormControl,\n    Button,\n    TextField,\n    Hidden,\n    Popover\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport { withStyles } from '@material-ui/core/styles';\nimport { RadioButton, RadioGroup } from 'react-radio-buttons';\nimport DatasetStyle from '../../../styles/Dataset';\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Snackbar from '../../../components/common/Snackbar';\nimport UrlConfig from '../../../../configs/internalurlmapping';\n\nconst SubmitDataset = (props) => {\n    const { classes } = props;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [dataset, setDatasetInfo] = useState({ name: \"\", url: \"\", type: \"pd\", filteredName: \"\" })\n    const [snackbar, setSnackbarInfo] = useState({\n        timeOut: 3000,\n        open: false,\n        message: '',\n        variant: 'success'\n    })\n    const [error, setError] = useState({name: false, url: false, type: false, filteredName: false})\n    const [search, setSearch] = useState(false)\n    const history = useHistory();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget)\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDone = () => {\n        if (dataset.filteredName) {\n            setDatasetInfo({ ...dataset, name: dataset.filteredName })\n        }\n        handleClose();\n    }\n\n    const renderUpdateDatasetSearch = () => {\n        return (\n            <div>\n                <div className={classes.updateDataset}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                            <Autocomplete\n                                id=\"tags-outlined\"\n                                options={[{ \"name\": 'Test' }, { \"name\": 'Test123' }, { \"name\": 'Test456' }]}\n                                getOptionLabel={(option) => option.name}\n                                filterSelectedOptions\n                                open={search}\n                                onChange={(e, value) => {\n                                    setDatasetInfo({ ...dataset, filteredName: value !== null ? value.name : \"\" })\n                                    setError({...error, name:false})\n                                }}\n                                onOpen={() => {\n                                    setTimeout(() => setSearch(true), 200)\n                                }}\n                                onClose={() => {\n                                    setSearch(false)\n                                }}\n                                openOnFocus\n                                renderInput={(params) => (\n                                    <TextField\n                                        id=\"search-dataset\"\n                                        variant=\"outlined\"\n                                        placeholder=\"Search Dataset\"\n                                        autoFocus={true}\n                                        {...params}\n                                    />\n                                )}\n                            />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div style={{ float: 'right' }}>\n                    <Button variant=\"text\" color=\"primary\" onClick={handleClose}>Cancel</Button>\n                    <Button variant=\"text\" color=\"primary\" onClick={handleDone}>Done</Button>\n                </div>\n            </div>\n        )\n    }\n\n    const validURL = (str) => {\n        var pattern = new RegExp('^((ft|htt)ps?:\\\\/\\\\/)?' + // protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name and extension\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n            '(\\\\:\\\\d+)?' + // port\n            '(\\\\/[-a-z\\\\d%@_.~+&:]*)*' + // path\n            '(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n        return pattern.test(str);\n    }\n\n    const handleSubmitDataset = (e) => {\n\n        if(dataset.name.trim() !== \"\" && dataset.name.length > 256){\n            setError({...error, name:true})\n            \n        }\n        else if(dataset.url.trim() !== \"\" && !validURL(dataset.url)){\n            setError({...error, url:true})\n        }else{\n            setSnackbarInfo({\n                ...snackbar,\n                open: true,\n                message: 'Please wait while we process your request...',\n                timeOut: 3000,\n                variant: 'info'\n            })\n\n            setTimeout(() => history.push(`${process.env.PUBLIC_URL}/submit-dataset/submission/${5}`), 3000)\n        }\n\n       \n        \n    }\n\n    const renderDatasetType = () => {\n        let { type } = dataset\n        switch (type) {\n            case 'pd':\n                return 'Parallel Dataset'\n            case 'md':\n                return 'Monolingual Dataset'\n            case 'atd':\n                return 'ASR/TTS Dataset'\n            case 'od':\n                return 'OCR Dataset'\n            default:\n                return 'Parallel Dataset'\n        }\n    }\n\n    const handleSnackbarClose = () => {\n        setSnackbarInfo({ ...snackbar, open: false })\n    }\n\n    const url = UrlConfig.dataset\n\n    return (\n        <div>\n            <div className={classes.divStyle}>\n                <div className={classes.breadcrum}>\n                    <BreadCrum links={[url]} activeLink=\"Submit Dataset\" />\n                </div>\n                <Paper elevation={3} className={classes.paper}>\n                    <Grid container className={classes.title}>\n                        <Grid item>\n                            <Typography variant=\"h4\"><strong>Submit Dataset</strong></Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={5}>\n                        <Grid item xs={12} sm={12} md={5} lg={5} xl={5}>\n                            <Typography color=\"textSecondary\" variant=\"subtitle1\">STEP-1</Typography>\n                            <FormControl className={classes.form}>\n                                <Typography className={classes.typography} variant=\"h5\"><strong>Select Dataset Type</strong></Typography>\n                                <RadioGroup value={dataset.type} onChange={(e) => setDatasetInfo({ ...dataset, type: e })} className={classes.radioGroup} vertical=\"true\">\n                                    <RadioButton rootColor=\"grey\" pointColor=\"black\" value=\"pd\">\n                                        Parallel Dataset\n                                    </RadioButton>\n                                    <RadioButton rootColor=\"grey\" pointColor=\"black\" value=\"md\">\n                                        Monolingual Dataset\n                                    </RadioButton>\n                                    <RadioButton rootColor=\"grey\" pointColor=\"black\" value=\"atd\">\n                                        ASR/TTS Dataset\n                                    </RadioButton>\n                                    <RadioButton rootColor=\"grey\" pointColor=\"black\" value=\"od\">\n                                        OCR Dataset\n                                    </RadioButton>\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        <Hidden>\n                            <Grid item xl={1} lg={1} md={1} sm={1} xs={1}>\n                                <Divider orientation=\"vertical\" />\n                            </Grid>\n                        </Hidden>\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\n                            <Typography color=\"textSecondary\" variant=\"subtitle1\">STEP-2</Typography>\n                            <FormControl className={classes.form}>\n                                <Grid container spacing={3}>\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n                                        <Grid container spacing={5}>\n                                            <Grid item xl={6} lg={6} md={6} sm={6} xs={6}>\n                                                <Typography variant=\"h5\"><strong>{renderDatasetType()}</strong></Typography>\n                                            </Grid>\n                                            <Grid item xl={6} lg={6} md={6} sm={6} xs={6}>\n                                                <Button\n                                                    className={classes.updateBtn}\n                                                    color=\"inherit\"\n                                                    variant=\"contained\"\n                                                    onClick={(e) => handleClick(e)}\n                                                >\n                                                    Update an existing dataset\n                                            </Button>\n                                                <Popover\n                                                    className={classes.popOver}\n                                                    id={\"update-dataset\"}\n                                                    open={Boolean(anchorEl)}\n                                                    anchorEl={anchorEl}\n                                                    onClose={handleClose}\n                                                    anchorOrigin={{\n                                                        vertical: 'bottom',\n                                                        horizontal: 'left',\n                                                    }}\n                                                    transformOrigin={{\n                                                        vertical: 'top',\n                                                        horizontal: \"center\",\n                                                    }}\n                                                    children={renderUpdateDatasetSearch()}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n                                        <Grid container spacing={3}>\n                                            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n                                                <TextField fullWidth\n                                                    variant=\"outlined\"\n                                                    color=\"primary\"\n                                                    label=\"Dataset name\"\n                                                    value={dataset.name}\n                                                    error={error.name}\n                                                    helperText={error.name ? \"Dataset name already exists\":\"\"}\n                                                    onChange={(e) => {\n                                                        setDatasetInfo({ ...dataset, name: e.target.value })\n                                                        setError({...error, url:false})\n                                                }}\n                                                />\n                                            </Grid>\n                                            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n                                                <TextField fullWidth\n                                                    variant=\"outlined\"\n                                                    color=\"primary\"\n                                                    label=\"Paste the URL of the public repository\"\n                                                    value={dataset.url}\n                                                    helperText={error.url ? \"Url is nor proper\":\"\"}\n                                                    onChange={(e) => {\n                                                        setDatasetInfo({ ...dataset, url: e.target.value })\n                                                        setError({...error, url:false})\n                                                    }}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Button\n                                    color=\"primary\"\n                                    className={classes.submitBtn}\n                                    variant=\"contained\"\n                                    \n                                    onClick={handleSubmitDataset}\n                                >\n                                    Submit\n                                </Button>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n            <Snackbar\n                open={snackbar.open}\n                timeOut={snackbar.timeOut}\n                handleClose={handleSnackbarClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                message={snackbar.message}\n                variant={snackbar.variant}\n            />\n        </div>\n    )\n}\n\nexport default withStyles(DatasetStyle)(SubmitDataset);"]},"metadata":{},"sourceType":"module"}