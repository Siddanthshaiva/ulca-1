{"ast":null,"code":"import C from '../../../actions/constants';\n\nvar jp = require('jsonpath');\n\nconst initialState = {\n  responseData: []\n};\n\nconst getContributionList = payload => {\n  let dataObj = [{\n    \"stage\": \"File Download\",\n    \"status\": \"Completed\"\n  }, {\n    \"stage\": \"Sanity Check\",\n    \"status\": \"Completed\",\n    \"Record Count\": \"5000/5000\"\n  }, {\n    \"stage\": \"Record validation\",\n    \"status\": \"In Progress\",\n    \"Record Count\": \"50001/1000000\"\n  }, {\n    \"stage\": \"Record Publish\",\n    \"status\": \"In Progress\",\n    \"Record Count\": \"40000/100000\"\n  }]; // let latestEvent = removeDuplicates(result, 's_id')\n  // return latestEvent;\n\n  console.log(\"-----------------------\", dataObj);\n  return dataObj;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case C.GET_DETAILED_REPORT:\n      return {\n        responseData: getContributionList(action.payload.responseData)\n      };\n\n    case C.CLEAR_USER_EVENT:\n      return { ...initialState\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/DataSet/DatasetView/DetailedDataSet.js"],"names":["C","jp","require","initialState","responseData","getContributionList","payload","dataObj","console","log","reducer","state","action","type","GET_DETAILED_REPORT","CLEAR_USER_EVENT"],"mappings":"AAAA,OAAOA,CAAP,MAAc,4BAAd;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAMA,MAAMC,mBAAmB,GAAIC,OAAD,IAAa;AAErC,MAAIC,OAAO,GAAG,CAAC;AAAC,aAAQ,eAAT;AAAyB,cAAS;AAAlC,GAAD,EAAgD;AAAC,aAAQ,cAAT;AAAwB,cAAS,WAAjC;AAA6C,oBAAe;AAA5D,GAAhD,EAAyH;AAAC,aAAQ,mBAAT;AAA6B,cAAS,aAAtC;AAAoD,oBAAe;AAAnE,GAAzH,EAA6M;AAAC,aAAQ,gBAAT;AAA0B,cAAS,aAAnC;AAAiD,oBAAe;AAAhE,GAA7M,CAAd,CAFqC,CAGrC;AAEA;;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCF,OAAtC;AACJ,SAAOA,OAAP;AACH,CARD;;AAUA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,CAAC,CAACc,mBAAP;AACI,aAAO;AACHV,QAAAA,YAAY,EAAEC,mBAAmB,CAACO,MAAM,CAACN,OAAP,CAAeF,YAAhB;AAD9B,OAAP;;AAGJ,SAAKJ,CAAC,CAACe,gBAAP;AACI,aAAO,EACH,GAAGZ;AADA,OAAP;;AAGJ;AACI,aAAO,EACH,GAAGQ;AADA,OAAP;AAVR;AAcH,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["import C from '../../../actions/constants';\nvar jp = require('jsonpath')\n\nconst initialState = {\n    responseData: []\n}\n\n\n\nconst getContributionList = (payload) => {\n   \n    let dataObj = [{\"stage\":\"File Download\",\"status\":\"Completed\"},{\"stage\":\"Sanity Check\",\"status\":\"Completed\",\"Record Count\":\"5000/5000\"},{\"stage\":\"Record validation\",\"status\":\"In Progress\",\"Record Count\":\"50001/1000000\"},{\"stage\":\"Record Publish\",\"status\":\"In Progress\",\"Record Count\":\"40000/100000\"}]\n    // let latestEvent = removeDuplicates(result, 's_id')\n\n    // return latestEvent;\n        console.log(\"-----------------------\",dataObj)\n    return dataObj;\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case C.GET_DETAILED_REPORT:\n            return {\n                responseData: getContributionList(action.payload.responseData)  \n            }\n        case C.CLEAR_USER_EVENT:\n            return {\n                ...initialState\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}