{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Typography, withStyles, Button, TextField, Link, InputLabel, OutlinedInput, IconButton, InputAdornment, FormHelperText, FormControl, Checkbox, FormControlLabel, CircularProgress } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport LoginApi from \"../../../redux/actions/api/UserManagement/Login\";\nimport { LoginSocialGithub } from \"reactjs-social-login\";\nimport GoogleLogin from \"react-google-login\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport GmailIcon from \"../../../assets/gmail.png\";\nimport GithubIcon from \"../../../assets/github.png\";\nimport Snackbar from '../../components/common/Snackbar'; // import {useReducer, useSelector} from \"react-redux\";\n// import { LoginSocialFacebook, LoginSocialGithub } from \"reactjs-social-login\";\n// import { LinkedIn } from \"react-linkedin-login-oauth2\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    checked: false\n  });\n  const [error, setError] = useState({\n    email: false,\n    password: false\n  });\n  const [snackbar, setSnackbarInfo] = useState({\n    open: false,\n    message: '',\n    variant: 'success'\n  });\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = prop => event => {\n    setError({ ...error,\n      password: false,\n      email: false\n    });\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleCheckChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.checked\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const ValidateEmail = mail => {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const ValidatePassword = password => {\n    if (password.length > 7) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleSubmit = async () => {\n    let data = {\n      \"userKeys\": {\n        \"email\": \"ulca@gmail.com\",\n        \"publicKey\": \"31f8ed31-25a0-44a2-8da0-db42b5855d2a\",\n        \"privateKey\": \"98541a718173430880f5ae13a4e79aa0\"\n      },\n      \"userDetails\": {\n        \"userID\": \"9a3f534cd588410f95d68696dd06fa2b\",\n        \"email\": \"ulca@gmail.com\",\n        \"firstName\": \"Ulca\",\n        \"lastName\": \"User\",\n        \"phoneNo\": \"9446400000\",\n        \"isVerified\": true,\n        \"isActive\": true,\n        \"registeredTime\": \"2021-06-07T16:19:13.532000\",\n        \"activatedTime\": \"2021-06-07T16:29:10.398000\"\n      }\n    };\n    let apiObj = new LoginApi(values);\n    fetch(apiObj.apiEndPoint(), {\n      method: 'post',\n      body: JSON.stringify(apiObj.getBody()),\n      headers: apiObj.getHeaders().headers\n    }).then(async response => {\n      const rsp_data = await response.json();\n      debugger;\n      setLoading(false);\n\n      if (!response.ok) {\n        return Promise.reject('');\n      } else {\n        localStorage.setItem(`userInfo`, JSON.stringify(data.userKeys));\n        localStorage.setItem(`userDetails`, JSON.stringify(data.userDetails));\n        history.push(`${process.env.PUBLIC_URL}/private-dashboard`);\n      }\n    }).catch(error => {\n      setLoading(false);\n      debugger; // localStorage.setItem(`userInfo`, JSON.stringify(data.userKeys));\n      // localStorage.setItem(`userDetails`, JSON.stringify(data.userDetails));\n      // history.push(`${process.env.PUBLIC_URL}/private-dashboard`)\n\n      setSnackbarInfo({ ...snackbar,\n        open: true,\n        message: \"Invalid email / password\",\n        variant: 'error'\n      });\n    });\n  };\n\n  const responseGoogle = data => {\n    alert(JSON.stringify(data));\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar,\n      open: false\n    });\n  };\n\n  const HandleSubmitCheck = () => {\n    if (!values.email.trim() || !values.password.trim()) {\n      setError({ ...error,\n        email: !values.email.trim() ? true : false,\n        password: !values.password.trim() ? true : false\n      });\n    } else {\n      handleSubmit();\n      setLoading(true);\n    }\n  };\n\n  const {\n    classes\n  } = props;\n  const REDIRECT_URI = \"http://localhost:3000\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.loginGrid,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.body2,\n        children: \"Login to ULCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          required: true,\n          onChange: handleChange(\"email\"),\n          id: \"outlined-required\",\n          value: values.email,\n          error: error.email,\n          label: \"Email address\",\n          helperText: error.email ? \"Enter an email\" : \" \",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.fullWidth,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            error: error.password,\n            htmlFor: \"outlined-adornment-password\",\n            children: \"Password * \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-password\",\n            type: values.showPassword ? \"text\" : \"password\",\n            value: values.password,\n            required: true,\n            error: error.password,\n            helperText: error.password ? \"Enter a password\" : \"\",\n            onChange: handleChange(\"password\"),\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 40\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 13\n            }, this),\n            labelWidth: 80\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 9\n          }, this), error.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: \"Incorrect password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"large\",\n          variant: \"contained\",\n          \"aria-label\": \"edit\",\n          className: classes.fullWidth,\n          onClick: () => {\n            HandleSubmitCheck();\n          },\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            className: classes.buttonProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 33\n          }, this), \"Sign In\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createLogin,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.width,\n          children: \"New to ULCA?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            id: \"newaccount\",\n            className: classes.link,\n            href: \"#\",\n            onClick: () => {\n              history.push(`${process.env.PUBLIC_URL}/user/register`);\n            },\n            children: [\" \", \"Create an account\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }, this), snackbar.open && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      handleClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      message: snackbar.message,\n      variant: snackbar.variant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"Xu8/XhK4qoobn/DAjLCc0n/pgnk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default withStyles(LoginStyles)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Login.jsx"],"names":["Grid","Typography","withStyles","Button","TextField","Link","InputLabel","OutlinedInput","IconButton","InputAdornment","FormHelperText","FormControl","Checkbox","FormControlLabel","CircularProgress","React","useState","LoginStyles","LoginApi","LoginSocialGithub","GoogleLogin","Divider","Visibility","VisibilityOff","useHistory","GmailIcon","GithubIcon","Snackbar","Login","props","values","setValues","email","password","checked","error","setError","snackbar","setSnackbarInfo","open","message","variant","history","loading","setLoading","handleChange","prop","event","target","value","handleCheckChange","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","ValidateEmail","mail","test","ValidatePassword","length","handleSubmit","data","apiObj","fetch","apiEndPoint","method","body","JSON","stringify","getBody","headers","getHeaders","then","response","rsp_data","json","ok","Promise","reject","localStorage","setItem","userKeys","userDetails","push","process","env","PUBLIC_URL","catch","responseGoogle","alert","handleSnackbarClose","HandleSubmitCheck","trim","classes","REDIRECT_URI","loginGrid","body2","root","textField","fullWidth","buttonProgress","createLogin","width","link","vertical","horizontal"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  withStyles,\n  Button,\n  TextField,\n  Link,\n  InputLabel,\n  OutlinedInput,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n  FormControl,\n  Checkbox,\n  FormControlLabel,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport LoginApi from \"../../../redux/actions/api/UserManagement/Login\"\nimport { LoginSocialGithub } from \"reactjs-social-login\";\nimport GoogleLogin from \"react-google-login\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport {  useHistory } from \"react-router-dom\";\nimport GmailIcon from \"../../../assets/gmail.png\";\nimport GithubIcon from \"../../../assets/github.png\";\nimport Snackbar from '../../components/common/Snackbar';\n// import {useReducer, useSelector} from \"react-redux\";\n// import { LoginSocialFacebook, LoginSocialGithub } from \"reactjs-social-login\";\n// import { LinkedIn } from \"react-linkedin-login-oauth2\";\n\n\nconst Login = (props) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    checked: false,\n  });\n  const [error, setError] = useState({\n    email: false,\n    password: false,\n    \n  });\n\n  const [snackbar, setSnackbarInfo] = useState({\n    open: false,\n    message: '',\n    variant: 'success'\n})\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const handleChange = (prop) => (event) => {\n    setError({ ...error, password: false , email: false });\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleCheckChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.checked });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const  ValidateEmail = (mail) => \n{\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\n  {\n    return (true)\n  }\n  else{\n    return false;\n  }  \n}\n\nconst ValidatePassword = (password) =>{\n  if(password.length>7) {\n    return (true)\n  }\n  else{\n    return false;\n  } \n}\n\n\nconst handleSubmit = async () => {\n\n  let data = {\n    \"userKeys\": {\n        \"email\": \"ulca@gmail.com\",\n        \"publicKey\": \"31f8ed31-25a0-44a2-8da0-db42b5855d2a\",\n        \"privateKey\": \"98541a718173430880f5ae13a4e79aa0\"\n    },\n    \"userDetails\": {\n        \"userID\": \"9a3f534cd588410f95d68696dd06fa2b\",\n        \"email\": \"ulca@gmail.com\",\n        \"firstName\": \"Ulca\",\n        \"lastName\": \"User\",\n        \"phoneNo\": \"9446400000\",\n        \"isVerified\": true,\n        \"isActive\": true,\n        \"registeredTime\": \"2021-06-07T16:19:13.532000\",\n        \"activatedTime\": \"2021-06-07T16:29:10.398000\"\n    }\n  }\n \n  let apiObj = new LoginApi(values)\n      fetch(apiObj.apiEndPoint(), {\n        method: 'post',\n        body: JSON.stringify(apiObj.getBody()),\n        headers: apiObj.getHeaders().headers\n      }).then(async response => {\n        const rsp_data = await response.json();\n        debugger\n        setLoading(false)\n        if (!response.ok) {\n          \n          return Promise.reject('');\n        } else {\n          localStorage.setItem(`userInfo`, JSON.stringify(data.userKeys));\n        localStorage.setItem(`userDetails`, JSON.stringify(data.userDetails));\n          \n          history.push(`${process.env.PUBLIC_URL}/private-dashboard`)\n        }\n      }).catch((error) => {\n        setLoading(false)\n        debugger\n        // localStorage.setItem(`userInfo`, JSON.stringify(data.userKeys));\n        // localStorage.setItem(`userDetails`, JSON.stringify(data.userDetails));\n        // history.push(`${process.env.PUBLIC_URL}/private-dashboard`)\n          setSnackbarInfo({\n                          ...snackbar,\n                          open: true,\n                          message: \"Invalid email / password\",\n                          variant: 'error'\n                      })\n      });\n    \n      }\n\n  const responseGoogle = (data) => {\n    alert(JSON.stringify(data));\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar, open: false })\n}\n\n  const HandleSubmitCheck = () => {\n    if(!values.email.trim() || !values.password.trim() ){\n      \n      setError({ ...error, email: !values.email.trim() ? true : false, password : !values.password.trim() ? true : false });\n    }\n    \n    else{\n      handleSubmit();\n      setLoading(true)\n    }\n    \n  };\n  const { classes } = props;\n  const REDIRECT_URI = \"http://localhost:3000\";\n\n  return (\n    <>\n    <Grid container className={classes.loginGrid}>\n      <Typography className={classes.body2}>Login to ULCA</Typography>\n      <form className={classes.root} autoComplete=\"off\">\n      <TextField\n        className={classes.textField}\n        required\n        onChange={handleChange(\"email\")}\n        id=\"outlined-required\"\n        value={values.email}\n        error = {error.email}\n        label=\"Email address\"\n        helperText={error.email ? \"Enter an email\":\" \"}\n        variant=\"outlined\"\n      />\n      <FormControl className={classes.fullWidth} variant=\"outlined\">\n        <InputLabel error ={error.password} htmlFor=\"outlined-adornment-password\">Password * </InputLabel>\n        \n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={values.showPassword ? \"text\" : \"password\"}\n          value={values.password}\n          required\n          error = {error.password}\n          helperText={error.password ? \"Enter a password\":\"\"}\n          onChange={handleChange(\"password\")}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n          labelWidth={80}\n        />\n        {error.password && <FormHelperText error={true}>Incorrect password</FormHelperText>}\n      </FormControl>\n      {/* <div className={classes.forgotPassword}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.checked}\n              onChange={handleCheckChange(\"checked\")}\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />\n          }\n          label=\"Keep me logged in \"\n        />\n        <Typography className={classes.forgoLink}>\n          <Link\n            id=\"newaccount\"\n            className={classes.link}\n            href=\"#\"\n            onClick={() => { history.push(`${process.env.PUBLIC_URL}/user/forgot-password`)}}\n          >\n            {\" \"}\n            Forgot Password?\n          </Link>\n        </Typography>\n      </div> */}\n\n<Button\n                    color=\"primary\"\n                    size = \"large\"\n                    variant=\"contained\" aria-label=\"edit\"  className={classes.fullWidth} onClick={() => {\n                      HandleSubmitCheck();\n                    }}\n                    disabled={loading}>\n                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                    Sign In\n                </Button>\n      {/* <Button\n        \n        color=\"primary\"\n        size = \"large\"\n        className={classes.fullWidth}\n        onClick={() => {\n          HandleSubmitCheck();\n        }}\n      >\n        Sign in\n      </Button> */}\n      </form>\n      {/* <div className={classes.line}>\n        <Divider className={classes.dividerFullWidth} />{\" \"}\n        <Typography className={classes.divider}>Or</Typography>\n        <Divider className={classes.dividerFullWidth} />\n      </div>\n      <GoogleLogin\n        render={(renderProps) => (\n          <Button\n            variant=\"contained\"\n            className={classes.gmailStyle}\n            onClick={renderProps.onClick}\n          >\n            <span style={{ marginRight: \"30px\" }}>\n              <img\n                \n                src={GmailIcon}\n                alt=\"\"\n                width=\"25px\"\n                height=\"25px\"\n                style={{ maginLeft: \"20px\" }}\n              />\n            </span>\n            Continue with Google\n          </Button>\n        )}\n        clientId=\"1042231143652-m25ln3odich8tfi08ql2rlbj0h820g9v.apps.googleusercontent.com\"\n        buttonText=\"Continue with Google\"\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      /> */}\n      {/* <LinkedIn\n          clientId=\"7859u4ovb44uiu\"\n          onFailure={responseGoogle}\n          onSuccess={responseGoogle}\n          redirectUri=\"http://localhost:3000/\"\n          renderElement={({ onClick, disabled }) => (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.linkedStyle}\n            >\n              <span className={classes.width}>\n                <img\n                  src=\"linkedin.svg\"\n                  alt =''\n                  width=\"20px\"\n                  height=\"20px\"\n                  style={{ maginLeft: \"20px\" }}\n                />\n              </span>\n              Continue with LinkedIn\n            </Button>\n          )}\n        />\n        <LoginSocialFacebook\n          appId={\"813819182874104\"}\n          className={classes.labelWidth}\n          onResolve={({ data }) => {\n            alert(JSON.stringify(data));\n          }}\n          onReject={(err) => alert(err)}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.fullWidth}\n          >\n            <span className={classes.width}>\n              <img\n                src=\"facebook.svg\"\n                alt =''\n                width=\"20px\"\n                height=\"20px\"\n                style={{ maginLeft: \"20px\" }}\n              />\n            </span>\n            Continue with Facebook\n          </Button>\n        </LoginSocialFacebook> */}\n      {/* <LoginSocialGithub\n        client_id={\"fc66013ca8d2c0bcf178\"}\n        className={classes.labelWidth}\n        redirect={REDIRECT_URI}\n        onResolve={({ provider, data }) => {\n          alert(JSON.stringify(data));\n        }}\n        onReject={(err) => alert(err)}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.githubStyle}\n        >\n          <span className={classes.width}>\n            <img\n              src={GithubIcon}\n              alt=\"\"\n              width=\"25px\"\n              height=\"25px\"\n              style={{ maginLeft: \"20px\" }}\n            />\n          </span>\n          <span>Continue with Github</span>\n        </Button>\n      </LoginSocialGithub> */}\n      <div className={classes.createLogin}>\n        <Typography className={classes.width}>New to ULCA?</Typography>\n        <Typography>\n          <Link id=\"newaccount\" className={classes.link}  href=\"#\"\n            onClick={() => { history.push(`${process.env.PUBLIC_URL}/user/register`)}}>\n            {\" \"}\n            Create an account\n          </Link>\n        </Typography>\n      </div>\n      \n    </Grid>\n    {snackbar.open &&\n      <Snackbar\n          open={snackbar.open}\n          handleClose={handleSnackbarClose}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          message={snackbar.message}\n          variant={snackbar.variant}\n      />}\n      </>\n  );\n};\n\nexport default withStyles(LoginStyles)(Login);\n"]},"metadata":{},"sourceType":"module"}