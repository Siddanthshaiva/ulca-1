{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/SearchDownloadRecords.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Button, TextField, MenuItem, Checkbox, FormControlLabel, Divider } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SearchResult from \"./SearchResult\";\nimport { withStyles } from '@material-ui/core/styles';\nimport DatasetStyle from '../../../styles/Dataset';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useState } from 'react';\nimport DownloadDatasetRecords from \"./DownloadDatasetRecords\";\nimport RequestNumberCreation from \"./RequestNumberCreation\";\nimport { useHistory, useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchAndDownloadRecords = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const url = UrlConfig.dataset;\n  const param = useParams();\n  const history = useHistory();\n  const [languagePair, setLanguagePair] = useState({\n    source: '',\n    target: ''\n  });\n  const [filterBy, setFilterBy] = useState({\n    domain: '',\n    source: '',\n    collectionMethod: ''\n  });\n  const [datasetType, setDatasetType] = useState({\n    pd: true\n  });\n\n  const handleCheckboxChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleLanguagePairChange = (value, property) => {\n    setLanguagePair({ ...languagePair,\n      [property]: value\n    });\n  };\n\n  const handleFilterByChange = (event, property) => {\n    setFilterBy({ ...filterBy,\n      [`${property}`]: event.target.value\n    });\n  };\n\n  const sourceLanguages = [{\n    value: 'Eng',\n    label: 'English'\n  }, {\n    value: 'Hin',\n    label: 'Hindi'\n  }, {\n    value: 'Ben',\n    label: 'Bengali'\n  }, {\n    value: 'Mar',\n    label: 'Marathi'\n  }];\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: false\n  });\n\n  const renderPage = () => {\n    const {\n      params\n    } = param;\n\n    switch (params) {\n      case 'inprogress':\n        return /*#__PURE__*/_jsxDEV(RequestNumberCreation, {\n          reqno: \"0005870\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this);\n\n      case 'published':\n        return /*#__PURE__*/_jsxDEV(DownloadDatasetRecords, {\n          datasetType: \"Parallel\",\n          sentencePair: \"9.8 Million\",\n          datasetsContributed: \"29\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(SearchResult, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  const handleDatasetClick = property => {\n    setDatasetType({\n      [property]: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.searchDivStyle,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        lg: 4,\n        xl: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.breadcrum,\n          children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n            links: [url],\n            activeLink: \"Search & Download Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Select Dataset Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonDiv,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: datasetType.pd ? \"contained\" : \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDatasetClick('pd'),\n            children: \"Parallel Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: datasetType.md ? \"contained\" : \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDatasetClick('md'),\n            children: \"Monolingual Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: datasetType.atd ? \"contained\" : \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDatasetClick('atd'),\n            children: \"ASR/TTS Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: datasetType.od ? \"contained\" : \"outlined\",\n            color: \"primary\",\n            onClick: () => handleDatasetClick('od'),\n            children: \"OCR Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Select Language Pair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subHeader,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.subHeader,\n            fullWidth: true,\n            id: \"select-source-language\",\n            select: true,\n            label: \"Source Language *\",\n            value: languagePair.source,\n            onChange: event => handleLanguagePairChange(event.target.value, 'source'),\n            children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), !datasetType.md && /*#__PURE__*/_jsxDEV(Autocomplete, {\n            filterSelectedOptions: true,\n            limitTags: 3,\n            multiple: true,\n            id: \"select-target-language\",\n            options: sourceLanguages,\n            getOptionLabel: option => option.label,\n            onChange: (event, value, reason) => handleLanguagePairChange(value, 'target'),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              variant: \"standard\",\n              label: \"Target Language *\" // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Filter by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subHeader,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.subHeader,\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"select-source-language\",\n                select: true,\n                label: \"Select Domain\",\n                value: filterBy.domain,\n                onChange: event => handleFilterByChange(event, 'domain'),\n                children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"select-source-language\",\n                select: true,\n                label: \"Select Source\",\n                value: filterBy.source,\n                onChange: event => handleFilterByChange(event, 'source'),\n                children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"select-source-language\",\n            select: true,\n            label: \"Select Collection Method\",\n            value: filterBy.collectionMethod,\n            onChange: event => handleFilterByChange(event, 'collectionMethod'),\n            children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: state.checkedA,\n            onChange: handleCheckboxChange,\n            name: \"checkedB\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this),\n          label: \"Vetted by multiple annotators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: state.checkedB,\n            onChange: handleCheckboxChange,\n            name: \"checkedB\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this),\n          label: \"Source sentences manually translated by multiple translators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.clearNSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/inprogress`),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        sm: 1,\n        md: 1,\n        lg: 1,\n        xl: 1,\n        children: /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 7,\n        lg: 7,\n        xl: 7,\n        children: renderPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchAndDownloadRecords, \"plGPJp2B+pKRp5AnWryK9WHaWtU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = SearchAndDownloadRecords;\nexport default withStyles(DatasetStyle)(SearchAndDownloadRecords);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAndDownloadRecords\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/SearchDownloadRecords.jsx"],"names":["Grid","Paper","Typography","Button","TextField","MenuItem","Checkbox","FormControlLabel","Divider","Autocomplete","SearchResult","withStyles","DatasetStyle","BreadCrum","UrlConfig","useState","DownloadDatasetRecords","RequestNumberCreation","useHistory","useParams","SearchAndDownloadRecords","props","classes","url","dataset","param","history","languagePair","setLanguagePair","source","target","filterBy","setFilterBy","domain","collectionMethod","datasetType","setDatasetType","pd","handleCheckboxChange","event","setState","state","name","checked","handleLanguagePairChange","value","property","handleFilterByChange","sourceLanguages","label","checkedA","checkedB","renderPage","params","handleDatasetClick","searchDivStyle","breadcrum","subHeader","buttonDiv","innerButton","md","atd","od","map","option","reason","clearNSubmit","push","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import {\n    Grid,\n    Paper,\n    Typography,\n    Button,\n    TextField,\n    MenuItem,\n    Checkbox,\n    FormControlLabel,\n    Divider\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SearchResult from \"./SearchResult\";\nimport { withStyles } from '@material-ui/core/styles';\nimport DatasetStyle from '../../../styles/Dataset';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport UrlConfig from '../../../../configs/internalurlmapping';\n\nimport { useState } from 'react';\nimport DownloadDatasetRecords from \"./DownloadDatasetRecords\";\nimport RequestNumberCreation from \"./RequestNumberCreation\";\nimport { useHistory, useParams } from 'react-router';\n\nconst SearchAndDownloadRecords = (props) => {\n    const { classes } = props;\n    const url = UrlConfig.dataset;\n    const param = useParams();\n    const history = useHistory();\n    const [languagePair, setLanguagePair] = useState({\n        source: '',\n        target: ''\n    });\n    const [filterBy, setFilterBy] = useState({\n        domain: '',\n        source: '',\n        collectionMethod: ''\n    });\n\n    const [datasetType, setDatasetType] = useState({\n        pd: true\n    })\n    const handleCheckboxChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n    const handleLanguagePairChange = (value, property) => {\n        setLanguagePair({ ...languagePair, [property]: value });\n    };\n    const handleFilterByChange = (event, property) => {\n        setFilterBy({ ...filterBy, [`${property}`]: event.target.value });\n    };\n    const sourceLanguages = [\n        {\n            value: 'Eng',\n            label: 'English',\n        },\n        {\n            value: 'Hin',\n            label: 'Hindi',\n        },\n        {\n            value: 'Ben',\n            label: 'Bengali',\n        },\n        {\n            value: 'Mar',\n            label: 'Marathi',\n        },\n    ];\n    const [state, setState] = useState({\n        checkedA: true,\n        checkedB: false,\n    });\n\n    const renderPage = () => {\n        const { params } = param\n        switch (params) {\n            case 'inprogress':\n                return <RequestNumberCreation reqno={\"0005870\"} />\n            case 'published':\n                return <DownloadDatasetRecords datasetType={\"Parallel\"} sentencePair={\"9.8 Million\"} datasetsContributed={\"29\"} />\n            default:\n                return <SearchResult />\n        }\n    }\n\n    const handleDatasetClick = (property) => {\n        setDatasetType({[property]:true })\n    }\n    return (\n        <div className={classes.searchDivStyle}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\n                    <div className={classes.breadcrum}>\n                        <BreadCrum links={[url]} activeLink=\"Search & Download Records\" />\n                    </div>\n                    <Typography className={classes.subHeader} variant=\"h6\">Select Dataset Type</Typography>\n\n                    <div className={classes.buttonDiv}>\n                        <Button className={classes.innerButton} variant={datasetType.pd ? \"contained\" : \"outlined\"}\n                            color=\"primary\"\n                            onClick={() => handleDatasetClick('pd')}\n                        >\n                            Parallel Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant={datasetType.md ? \"contained\" : \"outlined\"}\n                            color=\"primary\"\n                            onClick={() => handleDatasetClick('md')}\n                        >\n                            Monolingual Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant={datasetType.atd ? \"contained\" : \"outlined\"}\n                            color=\"primary\"\n                            onClick={() => handleDatasetClick('atd')}\n                        >\n                            ASR/TTS Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant={datasetType.od ? \"contained\" : \"outlined\"}\n                            color=\"primary\"\n                            onClick={() => handleDatasetClick('od')}\n                        >\n                            OCR Dataset\n                    </Button>\n                    </div>\n\n                    <Typography className={classes.subHeader} variant=\"h6\">Select Language Pair</Typography>\n                    <div className={classes.subHeader}>\n                        <TextField className={classes.subHeader}\n                            fullWidth\n                            id=\"select-source-language\"\n                            select\n                            label=\"Source Language *\"\n                            value={languagePair.source}\n                            onChange={(event) => handleLanguagePairChange(event.target.value, 'source')}\n                        >\n                            {sourceLanguages.map((option) => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                       { !datasetType.md && \n                       <Autocomplete\n                            filterSelectedOptions\n                            limitTags={3}\n                            multiple\n                            id=\"select-target-language\"\n                            options={sourceLanguages}\n                            getOptionLabel={(option) => option.label}\n                            onChange={(event, value, reason) => handleLanguagePairChange(value, 'target')}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    variant=\"standard\"\n                                    label=\"Target Language *\"\n                                // placeholder=\"Favorites\"\n                                />\n                            )}\n                        />}\n                    </div>\n                    <Typography className={classes.subHeader} variant=\"h6\">Filter by</Typography>\n                    <div className={classes.subHeader}>\n                        <Grid container spacing={2}>\n                            <Grid className={classes.subHeader} item xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id=\"select-source-language\"\n                                    select\n                                    label=\"Select Domain\"\n                                    value={filterBy.domain}\n                                    onChange={(event) => handleFilterByChange(event, 'domain')}\n                                >\n                                    {sourceLanguages.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id=\"select-source-language\"\n                                    select\n                                    label=\"Select Source\"\n                                    value={filterBy.source}\n                                    onChange={(event) => handleFilterByChange(event, 'source')}\n                                >\n                                    {sourceLanguages.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                        <TextField\n                            fullWidth\n                            id=\"select-source-language\"\n                            select\n                            label=\"Select Collection Method\"\n                            value={filterBy.collectionMethod}\n                            onChange={(event) => handleFilterByChange(event, 'collectionMethod')}\n                        >\n                            {sourceLanguages.map((option) => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </div>\n\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={state.checkedA}\n                                onChange={handleCheckboxChange}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Vetted by multiple annotators\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={state.checkedB}\n                                onChange={handleCheckboxChange}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Source sentences manually translated by multiple translators\"\n                    />\n                    <div className={classes.clearNSubmit}>\n                        <Button color=\"primary\">\n                            Clear\n                    </Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/inprogress`)}>\n                            Submit\n                    </Button>\n                    </div>\n                </Grid>\n                <Grid item xs={1} sm={1} md={1} lg={1} xl={1}>\n                    <Divider orientation=\"vertical\" />\n                </Grid>\n                <Grid item xs={12} sm={12} md={7} lg={7} xl={7}>\n                    {renderPage()}\n                    {/* <SearchResult/> */}\n                    {/* <RequestNumberCreation reqno={\"0005870\"} /> */}\n                    {/* <DownloadDatasetRecords datasetType={\"Parallel\"} sentencePair={\"9.8 Million\"} datasetsContributed={\"29\"}/> */}\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n\n\n}\n\nexport default withStyles(DatasetStyle)(SearchAndDownloadRecords);"]},"metadata":{},"sourceType":"module"}