{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from '../reducers';\nimport * as stateData from '../data/initialstate.json';\nconst middlewares = [];\nconst config = {\n  key: 'root',\n  storage\n};\nconst reducer = persistCombineReducers(config, rootReducer);\nmiddlewares.push(thunk);\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger());\n}\n\nconst store = createStore(reducer, stateData.default, process.env.NODE_ENV === 'development' ? composeWithDevTools(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares)));\nexport default store;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/store/store.js"],"names":["createStore","compose","applyMiddleware","thunk","createLogger","composeWithDevTools","persistCombineReducers","storage","rootReducer","stateData","middlewares","config","key","reducer","push","process","env","NODE_ENV","store","default"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,sBAAT,QAAuC,eAAvC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,2BAA3B;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE,MADM;AAEXL,EAAAA;AAFW,CAAf;AAKA,MAAMM,OAAO,GAAGP,sBAAsB,CAACK,MAAD,EAASH,WAAT,CAAtC;AAEAE,WAAW,CAACI,IAAZ,CAAiBX,KAAjB;;AACA,IAAIY,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCP,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,YAAY,EAA7B;AACH;;AAED,MAAMc,KAAK,GAAGlB,WAAW,CACrBa,OADqB,EAErBJ,SAAS,CAACU,OAFW,EAGpBJ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA1B,GAA2CZ,mBAAmB,CAACH,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAA9D,GAAkGT,OAAO,CAACC,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAHpF,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from '../reducers';\nimport * as stateData from '../data/initialstate.json';\n\nconst middlewares = [];\nconst config = {\n    key: 'root',\n    storage\n};\n\nconst reducer = persistCombineReducers(config, rootReducer);\n\nmiddlewares.push(thunk);\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(createLogger());\n}\n\nconst store = createStore(\n    reducer,\n    stateData.default,\n    (process.env.NODE_ENV === 'development') ? composeWithDevTools(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}