{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Theme from \"../../theme/theme-default\";\nimport { withStyles, Typography, MuiThemeProvider, Paper, Button } from \"@material-ui/core\";\nimport ChartStyles from \"../../styles/Dashboard\";\nimport { ResponsiveContainer, BarChart, Bar, Cell, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport Select from 'react-select';\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\nimport { isMobile } from 'react-device-detect';\nimport { FilterList } from '@material-ui/icons';\nimport Header from '../../components/common/Header';\nimport authenticate from '../../../configs/authenticate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"];\n\nconst ChartRender = props => {\n  _s();\n\n  const [selectedOption, setSelectedOption] = useState({\n    value: 'Parallel Dataset',\n    label: 'Parallel Dataset'\n  });\n  const [title, setTitle] = useState(\"Number of parallel sentences per language with English\");\n  const [filterValue, setFilterValue] = useState(\"domain\");\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [datasetvalues, setDatasetvalues] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const DashboardReport = useSelector(state => state.dashboardReport);\n  const {\n    classes\n  } = props;\n  const options = [{\n    value: 'Parallel Dataset',\n    label: 'Parallel Dataset'\n  }, {\n    value: 'Monolingual Dataset',\n    label: 'Monolingual Dataset'\n  }, {\n    value: 'ASR / TTS Dataset',\n    label: 'ASR / TTS Dataset'\n  }, {\n    value: 'OCR Dataset',\n    label: 'OCR Dataset'\n  }];\n  useEffect(() => {\n    fetchChartData(\"parallel-corpus\", \"languagePairs\", []);\n  }, []);\n\n  const fetchChartData = (dataType, value, criterions) => {\n    const userObj = new FetchLanguageDataSets(dataType, value, criterions);\n    dispatch(APITransport(userObj));\n\n    if (authenticate()) {\n      history.push(`${process.env.PUBLIC_URL}/private-dashboard`);\n    } else {\n      localStorage.removeItem('token');\n      history.push(`${process.env.PUBLIC_URL}/dashboard`);\n    }\n  };\n\n  const customStyles = {\n    option: (provided, state) => ({ ...provided,\n      borderColor: \"green\",\n      color: 'black',\n      padding: 20,\n      background: state.isSelected && \"#c7c6c68a !important\"\n    }),\n    control: (base, state) => ({ ...base,\n      // This line disable the blue border\n      borderColor: \"#392C71\",\n      border: \"1px solid rgba(57, 44, 113, 0.5)\",\n      boxShadow: state.isFocused ? 0 : 0,\n      fontFamily: \"Source Sans Pro, Arial, sans-serif \"\n    })\n  };\n\n  const handleOnClick = (value, event, filterValue) => {\n    // if (event && event.hasOwnProperty(\"label\") && event.label === \"Others\") {\n    //     let others = this.props.dataValues.slice(7, this.props.dataValues.length)\n    //     this.setState({\n    // \tdataSetValues: others,\n    // \tcardNavigation: true\n    //     })\n    // } else {\n    switch (value) {\n      case 1:\n        fetchChartData(\"parallel-corpus\", filterValue ? filterValue : filterValue, [{\n          \"type\": \"PARAMS\",\n          \"sourceLanguage\": {\n            \"type\": \"PARAMS\",\n            \"value\": \"English\"\n          },\n          \"targetLanguage\": {\n            \"type\": \"PARAMS\",\n            \"value\": selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label\n          }\n        }]);\n        setPage(value);\n        setFilterValue('domain');\n        this.setState({\n          dataSetValues: [],\n          selectedLanguage: selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label,\n          title: `English-${selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label}  parallel corpus - Grouped by ${filterValue == \"domain\" ? \"Domain\" : filterValue == \"source\" ? \"Source\" : filterValue == \"collectionMethod\" ? \"Collection Method\" : \"Domain\"}`\n        });\n        break;\n\n      case 2:\n        fetchChartData(\"parallel-corpus\", filterValue == \"source\" ? \"domain\" : \"source\", [{\n          \"type\": \"PARAMS\",\n          \"sourceLanguage\": {\n            \"type\": \"PARAMS\",\n            \"value\": \"English\"\n          },\n          \"targetLanguage\": {\n            \"type\": \"PARAMS\",\n            \"value\": selectedLanguage\n          }\n        }, {\n          \"type\": \"PARAMS\",\n          \"value\": event && event.hasOwnProperty(\"label\") && event.label\n        }]);\n        setPage(value);\n        setFilterValue('domain');\n        this.setState({\n          dataSetValues: [],\n          title: `English-${selectedLanguage} parallel corpus`,\n          filterValue: 'domain'\n        });\n        break;\n\n      default:\n        fetchChartData(\"parallel-corpus\", \"languagePairs\", []);\n        setPage(value);\n        setFilterValue('domain');\n        setTitle(\"English-Indic language parallel corpus\");\n        setSelectedLanguage(\"\");\n        setDatasetvalues(\"dataSetValues\");\n        break;\n    }\n  };\n\n  const handleLanguageChange = value => {\n    setfilterValue(value);\n    handleOnClick(1, \"\", value);\n  };\n\n  const fetchLanuagePairButtons = () => {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: filterValue === \"domain\" ? \"primary\" : \"light\",\n        style: filterValue === \"domain\" ? {\n          backgroundColor: \"#E8F5F8\"\n        } : {},\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => handleLanguageChange(\"domain\"),\n        children: \"Domain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: filterValue === \"source\" ? \"primary\" : \"light\",\n        style: filterValue === \"source\" ? {\n          backgroundColor: \"#E8F5F8\"\n        } : {},\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => handleLanguageChange(\"source\"),\n        children: \"Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: filterValue === \"collectionMethod\" ? \"primary\" : \"light\",\n        style: filterValue === \"collectionMethod\" ? {\n          backgroundColor: \"#E8F5F8\"\n        } : {},\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => handleLanguageChange(\"collectionMethod\"),\n        children: \"Collection Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleSelectChange = value => {\n    setSelectedOption(value);\n\n    switch (value.label) {\n      case 'Parallel Dataset':\n        setTitle(\"Number of parallel sentences per language with English\");\n        break;\n\n      case 'Monolingual Dataset':\n        setTitle('Number of sentences per language');\n        break;\n\n      case 'ASR / TTS Dataset':\n        setTitle(\"Numer of audio hours per language\");\n        break;\n\n      case 'OCR Dataset':\n        setTitle(\"Numer of images per script\");\n        break;\n\n      default:\n        setTitle(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!authenticate() && /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: Theme,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.titleBar,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"b\",\n            component: \"h3\",\n            className: classes.Typography,\n            children: \" Dataset Type : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: classes.select,\n            styles: customStyles,\n            color: \"primary\",\n            value: selectedOption,\n            onChange: value => {\n              handleSelectChange(value);\n            },\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 6\n          }, this), fetchLanuagePairButtons()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            value: \"\",\n            variant: \"h6\",\n            children: [\" \", title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"95%\",\n          height: 450,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 900,\n            height: 450,\n            data: DashboardReport,\n            maxBarSize: 100,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"label\",\n              textAnchor: isMobile ? \"end\" : \"middle\",\n              tick: {\n                angle: isMobile ? -60 : 0\n              },\n              height: isMobile ? 100 : 60,\n              interval: 0,\n              position: \"insideLeft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dx: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              horizontal: true,\n              vertical: false,\n              textAnchor: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                fill: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"value\",\n              radius: [4, 4, 0, 0],\n              maxBarSize: 30,\n              children: DashboardReport.length > 0 && DashboardReport.map((entry, index) => {\n                const color = colors[index < 9 ? index : index % 10];\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: `#${color}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChartRender, \"Mm7Ie3KJ8wK41VZ3OoH+RHvi+Cc=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = ChartRender;\nexport default withStyles(ChartStyles(Theme))(ChartRender);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartRender\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","Theme","withStyles","Typography","MuiThemeProvider","Paper","Button","ChartStyles","ResponsiveContainer","BarChart","Bar","Cell","CartesianGrid","XAxis","YAxis","Tooltip","Select","APITransport","FetchLanguageDataSets","isMobile","FilterList","Header","authenticate","colors","ChartRender","props","selectedOption","setSelectedOption","value","label","title","setTitle","filterValue","setFilterValue","selectedLanguage","setSelectedLanguage","page","setPage","datasetvalues","setDatasetvalues","history","dispatch","DashboardReport","state","dashboardReport","classes","options","fetchChartData","dataType","criterions","userObj","push","process","env","PUBLIC_URL","localStorage","removeItem","customStyles","option","provided","borderColor","color","padding","background","isSelected","control","base","border","boxShadow","isFocused","fontFamily","handleOnClick","event","hasOwnProperty","setState","dataSetValues","handleLanguageChange","setfilterValue","fetchLanuagePairButtons","backgroundColor","backButton","handleSelectChange","container","paper","titleBar","select","angle","fill","length","map","entry","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Theme from \"../../theme/theme-default\";\r\nimport { withStyles, Typography, MuiThemeProvider, Paper, Button } from \"@material-ui/core\";\r\nimport ChartStyles from \"../../styles/Dashboard\";\r\nimport { ResponsiveContainer, BarChart, Bar, Cell, CartesianGrid, XAxis, YAxis, Tooltip,} from 'recharts';\r\nimport Select from 'react-select';\r\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\r\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport {FilterList} from '@material-ui/icons';\r\nimport Header from '../../components/common/Header';\r\nimport authenticate from '../../../configs/authenticate';\r\n\r\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"]\r\n\r\n\r\nconst ChartRender = (props) => {\r\n        const [selectedOption, setSelectedOption]   \t= \tuseState({ value: 'Parallel Dataset', label: 'Parallel Dataset' });\r\n        const [title, setTitle]                     \t= \tuseState(\"Number of parallel sentences per language with English\");\r\n\tconst [filterValue, setFilterValue]\t\t=\tuseState(\"domain\");\r\n\tconst [selectedLanguage,setSelectedLanguage]\t=\tuseState(\"\");\r\n\tconst [page, setPage]\t\t\t\t= \tuseState(0);\r\n\tconst [datasetvalues, setDatasetvalues]\t\t=\tuseState()\r\n        const history                               \t= \tuseHistory();\r\n        const dispatch                             \t= \tuseDispatch();\r\n        const DashboardReport                       \t= \tuseSelector( (state) => state.dashboardReport);\r\n        const { classes }                           \t= \tprops;\r\n        const options \t\t\t\t    \t= \t[\r\n\t\t\t\t\t\t\t\t\t{ value: 'Parallel Dataset', label: 'Parallel Dataset' },\r\n\t\t\t\t\t\t\t\t\t{ value: 'Monolingual Dataset', label: 'Monolingual Dataset' },\r\n\t\t\t\t\t\t\t\t\t{ value: 'ASR / TTS Dataset', label: 'ASR / TTS Dataset' },\r\n\t\t\t\t\t\t\t\t\t{ value: 'OCR Dataset', label: 'OCR Dataset' },\r\n\t\t\t\t\t\t\t\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchChartData(\"parallel-corpus\", \"languagePairs\", [])\r\n\t}, []);\r\n\r\n\tconst fetchChartData = (dataType, value, criterions) =>{\r\n\t\tconst userObj \t\t= \tnew FetchLanguageDataSets(dataType, value, criterions);\r\n\t\tdispatch(APITransport(userObj));\r\n\t\tif (authenticate()) {\r\n\t\t\thistory.push(`${process.env.PUBLIC_URL}/private-dashboard`)\r\n\t\t} \r\n\t\telse {\r\n\t\t\tlocalStorage.removeItem('token')\r\n\t\t\thistory.push(`${process.env.PUBLIC_URL}/dashboard`)\r\n\r\n\t\t}\r\n\t} \r\n\r\n\tconst customStyles = {\r\n\t\toption\t: (provided, state) => ({\r\n\t\t\t...provided,\r\n\t\t\tborderColor\t:\t\"green\",\r\n\t\t\tcolor\t\t: \t'black',\r\n\t\t\tpadding\t\t: \t20,\r\n\t\t\tbackground\t: \tstate.isSelected && \"#c7c6c68a !important\",\r\n\r\n\t\t}),\r\n\t\tcontrol: (base, state) => ({\r\n\t\t...base,\r\n\t\t// This line disable the blue border\r\n\t\t\tborderColor\t:\t\"#392C71\",\r\n\t\t\tborder \t\t: \t\"1px solid rgba(57, 44, 113, 0.5)\",\r\n\t\t\tboxShadow\t: \tstate.isFocused ? 0 : 0,\r\n\t\t\tfontFamily\t: \t\"Source Sans Pro, Arial, sans-serif \"\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleOnClick= (value, event, filterValue) =>  {\r\n\t\t// if (event && event.hasOwnProperty(\"label\") && event.label === \"Others\") {\r\n\t\t//     let others = this.props.dataValues.slice(7, this.props.dataValues.length)\r\n\t\t//     this.setState({\r\n\t\t// \tdataSetValues: others,\r\n\t\t// \tcardNavigation: true\r\n\t\t//     })\r\n\t\t// } else {\r\n\t\t    switch (value) {\r\n\t\t\tcase 1:\r\n\t\t\t\tfetchChartData(\"parallel-corpus\", filterValue ? filterValue : filterValue, [{ \"type\": \"PARAMS\", \"sourceLanguage\": { \"type\": \"PARAMS\", \"value\": \"English\" }, \"targetLanguage\": { \"type\": \"PARAMS\", \"value\": selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label } }])\r\n\t\t\t\tsetPage(value)\r\n\t\t\t\tsetFilterValue('domain')\r\n\t\t\t\tthis.setState({  dataSetValues: [], selectedLanguage: selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label, title: `English-${selectedLanguage ? selectedLanguage : event && event.hasOwnProperty(\"label\") && event.label}  parallel corpus - Grouped by ${(filterValue == \"domain\") ? \"Domain\" : (filterValue == \"source\") ? \"Source\" : filterValue == \"collectionMethod\" ? \"Collection Method\" : \"Domain\"}` })\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfetchChartData(\"parallel-corpus\", filterValue == \"source\" ? \"domain\" : \"source\", [{ \"type\": \"PARAMS\", \"sourceLanguage\": { \"type\": \"PARAMS\", \"value\": \"English\" }, \"targetLanguage\": { \"type\": \"PARAMS\", \"value\": selectedLanguage } }, { \"type\": \"PARAMS\", \"value\": event && event.hasOwnProperty(\"label\") && event.label }])\r\n\t\t\t\tsetPage(value)\r\n\t\t\t\tsetFilterValue('domain')\r\n\t\t\t\tthis.setState({ dataSetValues: [], title: `English-${selectedLanguage} parallel corpus`, filterValue: 'domain' })\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfetchChartData(\"parallel-corpus\", \"languagePairs\", [])\r\n\t\t\t\tsetPage(value)\r\n\t\t\t\tsetFilterValue('domain')\r\n\t\t\t\tsetTitle(\"English-Indic language parallel corpus\")\r\n\t\t\t\tsetSelectedLanguage(\"\")\r\n\t\t\t\tsetDatasetvalues(\"dataSetValues\")\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t    }\r\n\t\t\r\n\t    }\r\n\r\n\tconst handleLanguageChange = (value) => {\r\n\t\tsetfilterValue(value)\r\n\t\thandleOnClick(1, \"\", value)\r\n\t    }\r\n\r\n\tconst fetchLanuagePairButtons = () => {\r\n\t\tconst { classes } = this.props;\r\n\t\r\n\t\treturn (\r\n\t\t    <div>\r\n\t\t\t<Button color={filterValue === \"domain\" ? \"primary\" : \"light\"} style={ filterValue === \"domain\" ? {backgroundColor: \"#E8F5F8\"} : {} } size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => handleLanguageChange(\"domain\")}>Domain</Button>\r\n\t\t\t<Button color={filterValue === \"source\" ? \"primary\" : \"light\"} style={ filterValue === \"source\" ? {backgroundColor: \"#E8F5F8\"} : {} }size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => handleLanguageChange(\"source\")}>Source</Button>\r\n\t\t\t<Button color={filterValue === \"collectionMethod\" ? \"primary\" : \"light\"} style={ filterValue === \"collectionMethod\" ? {backgroundColor: \"#E8F5F8\"} : {} } size=\"medium\" variant=\"outlined\" className={classes.backButton} onClick={() => handleLanguageChange(\"collectionMethod\")}>Collection Method</Button>\r\n\t\t   \r\n\t\t    </div>\r\n\t\t)\r\n\t    }\r\n\r\n\tconst handleSelectChange = (value) =>{\r\n\t\tsetSelectedOption( value)\r\n\t\tswitch (value.label) {\r\n\t\t\tcase 'Parallel Dataset':\r\n\t\t\t\t setTitle(\"Number of parallel sentences per language with English\")\r\n\t\t\t\t break;\r\n\t\t\tcase 'Monolingual Dataset':\r\n\t\t\t\t setTitle('Number of sentences per language')\r\n\t\t\t\t break;\r\n\t\t\tcase 'ASR / TTS Dataset':\r\n\t\t\t\t setTitle(\"Numer of audio hours per language\")\r\n\t\t\t\t break;\r\n\t\t\tcase 'OCR Dataset':\r\n\t\t\t\tsetTitle(\"Numer of images per script\")\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsetTitle(\"\")\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n     return (\r\n        <>\r\n            \t{ !authenticate() &&\r\n\t\t\t<MuiThemeProvider theme={Theme}>\r\n\t\t\t\t<Header /><br /><br /><br /><br />\r\n\t\t\t</MuiThemeProvider>\r\n        \t}\r\n                <div className\t=\t{classes.container}>\r\n\t\t\t{/* <div className={classes.breadcrum}>\r\n\t\t\t\t<BreadCrum links={[\"Dataset\"]} activeLink=\"Submit Dataset\" />\r\n\t\t\t</div> */}\r\n\t\t\t<Paper elevation  = {3} className  = {classes.paper}>\r\n\t\t\t\t<div className  =\t{classes.titleBar}>\r\n\t\t\t\t\t<Typography \tvariant   \t=\t\"b\" component = \"h3\" \r\n\t\t\t\t\t\t\tclassName \t= \t{classes.Typography}> Dataset Type :\t</Typography>\r\n\t\t\t\t\t<Select \tclassName \t= \t{classes.select} \r\n\t\t\t\t\t\t\tstyles \t\t= \t{customStyles} color= \"primary\"\r\n\t\t\t\t\t\t\tvalue   \t=\t{selectedOption}\r\n\t\t\t\t\t\t\tonChange\t=\t{(value)=>{handleSelectChange(value)}}\r\n\t\t\t\t\t\t\toptions\t\t=\t{options}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{fetchLanuagePairButtons()}\r\n\t\t\t\t\t{/* <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.filterButton} onClick={() => this.handleLanguageChange(\"domain\")}><FilterList className ={classes.iconStyle}/>Filter</Button>\r\n\t\t\t\t\t<Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.filterButtonIcon} onClick={() => this.handleLanguageChange(\"domain\")}><FilterList className ={classes.iconStyle}/></Button> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t<Typography value=\"\" variant=\"h6\"> {title} </Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ResponsiveContainer width = \"95%\" height = {450}>\r\n\t\t\t\t\t<BarChart width = {900} height \t= \t{450} data={DashboardReport} maxBarSize = {100} >\r\n\t\t\t\t\t\t<XAxis \tdataKey \t= \t\"label\"\r\n\t\t\t\t\t\t\ttextAnchor\t=\t{isMobile ? \"end\" : \"middle\"}\r\n\t\t\t\t\t\t\ttick\t\t=\t{{ angle: isMobile ? -60 : 0 }} \r\n\t\t\t\t\t\t\theight\t\t=\t{isMobile ? 100 : 60}\r\n\t\t\t\t\t\t\tinterval\t=\t{0}\r\n\t\t\t\t\t\t\tposition\t=\t\"insideLeft\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<YAxis type=\"number\" dx\t=\t{0} />\r\n\t\t\t\t\t\t<CartesianGrid horizontal = {true} vertical = {false} textAnchor = {\"middle\"} />\r\n\t\t\t\t\t\t<Tooltip cursor={{fill: 'none'}}/>\r\n\t\t\t\t\t\t<Bar dataKey = \"value\" radius = {[4, 4, 0, 0]} maxBarSize = {30}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tDashboardReport.length > 0 && DashboardReport.map((entry, index) => {\r\n\t\t\t\t\t\t\t\t\tconst color \t= \tcolors[index < 9 ? index : index % 10]\r\n\t\t\t\t\t\t\t\t\treturn <Cell key = {index} fill = {`#${color}`} />;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Bar>\r\n\t\t\t\t\t</BarChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\r\n\t\t\t</Paper>\r\n\r\n\t\t</div>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default withStyles(ChartStyles(Theme))(ChartRender);\r\n"]},"metadata":{},"sourceType":"module"}