{"ast":null,"code":"import C from '../../actions/constants';\n\nconst reducer = (state = {}, action) => {\n  function compare(a, b) {\n    if (a.value < b.value) {\n      return 1;\n    }\n\n    if (a.value > b.value) {\n      return -1;\n    }\n\n    return 0;\n  } //   const handleData = (dataValues) =>{\n  //     if (dataValues.length > 0) {\n  //       let others = dataValues.slice(7, dataValues.length)\n  //       let othersCount = 0\n  //       others.map(dataVal => {\n  //           othersCount = dataVal.value + othersCount\n  //       })\n  //       let dataSetValues = dataValues.slice(0, 7)\n  //       let obj = {}\n  //       if (dataValues.length > 7) {\n  //           obj.value = othersCount\n  //           obj.label = \"Others\"\n  //           dataSetValues.push(obj)\n  //       }\n  //       return {dataSetValues, dataValues} \n  //   }\n  // }\n\n\n  const handleSum = data => {\n    const count = data.reduce((acc, rem) => acc + Number(rem.value), 0);\n    debugger;\n    return {\n      data,\n      count\n    };\n  };\n\n  switch (action.type) {\n    case C.DASHBOARD_DATASETS:\n      return handleSum(action.payload.data.sort(compare));\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/Dashboard/languageDatasets.js"],"names":["C","reducer","state","action","compare","a","b","value","handleSum","data","count","reduce","acc","rem","Number","type","DASHBOARD_DATASETS","payload","sort"],"mappings":"AAAA,OAAOA,CAAP,MAAc,yBAAd;;AAEC,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAErC,WAASC,OAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAyB;AACrB,QAAKD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAjB,EAAwB;AACtB,aAAO,CAAP;AACD;;AACD,QAAKF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAjB,EAAwB;AACtB,aAAO,CAAC,CAAR;AACD;;AACD,WAAO,CAAP;AACD,GAVkC,CAYrC;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;;;AAGA,QAAMC,SAAS,GAAIC,IAAD,IAAS;AACzB,UAAMC,KAAK,GAAGD,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAKC,GAAL,KAAYD,GAAG,GAAGE,MAAM,CAACD,GAAG,CAACN,KAAL,CAApC,EAAiD,CAAjD,CAAd;AACA;AACA,WAAO;AAACE,MAAAA,IAAD;AAAQC,MAAAA;AAAR,KAAP;AAED,GALD;;AAQA,UAAQP,MAAM,CAACY,IAAf;AAEI,SAAKf,CAAC,CAACgB,kBAAP;AACI,aAAOR,SAAS,CAACL,MAAM,CAACc,OAAP,CAAeR,IAAf,CAAoBS,IAApB,CAA0Bd,OAA1B,CAAD,CAAhB;;AAEJ;AACI,aAAOF,KAAP;AANR;AAQH,CAzDA;;AA2DD,eAAeD,OAAf","sourcesContent":["import C from '../../actions/constants';\n\n const reducer = (state = {}, action) => {\n\n    function compare( a, b ) {\n        if ( a.value < b.value ){\n          return 1;\n        }\n        if ( a.value > b.value ){\n          return -1;\n        }\n        return 0;\n      }\n\n    //   const handleData = (dataValues) =>{\n\n    //     if (dataValues.length > 0) {\n    //       let others = dataValues.slice(7, dataValues.length)\n    //       let othersCount = 0\n    //       others.map(dataVal => {\n    //           othersCount = dataVal.value + othersCount\n  \n    //       })\n  \n    //       let dataSetValues = dataValues.slice(0, 7)\n    //       let obj = {}\n  \n    //       if (dataValues.length > 7) {\n    //           obj.value = othersCount\n    //           obj.label = \"Others\"\n    //           dataSetValues.push(obj)\n    //       }\n  \n\n    //       return {dataSetValues, dataValues} \n         \n\n    //   }\n\n      \n    // }\n\n\n    const handleSum = (data) =>{\n      const count = data.reduce((acc,rem)=>(acc + Number(rem.value)),0)\n      debugger\n      return {data , count}\n\n    }\n      \n      \n    switch (action.type) {\n        \n        case C.DASHBOARD_DATASETS:\n            return handleSum(action.payload.data.sort( compare ));\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}