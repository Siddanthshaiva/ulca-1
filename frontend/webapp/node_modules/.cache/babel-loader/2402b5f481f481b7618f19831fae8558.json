{"ast":null,"code":"import C from '../../../actions/constants';\nimport { getLanguageLabel, FilterByDomain, FilterByCollection } from '../../../../utils/getLabel';\nconst initialState = {\n  responseData: []\n};\n\nconst dateConversion = value => {\n  var myDate = new Date(value);\n  let result = myDate.toLocaleString('en-IN', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    hour12: true\n  });\n  return result.toUpperCase();\n};\n\nconst getMySearches = payload => {\n  let newArr = [];\n  payload.forEach(element => {\n    console.log(element.searchCriteria);\n\n    if (element.searchCriteria) {\n      let dataSet = element.searchCriteria.datasetType === \"parallel-corpus\" ? \"Parallel Dataset\" : element.searchCriteria.datasetType === \"asr-corpus\" ? \"ASR Dataset\" : element.searchCriteria.datasetType;\n      let langauge = element.searchCriteria.sourceLanguage && getLanguageLabel(element.searchCriteria.sourceLanguage).map(val => val.label)[0];\n      let tLanguage = element.searchCriteria.targetLanguage && getLanguageLabel(element.searchCriteria.targetLanguage).map(val => val.label).join(', ');\n      let searchDetails = JSON.parse(element.status[0].details);\n      let domain = element.searchCriteria.domain && FilterByDomain(element.searchCriteria.domain).map(val => val.label).join(', ');\n      let collection = element.searchCriteria.collectionMethod && FilterByCollection(element.searchCriteria.collectionMethod).map(val => val.label).join(', ');\n      console.log(domain, collection);\n      newArr.push({\n        sr_no: element.serviceRequestNumber,\n        search_criteria: `${dataSet} | ${langauge} ${tLanguage ? \" | \" + tLanguage : \"\"} ${domain ? \" | \" + domain : \"\"} ${collection ? \" | \" + collection : \"\"}`,\n        searched_on: dateConversion(element.timestamp),\n        status: element.status[0].status === \"successful\" ? \"Completed\" : element.status[0].status === \"inprogress\" ? \"In-Progress\" : element.status[0].status,\n        count: searchDetails && searchDetails.count,\n        sampleUrl: searchDetails && searchDetails.datasetSample,\n        downloadUrl: searchDetails && searchDetails.dataset,\n        sourceLanguage: element.searchCriteria.sourceLanguage,\n        targetLanguage: element.searchCriteria.targetLanguage,\n        datasetType: element.searchCriteria.datasetType,\n        domain: element.searchCriteria.domain,\n        collection: element.searchCriteria.collectionMethod\n      });\n    }\n  });\n  newArr = newArr.reverse();\n  return newArr;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case C.GET_MY_REPORT:\n      return {\n        responseData: getMySearches(action.payload)\n      };\n\n    case C.CLEAR_USER_EVENT:\n      return { ...initialState\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/DataSet/DatasetSearch/MySearches.js"],"names":["C","getLanguageLabel","FilterByDomain","FilterByCollection","initialState","responseData","dateConversion","value","myDate","Date","result","toLocaleString","day","month","year","hour","minute","second","hour12","toUpperCase","getMySearches","payload","newArr","forEach","element","console","log","searchCriteria","dataSet","datasetType","langauge","sourceLanguage","map","val","label","tLanguage","targetLanguage","join","searchDetails","JSON","parse","status","details","domain","collection","collectionMethod","push","sr_no","serviceRequestNumber","search_criteria","searched_on","timestamp","count","sampleUrl","datasetSample","downloadUrl","dataset","reverse","reducer","state","action","type","GET_MY_REPORT","CLEAR_USER_EVENT"],"mappings":"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","sourcesContent":["import C from '../../../actions/constants';\nimport {getLanguageLabel,FilterByDomain,FilterByCollection } from '../../../../utils/getLabel';\n\nconst initialState = {\n    responseData: []\n}\n\n\nconst dateConversion = (value) =>{\n    \n    var myDate = new Date(value);\n    let result = (myDate.toLocaleString('en-IN', { day: '2-digit', month: '2-digit', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true }))\n    return result.toUpperCase();\n}\n\n\nconst getMySearches = (payload) => {\n    let newArr = []\n    payload.forEach(element =>{\n        console.log(element.searchCriteria)\n        if(element.searchCriteria){\n            let dataSet  = element.searchCriteria.datasetType === \"parallel-corpus\" ? \"Parallel Dataset\" : element.searchCriteria.datasetType === \"asr-corpus\" ? \"ASR Dataset\" :  element.searchCriteria.datasetType;\n            let langauge =element.searchCriteria.sourceLanguage && getLanguageLabel(element.searchCriteria.sourceLanguage).map(val=>val.label)[0]\n            let tLanguage = element.searchCriteria.targetLanguage && getLanguageLabel(element.searchCriteria.targetLanguage).map(val=>val.label).join(', ')\n            let searchDetails = JSON.parse(element.status[0].details)\n            let domain = element.searchCriteria.domain && FilterByDomain(element.searchCriteria.domain).map(val=>val.label).join(', ')\n            let collection = element.searchCriteria.collectionMethod && FilterByCollection(element.searchCriteria.collectionMethod).map(val=>val.label).join(', ')\n\n            console.log(domain, collection)\n\n            newArr.push(\n                {\n                    sr_no : element.serviceRequestNumber,\n                    search_criteria :`${dataSet} | ${langauge} ${tLanguage ? \" | \" + tLanguage : \"\"} ${domain ? \" | \" + domain : \"\"} ${collection ? \" | \" + collection : \"\"}` ,\n                    searched_on   : dateConversion(element.timestamp),\n                    status      : element.status[0].status === \"successful\" ? \"Completed\" : element.status[0].status === \"inprogress\" ? \"In-Progress\": element.status[0].status,\n                    \n                    count : searchDetails && searchDetails.count,\n                    sampleUrl : searchDetails && searchDetails.datasetSample,\n                    downloadUrl : searchDetails && searchDetails.dataset,\n                    sourceLanguage : element.searchCriteria.sourceLanguage,\n                    targetLanguage : element.searchCriteria.targetLanguage,\n                    datasetType : element.searchCriteria.datasetType,\n                    domain : element.searchCriteria.domain,\n                    collection: element.searchCriteria.collectionMethod\n\n\n                }\n                \n            )\n            \n        }\n        \n    })\n    newArr = newArr.reverse()\n    \n    return newArr;\n}\n\n const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case C.GET_MY_REPORT:\n            return {\n                responseData: getMySearches(action.payload)  \n            }\n        case C.CLEAR_USER_EVENT:\n            return {\n                ...initialState\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}