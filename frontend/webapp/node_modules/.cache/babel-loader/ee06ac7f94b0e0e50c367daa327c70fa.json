{"ast":null,"code":"import API from \"../../../api\";\nimport C from \"../../../constants\";\nimport ENDPOINTS from \"../../../../../configs/apiendpoints\";\nimport { sha256 } from 'js-sha256';\nexport default class MyCOntribution extends API {\n  constructor(file_name, user_id, timeout = 200000) {\n    super(\"GET\", timeout, false);\n    this.user_id = JSON.parse(localStorage.getItem('userDetails')).userID;\n    this.type = C.GET_CONTRIBUTION_LIST;\n    this.userDetails = JSON.parse(localStorage.getItem('userInfo'));\n    this.endpoint = `${super.apiEndPointAuto()}${ENDPOINTS.getContributionList}`;\n  }\n\n  toString() {\n    return `${super.toString()} email: ${this.email} token: ${this.token} expires: ${this.expires} userid: ${this.userid}, type: ${this.type}`;\n  }\n\n  processResponse(res) {\n    super.processResponse(res);\n\n    if (res) {\n      this.report = res;\n    }\n  }\n\n  apiEndPoint() {\n    let url = `${this.endpoint}?userId=${this.user_id}`;\n    return url;\n  }\n\n  getBody() {\n    return {};\n  }\n\n  getHeaders() {\n    let res = this.apiEndPoint();\n    console.log(res);\n    let urlSha = sha256(res);\n    let hashReq = this.userDetails.privateKey + urlSha;\n    let hash = sha256(hashReq);\n    debugger;\n    this.headers = {\n      headers: {\n        \"key\": this.userDetails.publicKey,\n        \"sig\": hash\n      }\n    };\n    return this.headers;\n  }\n\n  getPayload() {\n    return this.report;\n  }\n\n}","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/actions/api/DataSet/DatasetView/MyContribution.js"],"names":["API","C","ENDPOINTS","sha256","MyCOntribution","constructor","file_name","user_id","timeout","JSON","parse","localStorage","getItem","userID","type","GET_CONTRIBUTION_LIST","userDetails","endpoint","apiEndPointAuto","getContributionList","toString","email","token","expires","userid","processResponse","res","report","apiEndPoint","url","getBody","getHeaders","console","log","urlSha","hashReq","privateKey","hash","headers","publicKey","getPayload"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,eAAe,MAAMC,cAAN,SAA6BJ,GAA7B,CAAiC;AAC5CK,EAAAA,WAAW,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,OAAO,GAAG,MAA/B,EAAuC;AAC9C,UAAM,KAAN,EAAaA,OAAb,EAAsB,KAAtB;AACA,SAAKD,OAAL,GAAeE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,EAAgDC,MAA/D;AACA,SAAKC,IAAL,GAAYb,CAAC,CAACc,qBAAd;AACA,SAAKC,WAAL,GAAmBP,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnB;AACA,SAAKK,QAAL,GAAiB,GAAE,MAAMC,eAAN,EAAwB,GAAEhB,SAAS,CAACiB,mBAAoB,EAA3E;AACH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,WAAQ,GAAE,MAAMA,QAAN,EAAiB,WAAU,KAAKC,KAAM,WAAU,KAAKC,KAAM,aAAY,KAAKC,OAAQ,YAAW,KAAKC,MAAO,WAAU,KAAKV,IAAK,EAAzI;AACH;;AAEDW,EAAAA,eAAe,CAACC,GAAD,EAAM;AACjB,UAAMD,eAAN,CAAsBC,GAAtB;;AACA,QAAIA,GAAJ,EAAS;AACL,WAAKC,MAAL,GAAcD,GAAd;AACH;AACJ;;AAEDE,EAAAA,WAAW,GAAG;AAGV,QAAIC,GAAG,GAAI,GAAE,KAAKZ,QAAS,WAAU,KAAKV,OAAQ,EAAlD;AAEC,WAAOsB,GAAP;AACJ;;AAEDC,EAAAA,OAAO,GAAG;AACN,WAAO,EAAP;AACH;;AAEDC,EAAAA,UAAU,GAAG;AACT,QAAIL,GAAG,GAAG,KAAKE,WAAL,EAAV;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA,QAAIQ,MAAM,GAAG/B,MAAM,CAACuB,GAAD,CAAnB;AACA,QAAIS,OAAO,GAAG,KAAKnB,WAAL,CAAiBoB,UAAjB,GAA4BF,MAA1C;AACA,QAAIG,IAAI,GAAGlC,MAAM,CAACgC,OAAD,CAAjB;AACA;AACA,SAAKG,OAAL,GAAe;AACXA,MAAAA,OAAO,EAAE;AACL,eAAO,KAAKtB,WAAL,CAAiBuB,SADnB;AAEL,eAASF;AAFJ;AADE,KAAf;AAMA,WAAO,KAAKC,OAAZ;AACH;;AAEDE,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKb,MAAZ;AACH;;AAlD2C","sourcesContent":["import API from \"../../../api\";\nimport C from \"../../../constants\";\nimport ENDPOINTS from \"../../../../../configs/apiendpoints\";\nimport { sha256 } from 'js-sha256';\nexport default class MyCOntribution extends API {\n    constructor(file_name, user_id, timeout = 200000) {\n        super(\"GET\", timeout, false);\n        this.user_id = JSON.parse(localStorage.getItem('userDetails')).userID\n        this.type = C.GET_CONTRIBUTION_LIST;\n        this.userDetails = JSON.parse(localStorage.getItem('userInfo'))\n        this.endpoint = `${super.apiEndPointAuto()}${ENDPOINTS.getContributionList}`;\n    }\n\n    toString() {\n        return `${super.toString()} email: ${this.email} token: ${this.token} expires: ${this.expires} userid: ${this.userid}, type: ${this.type}`;\n    }\n\n    processResponse(res) {\n        super.processResponse(res);\n        if (res) {\n            this.report = res;\n        }\n    }\n\n    apiEndPoint() {\n\n        \n        let url = `${this.endpoint}?userId=${this.user_id}` \n        \n         return url;\n    }\n\n    getBody() {\n        return {};\n    }\n\n    getHeaders() {\n        let res = this.apiEndPoint()\n        console.log(res)\n        let urlSha = sha256(res)\n        let hashReq = this.userDetails.privateKey+urlSha\n        let hash = sha256(hashReq)\n        debugger\n        this.headers = {\n            headers: {\n                \"key\" :this.userDetails.publicKey,\n                \"sig\"  : hash\n            }\n        };\n        return this.headers;\n    }\n\n    getPayload() {\n        return this.report;\n    }\n}"]},"metadata":{},"sourceType":"module"}