{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Typography, withStyles, Button, TextField, Link, InputLabel, OutlinedInput, IconButton, InputAdornment, FormHelperText, FormControl, Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport LoginApi from \"../../../redux/actions/api/UserManagement/Login\";\nimport { LoginSocialGithub } from \"reactjs-social-login\";\nimport GoogleLogin from \"react-google-login\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport GmailIcon from \"../../../assets/gmail.png\";\nimport GithubIcon from \"../../../assets/github.png\"; // import {useReducer, useSelector} from \"react-redux\";\n// import { LoginSocialFacebook, LoginSocialGithub } from \"reactjs-social-login\";\n// import { LinkedIn } from \"react-linkedin-login-oauth2\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    checked: false\n  });\n  const [error, setError] = useState({\n    email: false,\n    password: false\n  });\n  const history = useHistory();\n\n  const handleChange = prop => event => {\n    setError({ ...error,\n      password: false,\n      email: false\n    });\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleCheckChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.checked\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const ValidateEmail = mail => {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const ValidatePassword = password => {\n    if (password.length > 7) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleSubmit = () => {\n    let apiObj = new LoginApi(values);\n    fetch(apiObj.apiEndPoint(), {\n      method: 'post',\n      headers: apiObj.getHeaders().headers,\n      body: JSON.stringify(apiObj.getBody())\n    }).then(async res => {\n      if (res.ok) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  const responseGoogle = data => {\n    alert(JSON.stringify(data));\n  };\n\n  const HandleSubmitCheck = () => {\n    if (!ValidateEmail(values.email)) {\n      setError({ ...error,\n        email: true\n      });\n    } else if (!ValidatePassword(values.password)) {\n      setError({ ...error,\n        password: true\n      });\n    } else {\n      handleSubmit();\n    }\n  };\n\n  const {\n    classes\n  } = props;\n  const REDIRECT_URI = \"http://localhost:3000\";\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.loginGrid,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.body2,\n      children: \"Login to ULCA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textField,\n        required: true,\n        onChange: handleChange(\"email\"),\n        id: \"outlined-required\",\n        value: values.email,\n        error: error.email,\n        label: \"Email address\",\n        helperText: error.email ? \"Incorrect Email.\" : \" \",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.fullWidth,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          error: error.password,\n          htmlFor: \"outlined-adornment-password\",\n          children: \"Password * \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-password\",\n          type: values.showPassword ? \"text\" : \"password\",\n          value: values.password,\n          required: true,\n          error: error.password,\n          helpertext: error.password ? \"Incorrect Password.\" : \"\",\n          onChange: handleChange(\"password\"),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              edge: \"end\",\n              children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this),\n          labelWidth: 70\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), error.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: \"Incorrect password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        className: classes.fullWidth,\n        onClick: () => {\n          HandleSubmitCheck();\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createLogin,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.width,\n        children: \"New to ULCA?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          id: \"newaccount\",\n          className: classes.link,\n          href: \"#\",\n          onClick: () => {\n            history.push(`${process.env.PUBLIC_URL}/user/register`);\n          },\n          children: [\" \", \"Create an account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"dn2HIUPgOuvHIVu9odRIW+wFA9o=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default withStyles(LoginStyles)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Login.jsx"],"names":["Grid","Typography","withStyles","Button","TextField","Link","InputLabel","OutlinedInput","IconButton","InputAdornment","FormHelperText","FormControl","Checkbox","FormControlLabel","React","useState","LoginStyles","LoginApi","LoginSocialGithub","GoogleLogin","Divider","Visibility","VisibilityOff","useHistory","GmailIcon","GithubIcon","Login","props","values","setValues","email","password","checked","error","setError","history","handleChange","prop","event","target","value","handleCheckChange","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","ValidateEmail","mail","test","ValidatePassword","length","handleSubmit","apiObj","fetch","apiEndPoint","method","headers","getHeaders","body","JSON","stringify","getBody","then","res","ok","responseGoogle","data","alert","HandleSubmitCheck","classes","REDIRECT_URI","loginGrid","body2","root","textField","fullWidth","createLogin","width","link","push","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  withStyles,\n  Button,\n  TextField,\n  Link,\n  InputLabel,\n  OutlinedInput,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n  FormControl,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport LoginApi from \"../../../redux/actions/api/UserManagement/Login\"\nimport { LoginSocialGithub } from \"reactjs-social-login\";\nimport GoogleLogin from \"react-google-login\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport {  useHistory } from \"react-router-dom\";\nimport GmailIcon from \"../../../assets/gmail.png\";\nimport GithubIcon from \"../../../assets/github.png\";\n// import {useReducer, useSelector} from \"react-redux\";\n// import { LoginSocialFacebook, LoginSocialGithub } from \"reactjs-social-login\";\n// import { LinkedIn } from \"react-linkedin-login-oauth2\";\n\n\nconst Login = (props) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    checked: false,\n  });\n  const [error, setError] = useState({\n    email: false,\n    password: false,\n    \n  });\n\n  const history = useHistory();\n\n  const handleChange = (prop) => (event) => {\n    setError({ ...error, password: false , email: false });\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleCheckChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.checked });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const  ValidateEmail = (mail) => \n{\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\n  {\n    return (true)\n  }\n  else{\n    return false;\n  }  \n}\n\nconst ValidatePassword = (password) =>{\n  if(password.length>7) {\n    return (true)\n  }\n  else{\n    return false;\n  } \n}\n\nconst handleSubmit = () => {\n  let apiObj = new LoginApi(values)\n       \n          fetch(apiObj.apiEndPoint(), {\n            method: 'post',\n            headers: apiObj.getHeaders().headers,\n            body: JSON.stringify(apiObj.getBody())\n        })\n    .then(async res => {\n        if (res.ok) {\n            \n            \n            return true;\n        } else {\n            \n            return false;\n        }\n    })\n}\n\n  const responseGoogle = (data) => {\n    alert(JSON.stringify(data));\n  };\n\n  const HandleSubmitCheck = () => {\n    if(!ValidateEmail(values.email)){\n      setError({ ...error, email: true });\n    }\n    else if (!ValidatePassword(values.password)){\n      setError({ ...error, password: true });\n    }\n    else{\n      handleSubmit();\n    }\n    \n  };\n  const { classes } = props;\n  const REDIRECT_URI = \"http://localhost:3000\";\n\n  return (\n    <Grid container className={classes.loginGrid}>\n      <Typography className={classes.body2}>Login to ULCA</Typography>\n      <form className={classes.root} autoComplete=\"off\">\n      <TextField\n        className={classes.textField}\n        required\n        onChange={handleChange(\"email\")}\n        id=\"outlined-required\"\n        value={values.email}\n        error = {error.email}\n        label=\"Email address\"\n        helperText={error.email ? \"Incorrect Email.\":\" \"}\n        variant=\"outlined\"\n      />\n      <FormControl className={classes.fullWidth} variant=\"outlined\">\n        <InputLabel error ={error.password} htmlFor=\"outlined-adornment-password\">Password * </InputLabel>\n        \n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={values.showPassword ? \"text\" : \"password\"}\n          value={values.password}\n          required\n          error = {error.password}\n          helpertext={error.password ? \"Incorrect Password.\":\"\"}\n          onChange={handleChange(\"password\")}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n          labelWidth={70}\n        />\n        {error.password && <FormHelperText error={true}>Incorrect password</FormHelperText>}\n      </FormControl>\n      {/* <div className={classes.forgotPassword}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.checked}\n              onChange={handleCheckChange(\"checked\")}\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />\n          }\n          label=\"Keep me logged in \"\n        />\n        <Typography className={classes.forgoLink}>\n          <Link\n            id=\"newaccount\"\n            className={classes.link}\n            href=\"#\"\n            onClick={() => { history.push(`${process.env.PUBLIC_URL}/user/forgot-password`)}}\n          >\n            {\" \"}\n            Forgot Password?\n          </Link>\n        </Typography>\n      </div> */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size = \"large\"\n        className={classes.fullWidth}\n        onClick={() => {\n          HandleSubmitCheck();\n        }}\n      >\n        Sign in\n      </Button>\n      </form>\n      {/* <div className={classes.line}>\n        <Divider className={classes.dividerFullWidth} />{\" \"}\n        <Typography className={classes.divider}>Or</Typography>\n        <Divider className={classes.dividerFullWidth} />\n      </div>\n      <GoogleLogin\n        render={(renderProps) => (\n          <Button\n            variant=\"contained\"\n            className={classes.gmailStyle}\n            onClick={renderProps.onClick}\n          >\n            <span style={{ marginRight: \"30px\" }}>\n              <img\n                \n                src={GmailIcon}\n                alt=\"\"\n                width=\"25px\"\n                height=\"25px\"\n                style={{ maginLeft: \"20px\" }}\n              />\n            </span>\n            Continue with Google\n          </Button>\n        )}\n        clientId=\"1042231143652-m25ln3odich8tfi08ql2rlbj0h820g9v.apps.googleusercontent.com\"\n        buttonText=\"Continue with Google\"\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      /> */}\n      {/* <LinkedIn\n          clientId=\"7859u4ovb44uiu\"\n          onFailure={responseGoogle}\n          onSuccess={responseGoogle}\n          redirectUri=\"http://localhost:3000/\"\n          renderElement={({ onClick, disabled }) => (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.linkedStyle}\n            >\n              <span className={classes.width}>\n                <img\n                  src=\"linkedin.svg\"\n                  alt =''\n                  width=\"20px\"\n                  height=\"20px\"\n                  style={{ maginLeft: \"20px\" }}\n                />\n              </span>\n              Continue with LinkedIn\n            </Button>\n          )}\n        />\n        <LoginSocialFacebook\n          appId={\"813819182874104\"}\n          className={classes.labelWidth}\n          onResolve={({ data }) => {\n            alert(JSON.stringify(data));\n          }}\n          onReject={(err) => alert(err)}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.fullWidth}\n          >\n            <span className={classes.width}>\n              <img\n                src=\"facebook.svg\"\n                alt =''\n                width=\"20px\"\n                height=\"20px\"\n                style={{ maginLeft: \"20px\" }}\n              />\n            </span>\n            Continue with Facebook\n          </Button>\n        </LoginSocialFacebook> */}\n      {/* <LoginSocialGithub\n        client_id={\"fc66013ca8d2c0bcf178\"}\n        className={classes.labelWidth}\n        redirect={REDIRECT_URI}\n        onResolve={({ provider, data }) => {\n          alert(JSON.stringify(data));\n        }}\n        onReject={(err) => alert(err)}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.githubStyle}\n        >\n          <span className={classes.width}>\n            <img\n              src={GithubIcon}\n              alt=\"\"\n              width=\"25px\"\n              height=\"25px\"\n              style={{ maginLeft: \"20px\" }}\n            />\n          </span>\n          <span>Continue with Github</span>\n        </Button>\n      </LoginSocialGithub> */}\n      <div className={classes.createLogin}>\n        <Typography className={classes.width}>New to ULCA?</Typography>\n        <Typography>\n          <Link id=\"newaccount\" className={classes.link}  href=\"#\"\n            onClick={() => { history.push(`${process.env.PUBLIC_URL}/user/register`)}}>\n            {\" \"}\n            Create an account\n          </Link>\n        </Typography>\n      </div>\n    </Grid>\n  );\n};\n\nexport default withStyles(LoginStyles)(Login);\n"]},"metadata":{},"sourceType":"module"}