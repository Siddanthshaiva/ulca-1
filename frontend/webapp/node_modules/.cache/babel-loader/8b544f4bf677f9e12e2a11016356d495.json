{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/SearchDownloadRecords.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Button, TextField, MenuItem, Checkbox, FormControlLabel, Divider } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withStyles } from '@material-ui/core/styles';\nimport DatasetStyle from '../../../styles/Dataset';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchAndDownloadRecords = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const url = UrlConfig.dataset;\n  const [languagePair, setLanguagePair] = useState({\n    source: '',\n    target: ''\n  });\n  const [filterBy, setFilterBy] = useState({\n    domain: '',\n    source: '',\n    collectionMethod: ''\n  });\n\n  const handleCheckboxChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleLanguagePairChange = (value, property) => {\n    setLanguagePair({ ...languagePair,\n      [property]: value\n    });\n  };\n\n  const handleFilterByChange = (event, property) => {\n    setFilterBy({ ...filterBy,\n      [`${property}`]: event.target.value\n    });\n  };\n\n  const sourceLanguages = [{\n    value: 'Eng',\n    label: 'English'\n  }, {\n    value: 'Hin',\n    label: 'Hindi'\n  }, {\n    value: 'Ben',\n    label: 'Bengali'\n  }, {\n    value: 'Mar',\n    label: 'Marathi'\n  }];\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: false\n  });\n  console.log('filterBy', filterBy);\n  console.log('languagePair', languagePair);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.searchDivStyle,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        lg: 4,\n        xl: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.breadcrum,\n          children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n            links: [url],\n            activeLink: \"Search & Download Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Select Dataset Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonDiv,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Parallel Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Monolingual Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"ASR/TTS Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.innerButton,\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"OCR Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Select Language Pair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subHeader,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.subHeader,\n            fullWidth: true,\n            id: \"select-source-language\",\n            select: true,\n            label: \"Source Language *\",\n            value: languagePair.source,\n            onChange: event => handleLanguagePairChange(event.target.value, 'source'),\n            children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            filterSelectedOptions: true,\n            limitTags: 3,\n            multiple: true,\n            id: \"select-target-language\",\n            options: sourceLanguages,\n            getOptionLabel: option => option.label,\n            onChange: (event, value, reason) => handleLanguagePairChange(value, 'target'),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              variant: \"standard\",\n              label: \"Target Language *\" // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subHeader,\n          variant: \"h6\",\n          children: \"Filter by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subHeader,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.subHeader,\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"select-source-language\",\n                select: true,\n                label: \"Select Domain\",\n                value: filterBy.domain,\n                onChange: event => handleFilterByChange(event, 'domain'),\n                children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"select-source-language\",\n                select: true,\n                label: \"Select Source\",\n                value: filterBy.source,\n                onChange: event => handleFilterByChange(event, 'source'),\n                children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"select-source-language\",\n            select: true,\n            label: \"Select Collection Method\",\n            value: filterBy.collectionMethod,\n            onChange: event => handleFilterByChange(event, 'collectionMethod'),\n            children: sourceLanguages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: state.checkedA,\n            onChange: handleCheckboxChange,\n            name: \"checkedB\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this),\n          label: \"Vetted by multiple annotators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: state.checkedB,\n            onChange: handleCheckboxChange,\n            name: \"checkedB\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this),\n          label: \"Source sentences manually translated by multiple translators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.clearNSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 8,\n        lg: 8,\n        xl: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchAndDownloadRecords, \"zl1EvnUIri3kOLiKrUcVr2cxLnY=\");\n\n_c = SearchAndDownloadRecords;\nexport default withStyles(DatasetStyle)(SearchAndDownloadRecords);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAndDownloadRecords\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/SearchDownloadRecords.jsx"],"names":["Grid","Paper","Typography","Button","TextField","MenuItem","Checkbox","FormControlLabel","Divider","Autocomplete","withStyles","DatasetStyle","BreadCrum","UrlConfig","useState","SearchAndDownloadRecords","props","classes","url","dataset","languagePair","setLanguagePair","source","target","filterBy","setFilterBy","domain","collectionMethod","handleCheckboxChange","event","setState","state","name","checked","handleLanguagePairChange","value","property","handleFilterByChange","sourceLanguages","label","checkedA","checkedB","console","log","searchDivStyle","breadcrum","subHeader","buttonDiv","innerButton","map","option","reason","params","clearNSubmit"],"mappings":";;;AAAA,SACIA,IADJ,EAEIC,KAFJ,EAGIC,UAHJ,EAIIC,MAJJ,EAKIC,SALJ,EAMIC,QANJ,EAOIC,QAPJ,EAQIC,gBARJ,EASIC,OATJ,QAUO,mBAVP;AAWA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAME,GAAG,GAAGL,SAAS,CAACM,OAAtB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC;AAC7CQ,IAAAA,MAAM,EAAE,EADqC;AAE7CC,IAAAA,MAAM,EAAE;AAFqC,GAAD,CAAhD;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACrCY,IAAAA,MAAM,EAAE,EAD6B;AAErCJ,IAAAA,MAAM,EAAE,EAF6B;AAGrCK,IAAAA,gBAAgB,EAAE;AAHmB,GAAD,CAAxC;;AAKA,QAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACpCC,IAAAA,QAAQ,CAAC,EAAE,GAAGC,KAAL;AAAY,OAACF,KAAK,CAACN,MAAN,CAAaS,IAAd,GAAqBH,KAAK,CAACN,MAAN,CAAaU;AAA9C,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,wBAAwB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClDf,IAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmB,OAACgB,QAAD,GAAYD;AAA/B,KAAD,CAAf;AACH,GAFD;;AAGA,QAAME,oBAAoB,GAAG,CAACR,KAAD,EAAQO,QAAR,KAAqB;AAC9CX,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAAE,GAAEY,QAAS,EAAb,GAAiBP,KAAK,CAACN,MAAN,CAAaY;AAA7C,KAAD,CAAX;AACH,GAFD;;AAGA,QAAMG,eAAe,GAAG,CACpB;AACIH,IAAAA,KAAK,EAAE,KADX;AAEII,IAAAA,KAAK,EAAE;AAFX,GADoB,EAKpB;AACIJ,IAAAA,KAAK,EAAE,KADX;AAEII,IAAAA,KAAK,EAAE;AAFX,GALoB,EASpB;AACIJ,IAAAA,KAAK,EAAE,KADX;AAEII,IAAAA,KAAK,EAAE;AAFX,GAToB,EAapB;AACIJ,IAAAA,KAAK,EAAE,KADX;AAEII,IAAAA,KAAK,EAAE;AAFX,GAboB,CAAxB;AAkBA,QAAM,CAACR,KAAD,EAAQD,QAAR,IAAoBhB,QAAQ,CAAC;AAC/B0B,IAAAA,QAAQ,EAAE,IADqB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;AAIDC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBnB,QAAxB;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BvB,YAA5B;AAEC,sBACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAAC2B,cAAxB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAkC,QAAA,EAAE,EAAE,CAAtC;AAAyC,QAAA,EAAE,EAAE,CAA7C;AAAA,gCACI;AAAK,UAAA,SAAS,EAAE3B,OAAO,CAAC4B,SAAxB;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE,CAAC3B,GAAD,CAAlB;AAAyB,YAAA,UAAU,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAY,UAAA,SAAS,EAAED,OAAO,CAAC6B,SAA/B;AAA0C,UAAA,OAAO,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAMI;AAAK,UAAA,SAAS,EAAE7B,OAAO,CAAC8B,SAAxB;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAE9B,OAAO,CAAC+B,WAA3B;AAAwC,YAAA,OAAO,EAAC,WAAhD;AAA4D,YAAA,KAAK,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAE/B,OAAO,CAAC+B,WAA3B;AAAwC,YAAA,OAAO,EAAC,UAAhD;AAA2D,YAAA,KAAK,EAAC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAE/B,OAAO,CAAC+B,WAA3B;AAAwC,YAAA,OAAO,EAAC,UAAhD;AAA2D,YAAA,KAAK,EAAC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAE/B,OAAO,CAAC+B,WAA3B;AAAwC,YAAA,OAAO,EAAC,UAAhD;AAA2D,YAAA,KAAK,EAAC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAqBI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAE/B,OAAO,CAAC6B,SAA/B;AAA0C,UAAA,OAAO,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAsBI;AAAK,UAAA,SAAS,EAAE7B,OAAO,CAAC6B,SAAxB;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAE7B,OAAO,CAAC6B,SAA9B;AACI,YAAA,SAAS,MADb;AAEI,YAAA,EAAE,EAAC,wBAFP;AAGI,YAAA,MAAM,MAHV;AAII,YAAA,KAAK,EAAC,mBAJV;AAKI,YAAA,KAAK,EAAE1B,YAAY,CAACE,MALxB;AAMI,YAAA,QAAQ,EAAGO,KAAD,IAASK,wBAAwB,CAACL,KAAK,CAACN,MAAN,CAAaY,KAAd,EAAoB,QAApB,CAN/C;AAAA,sBAQKG,eAAe,CAACW,GAAhB,CAAqBC,MAAD,iBACjB,QAAC,QAAD;AAA6B,cAAA,KAAK,EAAEA,MAAM,CAACf,KAA3C;AAAA,wBACKe,MAAM,CAACX;AADZ,eAAeW,MAAM,CAACf,KAAtB;AAAA;AAAA;AAAA;AAAA,oBADH;AARL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAeI,QAAC,YAAD;AACI,YAAA,qBAAqB,MADzB;AAEI,YAAA,SAAS,EAAE,CAFf;AAGI,YAAA,QAAQ,MAHZ;AAII,YAAA,EAAE,EAAC,wBAJP;AAKI,YAAA,OAAO,EAAEG,eALb;AAMI,YAAA,cAAc,EAAGY,MAAD,IAAYA,MAAM,CAACX,KANvC;AAOI,YAAA,QAAQ,EAAG,CAACV,KAAD,EAAQM,KAAR,EAAegB,MAAf,KAAwBjB,wBAAwB,CAACC,KAAD,EAAO,QAAP,CAP/D;AAQI,YAAA,WAAW,EAAGiB,MAAD,iBACT,QAAC,SAAD,OACQA,MADR;AAEI,cAAA,OAAO,EAAC,UAFZ;AAGI,cAAA,KAAK,EAAC,mBAHV,CAIA;;AAJA;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAuDI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEnC,OAAO,CAAC6B,SAA/B;AAA0C,UAAA,OAAO,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvDJ,eAwDI;AAAK,UAAA,SAAS,EAAE7B,OAAO,CAAC6B,SAAxB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAE7B,OAAO,CAAC6B,SAAzB;AAAoC,cAAA,IAAI,MAAxC;AAAyC,cAAA,EAAE,EAAE,CAA7C;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,SAAS,MADb;AAEI,gBAAA,EAAE,EAAC,wBAFP;AAGI,gBAAA,MAAM,MAHV;AAII,gBAAA,KAAK,EAAC,eAJV;AAKI,gBAAA,KAAK,EAAEtB,QAAQ,CAACE,MALpB;AAMI,gBAAA,QAAQ,EAAGG,KAAD,IAAWQ,oBAAoB,CAACR,KAAD,EAAQ,QAAR,CAN7C;AAAA,0BAQKS,eAAe,CAACW,GAAhB,CAAqBC,MAAD,iBACjB,QAAC,QAAD;AAA6B,kBAAA,KAAK,EAAEA,MAAM,CAACf,KAA3C;AAAA,4BACKe,MAAM,CAACX;AADZ,mBAAeW,MAAM,CAACf,KAAtB;AAAA;AAAA;AAAA;AAAA,wBADH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAiBI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,SAAS,MADb;AAEI,gBAAA,EAAE,EAAC,wBAFP;AAGI,gBAAA,MAAM,MAHV;AAII,gBAAA,KAAK,EAAC,eAJV;AAKI,gBAAA,KAAK,EAAEX,QAAQ,CAACF,MALpB;AAMI,gBAAA,QAAQ,EAAGO,KAAD,IAAWQ,oBAAoB,CAACR,KAAD,EAAQ,QAAR,CAN7C;AAAA,0BAQKS,eAAe,CAACW,GAAhB,CAAqBC,MAAD,iBACjB,QAAC,QAAD;AAA6B,kBAAA,KAAK,EAAEA,MAAM,CAACf,KAA3C;AAAA,4BACKe,MAAM,CAACX;AADZ,mBAAeW,MAAM,CAACf,KAAtB;AAAA;AAAA;AAAA;AAAA,wBADH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAmCI,QAAC,SAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,EAAE,EAAC,wBAFP;AAGI,YAAA,MAAM,MAHV;AAII,YAAA,KAAK,EAAC,0BAJV;AAKI,YAAA,KAAK,EAAEX,QAAQ,CAACG,gBALpB;AAMI,YAAA,QAAQ,EAAGE,KAAD,IAAWQ,oBAAoB,CAACR,KAAD,EAAQ,kBAAR,CAN7C;AAAA,sBAQKS,eAAe,CAACW,GAAhB,CAAqBC,MAAD,iBACjB,QAAC,QAAD;AAA6B,cAAA,KAAK,EAAEA,MAAM,CAACf,KAA3C;AAAA,wBACKe,MAAM,CAACX;AADZ,eAAeW,MAAM,CAACf,KAAtB;AAAA;AAAA;AAAA;AAAA,oBADH;AARL;AAAA;AAAA;AAAA;AAAA,kBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxDJ,eA2GI,QAAC,gBAAD;AACI,UAAA,OAAO,eACH,QAAC,QAAD;AACI,YAAA,OAAO,EAAEJ,KAAK,CAACS,QADnB;AAEI,YAAA,QAAQ,EAAEZ,oBAFd;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFR;AASI,UAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,gBA3GJ,eAsHI,QAAC,gBAAD;AACI,UAAA,OAAO,eACH,QAAC,QAAD;AACI,YAAA,OAAO,EAAEG,KAAK,CAACU,QADnB;AAEI,YAAA,QAAQ,EAAEb,oBAFd;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFR;AASI,UAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,gBAtHJ,eAiII;AAAK,UAAA,SAAS,EAAEX,OAAO,CAACoC,YAAxB;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjIJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA2II,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,WAAW,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA3IJ,eA8II,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAkC,QAAA,EAAE,EAAE,CAAtC;AAAyC,QAAA,EAAE,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,cA9IJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyJH,CAvMD;;GAAMtC,wB;;KAAAA,wB;AAyMN,eAAeL,UAAU,CAACC,YAAD,CAAV,CAAyBI,wBAAzB,CAAf","sourcesContent":["import {\n    Grid,\n    Paper,\n    Typography,\n    Button,\n    TextField,\n    MenuItem,\n    Checkbox,\n    FormControlLabel,\n    Divider\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withStyles } from '@material-ui/core/styles';\nimport DatasetStyle from '../../../styles/Dataset';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useState } from 'react';\n\nconst SearchAndDownloadRecords = (props) => {\n    const { classes } = props;\n    const url = UrlConfig.dataset;\n    const [languagePair, setLanguagePair] = useState({\n        source: '',\n        target: ''\n    });\n    const [filterBy, setFilterBy] = useState({\n        domain: '',\n        source: '',\n        collectionMethod: ''\n    });\n    const handleCheckboxChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n    const handleLanguagePairChange = (value, property) => {\n        setLanguagePair({ ...languagePair, [property]: value });\n    };\n    const handleFilterByChange = (event, property) => {\n        setFilterBy({ ...filterBy, [`${property}`]: event.target.value });\n    };\n    const sourceLanguages = [\n        {\n            value: 'Eng',\n            label: 'English',\n        },\n        {\n            value: 'Hin',\n            label: 'Hindi',\n        },\n        {\n            value: 'Ben',\n            label: 'Bengali',\n        },\n        {\n            value: 'Mar',\n            label: 'Marathi',\n        },\n    ];\n    const [state, setState] = useState({\n        checkedA: true,\n        checkedB: false,\n    });\n   console.log('filterBy', filterBy);\n   console.log('languagePair', languagePair);\n\n    return (\n        <div className={classes.searchDivStyle}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\n                    <div className={classes.breadcrum}>\n                        <BreadCrum links={[url]} activeLink=\"Search & Download Records\" />\n                    </div>\n                    <Typography className={classes.subHeader} variant=\"h6\">Select Dataset Type</Typography>\n\n                    <div className={classes.buttonDiv}>\n                        <Button className={classes.innerButton} variant=\"contained\" color=\"primary\">\n                            Parallel Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant=\"outlined\" color=\"primary\">\n                            Monolingual Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant=\"outlined\" color=\"primary\">\n                            ASR/TTS Dataset\n                    </Button>\n                        <Button className={classes.innerButton} variant=\"outlined\" color=\"primary\">\n                            OCR Dataset\n                    </Button>\n                    </div>\n\n                    <Typography className={classes.subHeader} variant=\"h6\">Select Language Pair</Typography>\n                    <div className={classes.subHeader}>\n                        <TextField className={classes.subHeader}\n                            fullWidth\n                            id=\"select-source-language\"\n                            select\n                            label=\"Source Language *\"\n                            value={languagePair.source}\n                            onChange={(event)=>handleLanguagePairChange(event.target.value,'source')}\n                        >\n                            {sourceLanguages.map((option) => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                        <Autocomplete\n                            filterSelectedOptions\n                            limitTags={3}\n                            multiple\n                            id=\"select-target-language\"\n                            options={sourceLanguages}\n                            getOptionLabel={(option) => option.label}\n                            onChange= {(event, value, reason)=>handleLanguagePairChange(value,'target')}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    variant=\"standard\"\n                                    label=\"Target Language *\"\n                                // placeholder=\"Favorites\"\n                                />\n                            )}\n                        />\n                    </div>\n                    <Typography className={classes.subHeader} variant=\"h6\">Filter by</Typography>\n                    <div className={classes.subHeader}>\n                        <Grid container spacing={2}>\n                            <Grid className={classes.subHeader} item xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id=\"select-source-language\"\n                                    select\n                                    label=\"Select Domain\"\n                                    value={filterBy.domain}\n                                    onChange={(event) => handleFilterByChange(event, 'domain')}\n                                >\n                                    {sourceLanguages.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id=\"select-source-language\"\n                                    select\n                                    label=\"Select Source\"\n                                    value={filterBy.source}\n                                    onChange={(event) => handleFilterByChange(event, 'source')}\n                                >\n                                    {sourceLanguages.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                        <TextField\n                            fullWidth\n                            id=\"select-source-language\"\n                            select\n                            label=\"Select Collection Method\"\n                            value={filterBy.collectionMethod}\n                            onChange={(event) => handleFilterByChange(event, 'collectionMethod')}\n                        >\n                            {sourceLanguages.map((option) => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </div>\n\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={state.checkedA}\n                                onChange={handleCheckboxChange}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Vetted by multiple annotators\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={state.checkedB}\n                                onChange={handleCheckboxChange}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Source sentences manually translated by multiple translators\"\n                    />\n                    <div className={classes.clearNSubmit}>\n                        <Button color=\"primary\">\n                            Clear\n                    </Button>\n                        <Button variant=\"contained\" color=\"primary\">\n                            Submit\n                    </Button>\n                    </div>\n                </Grid>\n                <Grid item>\n                    <Divider orientation=\"vertical\" />\n                </Grid>\n                <Grid item xs={12} sm={12} md={8} lg={8} xl={8}>\n                    {/* <Paper >xs=6</Paper> */}\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n\n\n}\n\nexport default withStyles(DatasetStyle)(SearchAndDownloadRecords);"]},"metadata":{},"sourceType":"module"}