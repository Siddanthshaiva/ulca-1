{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/ContributionList.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, Link, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../../redux/actions/api/DataSet/DatasetView/MyContribution\";\nimport { PageChange, RowChange } from \"../../../../redux/actions/api/DataSet/DatasetView/DatasetAction\";\nimport ClearReport from \"../../../../redux/actions/api/DataSet/DatasetView/DatasetAction\";\nimport Dialog from \"../../../components/common/Dialog\";\nimport { Cached, DeleteOutline, VerticalAlignTop } from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributionList = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch(ClearReport);\n  const myContributionReport = useSelector(state => state.myContributionReport);\n  const PageInfo = useSelector(state => state.pageChangeDetails);\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"Do you want to delete\");\n  const [title, setTitle] = useState(\"Delete\");\n  const {\n    added\n  } = useParams();\n  const data = myContributionReport.responseData;\n  useEffect(() => {\n    (myContributionReport.responseData.length === 0 || myContributionReport.refreshStatus || added) && MyContributionListApi();\n  }, []);\n\n  const MyContributionListApi = () => {\n    dispatch(ClearReport());\n    const userObj = new MyContributionList(\"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n    dispatch(APITransport(userObj));\n  };\n\n  const fetchHeaderButton = () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      size: \"medium\",\n      variant: \"outlined\",\n      className: classes.ButtonRefresh,\n      onClick: () => MyContributionListApi(),\n      children: [/*#__PURE__*/_jsxDEV(Cached, {\n        className: classes.iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 158\n      }, this), \"Refresh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this);\n  };\n\n  const handleSetValues = name => {\n    setTitle(`Delete ${name}  `);\n    setMessage(`Do you want to delete ${name} ? `);\n    setOpen(true);\n  };\n\n  const renderStatus = (id, name, value) => {\n    if (value === \"In-Progress\") {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.link,\n        onClick: () => {\n          history.push(`${process.env.PUBLIC_URL}/dataset-status/${value}/${name}/${id}`);\n        },\n        children: \" In-Progress \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [value, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this);\n    }\n  };\n\n  const renderAction = (name, value) => {\n    if (value === \"In-Progress\") {} else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.link,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: classes.link,\n            color: \"primary\",\n            onClick: () => {\n              history.push(`${process.env.PUBLIC_URL}/submit-dataset/upload`);\n            },\n            children: [\" Update \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(VerticalAlignTop, {\n                style: {\n                  \"height\": \"0.8em\"\n                },\n                onClick: () => {\n                  handleSetValues(name);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 185\n              }, this), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 179\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.span,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutline, {\n            onClick: () => {\n              handleSetValues(name);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this);\n    }\n  };\n\n  const handleRowClick = rowData => {\n    history.push(`${process.env.PUBLIC_URL}/dataset-status/${rowData[4]}/${rowData[2]}/${rowData[0]}`); // if(rowMeta.colIndex !== 6){\n    //         const value = data[rowMeta.rowIndex].submitRefNumber;\n    //         const status = data[rowMeta.rowIndex].status.toLowerCase();\n    //         const name = data[rowMeta.rowIndex].datasetName;\n    //         history.push(`${process.env.PUBLIC_URL}/dataset-status/${status}/${name}/${value}`)\n    // }\n  };\n\n  const handleDialogSubmit = () => {};\n\n  const processTableClickedNextOrPrevious = (page, sortOrder) => {\n    dispatch(PageChange(page));\n  };\n\n  const columns = [{\n    name: \"submitRefNumber\",\n    label: \"s id\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"submitRefNumber\",\n    label: \"SR No.\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"datasetName\",\n    label: \"Dataset Name\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"submittedOn\",\n    label: \"Submitted On\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"status\",\n    label: \"Status\",\n    options: {\n      filter: true,\n      sort: true\n    }\n  } // {\n  // name: \"Status\",\n  // label: \"Status\",\n  // options: {\n  //         filter  : true,\n  //         sort    : false,\n  //         empty   : true,\n  //         customBodyRender: (value, tableMeta, updateValue) => {\n  //                         if (tableMeta.rowData) {\n  //                                 return <div>{renderStatus(tableMeta.rowData[0],tableMeta.rowData[2],tableMeta.rowData[4])}</div>;\n  //                         }\n  //                 },\n  //         },\n  // },\n  // {\n  // name    : \"Action\",\n  // label   : \"Action\",\n  // options: {\n  //                 filter  : true,\n  //                 sort    : false,\n  //                 empty   : true,\n  //                 customBodyRender: (value, tableMeta, updateValue) => {\n  //                         if (tableMeta.rowData) {\n  //                                 return <div>{renderAction(tableMeta.rowData[2], tableMeta.rowData[4])}</div>;\n  //                         }\n  //         },\n  // },\n  // },\n  ];\n  const options = {\n    textLabels: {\n      body: {\n        noMatch: \"No records\"\n      },\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    onRowClick: rowData => handleRowClick(rowData),\n    // onCellClick     : (colData, cellMeta) => handleRowClick( cellMeta),\n    customToolbar: fetchHeaderButton,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: false,\n    filter: true,\n    viewColumns: false,\n    selectableRows: \"none\",\n    onTableChange: (action, tableState) => {\n      switch (action) {\n        case \"changePage\":\n          processTableClickedNextOrPrevious(tableState.page);\n          break;\n\n        case \"changeRowsPerPage\":\n          dispatch(RowChange(tableState.rowsPerPage));\n          break;\n\n        default:\n      }\n    }\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [UrlConfig.dataset],\n        activeLink: \"My Contribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MUIDataTable, {\n      title: `My Contribution`,\n      data: data,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }, this), open && /*#__PURE__*/_jsxDEV(Dialog, {\n      message: message,\n      handleClose: () => {\n        setOpen(false);\n      },\n      open: true,\n      title: title,\n      handleSubmit: () => {\n        handleDialogSubmit();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ContributionList, \"gbP9TPFkFKluJcct76gWSgB8Y1w=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector, useParams];\n});\n\n_c = ContributionList;\nexport default withStyles(DataSet)(ContributionList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributionList\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/ContributionList.jsx"],"names":["withStyles","Link","MuiThemeProvider","createMuiTheme","Button","BreadCrum","React","useEffect","useState","useDispatch","useSelector","useHistory","DataSet","APITransport","MUIDataTable","MyContributionList","PageChange","RowChange","ClearReport","Dialog","Cached","DeleteOutline","VerticalAlignTop","UrlConfig","useParams","ContributionList","props","history","dispatch","myContributionReport","state","PageInfo","pageChangeDetails","open","setOpen","message","setMessage","title","setTitle","added","data","responseData","length","refreshStatus","MyContributionListApi","userObj","fetchHeaderButton","classes","ButtonRefresh","iconStyle","handleSetValues","name","renderStatus","id","value","link","push","process","env","PUBLIC_URL","renderAction","action","span","handleRowClick","rowData","handleDialogSubmit","processTableClickedNextOrPrevious","page","sortOrder","columns","label","options","filter","sort","display","textLabels","body","noMatch","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","onRowClick","customToolbar","filterType","download","print","fixedHeader","selectableRows","onTableChange","tableState","breadcrum","dataset"],"mappings":"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","sourcesContent":["import { withStyles,Link, MuiThemeProvider, createMuiTheme,Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  useHistory } from \"react-router-dom\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../../redux/actions/api/DataSet/DatasetView/MyContribution\";\nimport {PageChange, RowChange} from \"../../../../redux/actions/api/DataSet/DatasetView/DatasetAction\"\nimport ClearReport from \"../../../../redux/actions/api/DataSet/DatasetView/DatasetAction\";\nimport Dialog from \"../../../components/common/Dialog\"\nimport {Cached, DeleteOutline, VerticalAlignTop} from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useParams } from \"react-router\";\n\nconst ContributionList = (props) => {\n\n        const history                 = useHistory();\n        const dispatch                = useDispatch(ClearReport);\n        const myContributionReport    = useSelector( (state) => state.myContributionReport);\n        const PageInfo                =       useSelector((state) => state.pageChangeDetails);\n        const [open, setOpen]         = useState(false)\n        const [message, setMessage]   = useState(\"Do you want to delete\")\n        const [title, setTitle]       = useState(\"Delete\")\n        const {added}                 = useParams()\n        const data                    = myContributionReport.responseData\n\n        \n        useEffect(()                  => {\n                (myContributionReport.responseData.length === 0 || myContributionReport.refreshStatus || added) && MyContributionListApi()\n        }, []);\n  \n        const  MyContributionListApi  = () =>{\n                dispatch(ClearReport());\n                const userObj         = new MyContributionList( \"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n                dispatch(APITransport(userObj));\n        }\n\n        const fetchHeaderButton= () => {\n                return <Button color={\"primary\"} size=\"medium\" variant=\"outlined\" className={classes.ButtonRefresh}  onClick={() => MyContributionListApi()}><Cached className ={classes.iconStyle}/>Refresh</Button>\n                        \n        }\n\n        const handleSetValues = (name) => {\n                setTitle        (`Delete ${name}  `)\n                setMessage      (`Do you want to delete ${name} ? `)\n                setOpen         (true)\n        }\n\n        const renderStatus = (id,name,value) => {\n                if(value === \"In-Progress\"){\n                        return  <Link className = {classes.link} onClick={()=>{history.push(`${process.env.PUBLIC_URL}/dataset-status/${value}/${name}/${id}`)}}> In-Progress </Link>\n                }\n                else{\n                        return <span\n                        >{value} </span>\n                }\n        }\n\n        const renderAction = (name,value) => {\n                if(value === \"In-Progress\"){}\n                else{\n                        return (<div className = {classes.action}> \n                                        <div className= {classes.link}>\n                                        <Link className= {classes.link} color={\"primary\"} onClick={()=>{history.push(`${process.env.PUBLIC_URL}/submit-dataset/upload`)}}> Update <div ><VerticalAlignTop style={{\"height\":\"0.8em\"}} onClick={()=>{handleSetValues(name)}}/>  </div></Link>\n                                                                              </div>\n                                        <div className = {classes.span\n                                        }>\n                                        <DeleteOutline onClick={()=>{handleSetValues(name)}}/> \n                                        </div>\n                                </div>)\n                }\n        }\n\n        const handleRowClick = ( rowData) => {\n\n                history.push(`${process.env.PUBLIC_URL}/dataset-status/${rowData[4]}/${rowData[2]}/${rowData[0]}`)\n\n                // if(rowMeta.colIndex !== 6){\n                //         const value = data[rowMeta.rowIndex].submitRefNumber;\n                //         const status = data[rowMeta.rowIndex].status.toLowerCase();\n                //         const name = data[rowMeta.rowIndex].datasetName;\n                //         history.push(`${process.env.PUBLIC_URL}/dataset-status/${status}/${name}/${value}`)\n                // }\n        };\n\n        const handleDialogSubmit = () =>{\n\n        }\n\n        const processTableClickedNextOrPrevious = (page, sortOrder) => {\n                dispatch(PageChange(page));\n               \n                }\n\n\n    \n        const columns = [\n                {\n                name: \"submitRefNumber\",\n                label: \"s id\",\n                options: {\n                        filter  : false,\n                        sort    : false,\n                        display : \"excluded\",\n                        },\n                },\n                {\n                name    : \"submitRefNumber\",\n                label   : \"SR No.\",\n                options : {\n                                filter  : false,\n                                sort    : false,\n                                display : \"excluded\",\n                        },\n                },\n                {\n                name    : \"datasetName\",\n                label   : \"Dataset Name\",\n                options: {\n                        filter  : false,\n                        sort    : true,\n                        },\n                },\n                {\n                name    : \"submittedOn\",\n                label   : \"Submitted On\",\n                options : {\n                                filter  : false,\n                                sort    : true,\n                        \n                        },\n                },\n                {\n                name    : \"status\",\n                label   : \"Status\",\n                options : {\n                        filter  : true,\n                        sort    : true,\n                       \n                        },\n                },\n                // {\n                // name: \"Status\",\n                // label: \"Status\",\n                // options: {\n                //         filter  : true,\n                //         sort    : false,\n                //         empty   : true,\n                //         customBodyRender: (value, tableMeta, updateValue) => {\n                //                         if (tableMeta.rowData) {\n                //                                 return <div>{renderStatus(tableMeta.rowData[0],tableMeta.rowData[2],tableMeta.rowData[4])}</div>;\n                //                         }\n                //                 },\n                //         },\n                // },\n\n                // {\n                // name    : \"Action\",\n                // label   : \"Action\",\n                // options: {\n                //                 filter  : true,\n                //                 sort    : false,\n                //                 empty   : true,\n                //                 customBodyRender: (value, tableMeta, updateValue) => {\n                //                         if (tableMeta.rowData) {\n                //                                 return <div>{renderAction(tableMeta.rowData[2], tableMeta.rowData[4])}</div>;\n                //                         }\n                //         },\n                // },\n                // },\n        ];\n      \n\n        const options = {\n\n                \n                textLabels: {\n                        body            : {\n\n                                noMatch: \"No records\"\n                        },\n                        toolbar         : {\n                                search          : \"Search\",\n                                viewColumns     : \"View Column\",\n                        },\n                        pagination      : {\n                                rowsPerPage     : \"Rows per page\",\n                        },\n                        options         : { sortDirection: \"desc\" },\n                        },\n                        onRowClick: rowData => handleRowClick(rowData),\n                        // onCellClick     : (colData, cellMeta) => handleRowClick( cellMeta),\n                        customToolbar: fetchHeaderButton,\n                filterType      : \"checkbox\",\n                download        : false,\n                print           : false,\n                fixedHeader     : false,\n                filter          : true,\n                viewColumns     : false,\n                selectableRows  : \"none\",\n                onTableChange: (action, tableState) => {\n                        switch (action) {\n                          case \"changePage\":\n                            processTableClickedNextOrPrevious(\n                              tableState.page\n                            );\n                            break;\n                            case \"changeRowsPerPage\":\n                                dispatch(RowChange(tableState.rowsPerPage))\n                                break;\n                          default:\n                        }\n                      },\n\n                \n        };\n\n        const { classes } = props;\n        return (\n                <div>\n                        <div className = {classes.breadcrum}>\n                                <BreadCrum links={[UrlConfig.dataset]} activeLink=\"My Contribution\" />\n                        </div>\n                       \n                        {/* <div className={classes.title}>\n                                \n                        </div> */}\n\n                         \n                                <MUIDataTable\n                                        title           =       {`My Contribution`}\n                                        data            =       {data}\n                                        columns         =       {columns}\n                                        options         =       {options}\n                                />\n                        \n                        {open && <Dialog\n                                message         =       {message}\n                                handleClose     ={() => {setOpen(false)}}\n                                open \n                                title           =       {title}\n                                handleSubmit    ={() =>        {handleDialogSubmit()}}\n                        /> }\n                </div>\n        );\n};\n\nexport default withStyles(DataSet)(ContributionList);\n"]},"metadata":{},"sourceType":"module"}