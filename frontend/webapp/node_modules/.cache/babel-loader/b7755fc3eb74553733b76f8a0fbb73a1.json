{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/UploadDataset/SubmitDataset.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Divider, FormControl, Button, TextField, Hidden, Popover } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport { withStyles } from '@material-ui/core/styles';\nimport { RadioButton, RadioGroup } from 'react-radio-buttons';\nimport DatasetStyle from '../../../styles/Dataset';\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Snackbar from '../../../components/common/Snackbar';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport SubmitDatasetApi from \"../../../../redux/actions/api/UploadDataset/SubmitDataset\";\nimport DatasetItems from \"../../../../configs/DatasetItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubmitDataset = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [dataset, setDatasetInfo] = useState({\n    datasetName: \"\",\n    url: \"\",\n    type: \"parallel-corpus\"\n  });\n  const [title, setTitle] = useState(\"Parallel Corpus\");\n  const [snackbar, setSnackbarInfo] = useState({\n    open: false,\n    message: '',\n    variant: 'success'\n  });\n  const [error, setError] = useState({\n    datasetName: \"\",\n    url: \"\",\n    type: false\n  });\n  const [search, setSearch] = useState(false);\n  const history = useHistory();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDone = () => {\n    if (dataset.filteredName) {\n      setDatasetInfo({ ...dataset,\n        datasetName: dataset.filteredName\n      });\n    }\n\n    handleClose();\n  };\n\n  const renderUpdateDatasetSearch = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.updateDataset,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 12,\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"tags-outlined\",\n              options: [],\n              getOptionLabel: option => option.name,\n              filterSelectedOptions: true,\n              open: search,\n              onChange: (e, value) => {\n                setDatasetInfo({ ...dataset,\n                  datasetName: value.name\n                });\n                handleClose();\n              },\n              onOpen: () => {\n                setTimeout(() => setSearch(true), 200);\n              },\n              onClose: () => {\n                setSearch(false);\n              },\n              openOnFocus: true,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"search-dataset\",\n                variant: \"outlined\",\n                placeholder: \"Search Dataset\",\n                autoFocus: true,\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleApicall = async () => {\n    let apiObj = new SubmitDatasetApi(dataset);\n    fetch(apiObj.apiEndPoint(), {\n      method: 'post',\n      body: JSON.stringify(apiObj.getBody()),\n      headers: apiObj.getHeaders().headers\n    }).then(async response => {\n      const rsp_data = await response.json();\n\n      if (!response.ok) {\n        return Promise.reject('');\n      } else {\n        history.push(`${process.env.PUBLIC_URL}/submit-dataset/submission/${rsp_data.serviceRequestNumber}`); //           return true;\n      }\n    }).catch(error => {\n      setSnackbarInfo({ ...snackbar,\n        open: true,\n        message: \"something went wrong. PLease try again.\",\n        timeOut: 40000,\n        variant: 'error'\n      });\n    });\n  };\n\n  const handleSelectChange = e => {\n    debugger;\n    setTitle(e.key);\n    setDatasetInfo({ ...dataset,\n      type: e\n    });\n  };\n\n  const renderRadioIcons = () => {\n    return /*#__PURE__*/_jsxDEV(RadioGroup, {\n      value: dataset.type,\n      onChange: e => handleSelectChange(e),\n      className: classes.radioGroup,\n      vertical: \"true\",\n      children: DatasetItems.map((item, index) => /*#__PURE__*/_jsxDEV(RadioButton, {\n        rootColor: \"grey\",\n        pointColor: \"black\",\n        value: item.label,\n        children: item.label\n      }, item.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this);\n  };\n\n  const validURL = str => {\n    var pattern = new RegExp('^((ft|htt)ps?:\\\\/\\\\/)?' + // protocol\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name and extension\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n    '(\\\\:\\\\d+)?' + // port\n    '(\\\\/[-a-z\\\\d%@_.~+&:]*)*' + // path\n    '(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?' + // query string\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n\n    return pattern.test(str);\n  };\n\n  const handleSubmitDataset = e => {\n    if (dataset.datasetName.trim() === \"\" || dataset.url.trim() === \"\") {\n      setError({ ...error,\n        name: !dataset.datasetName.trim() ? \"Name cannot be empty\" : \"\",\n        url: !dataset.url.trim() ? \"URL cannot be empty\" : \"\"\n      });\n    } else if (dataset.datasetName.length > 256) {\n      setError({ ...error,\n        name: \"Max 256 characters allowed\"\n      });\n    } else if (!validURL(dataset.url)) {\n      setError({ ...error,\n        url: \"â€˜Invalid URL\"\n      });\n    } else {\n      handleApicall();\n      setSnackbarInfo({ ...snackbar,\n        open: true,\n        message: 'Please wait while we process your request...',\n        variant: 'info'\n      });\n    }\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar,\n      open: false\n    });\n  };\n\n  const url = UrlConfig.dataset;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.breadcrum,\n        children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n          links: [url],\n          activeLink: \"Submit Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Submit Dataset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 5,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 5,\n            lg: 5,\n            xl: 5,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"subtitle1\",\n              children: \"STEP-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.form,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.typography,\n                variant: \"subtitle1\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Select Dataset Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 96\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), renderRadioIcons()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xl: 1,\n              lg: 1,\n              md: 1,\n              sm: 1,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(Divider, {\n                orientation: \"vertical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            xl: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"subtitle1\",\n              children: \"STEP-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.form,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 6,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xl: 12,\n                  lg: 12,\n                  md: 12,\n                  sm: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 5,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xl: 5,\n                      lg: 5,\n                      md: 5,\n                      sm: 12,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.typography,\n                        variant: \"subtitle1\",\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 212,\n                          columnNumber: 112\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xl: 12,\n                  lg: 12,\n                  md: 12,\n                  sm: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xl: 12,\n                      lg: 12,\n                      md: 12,\n                      sm: 12,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        color: \"primary\",\n                        label: \"Dataset name\",\n                        value: dataset.datasetName,\n                        error: error.name ? true : false,\n                        helperText: error.name,\n                        onChange: e => {\n                          setDatasetInfo({ ...dataset,\n                            datasetName: e.target.value\n                          });\n                          setError({ ...error,\n                            name: false\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xl: 12,\n                      lg: 12,\n                      md: 12,\n                      sm: 12,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        fullWidth: true,\n                        color: \"primary\",\n                        label: \"Paste the URL of the public repository\",\n                        value: dataset.url,\n                        error: error.url ? true : false,\n                        helperText: error.url,\n                        onChange: e => {\n                          setDatasetInfo({ ...dataset,\n                            url: e.target.value\n                          });\n                          setError({ ...error,\n                            url: false\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                className: classes.submitBtn,\n                variant: \"contained\",\n                size: 'large',\n                onClick: handleSubmitDataset,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), snackbar.open && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      handleClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      message: snackbar.message,\n      variant: snackbar.variant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubmitDataset, \"hZBLxQDYb9Wvc08xhoB4EOE0UxU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SubmitDataset;\nexport default withStyles(DatasetStyle)(SubmitDataset);\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitDataset\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/UploadDataset/SubmitDataset.jsx"],"names":["Grid","Paper","Typography","Divider","FormControl","Button","TextField","Hidden","Popover","Autocomplete","BreadCrum","withStyles","RadioButton","RadioGroup","DatasetStyle","useState","useHistory","Snackbar","UrlConfig","SubmitDatasetApi","DatasetItems","SubmitDataset","props","classes","anchorEl","setAnchorEl","dataset","setDatasetInfo","datasetName","url","type","title","setTitle","snackbar","setSnackbarInfo","open","message","variant","error","setError","search","setSearch","history","handleClick","event","currentTarget","handleClose","handleDone","filteredName","renderUpdateDatasetSearch","updateDataset","option","name","e","value","setTimeout","params","handleApicall","apiObj","fetch","apiEndPoint","method","body","JSON","stringify","getBody","headers","getHeaders","then","response","rsp_data","json","ok","Promise","reject","push","process","env","PUBLIC_URL","serviceRequestNumber","catch","timeOut","handleSelectChange","key","renderRadioIcons","radioGroup","map","item","index","label","validURL","str","pattern","RegExp","test","handleSubmitDataset","trim","length","handleSnackbarClose","divStyle","breadcrum","paper","form","typography","target","submitBtn","vertical","horizontal"],"mappings":"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","sourcesContent":["import {\n    Grid,\n    Paper,\n    Typography,\n    Divider,\n    FormControl,\n    Button,\n    TextField,\n    Hidden,\n    Popover\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport { withStyles } from '@material-ui/core/styles';\nimport { RadioButton, RadioGroup } from 'react-radio-buttons';\nimport DatasetStyle from '../../../styles/Dataset';\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Snackbar from '../../../components/common/Snackbar';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport SubmitDatasetApi from \"../../../../redux/actions/api/UploadDataset/SubmitDataset\"\nimport DatasetItems from \"../../../../configs/DatasetItems\";\nconst SubmitDataset = (props) => {\n    const { classes } = props;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [dataset, setDatasetInfo] = useState({ datasetName: \"\", url: \"\", type: \"parallel-corpus\" })\n    const [title, setTitle]         = useState( \"Parallel Corpus\")\n    const [snackbar, setSnackbarInfo] = useState({\n        open: false,\n        message: '',\n        variant: 'success'\n    })\n    const [error, setError] = useState({datasetName: \"\", url: \"\", type: false})\n    const [search, setSearch] = useState(false)\n    const history = useHistory();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget)\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDone = () => {\n        if (dataset.filteredName) {\n            setDatasetInfo({ ...dataset, datasetName: dataset.filteredName })\n        }\n        handleClose();\n    }\n\n    const renderUpdateDatasetSearch = () => {\n        return (\n            <div>\n                <div className={classes.updateDataset}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                            <Autocomplete\n                                id=\"tags-outlined\"\n                                options={[]}\n                                getOptionLabel={(option) => option.name}\n                                filterSelectedOptions\n                                open={search}\n                                onChange={(e, value) => {\n                                    setDatasetInfo({ ...dataset, datasetName: value.name})\n                                    handleClose();\n                                }}\n                                onOpen={() => {\n                                    setTimeout(() => setSearch(true), 200)\n                                }}\n                                onClose={() => {\n                                    setSearch(false)\n                                }}\n                                openOnFocus\n                                renderInput={(params) => (\n                                    <TextField\n                                        id=\"search-dataset\"\n                                        variant=\"outlined\"\n                                        placeholder=\"Search Dataset\"\n                                        autoFocus={true}\n                                        {...params}\n                                    />\n                                )}\n                            />\n                        </Grid>\n                    </Grid>\n                </div>\n               \n            </div>\n        )\n    }\n\n    const handleApicall = async () => {\n\nlet apiObj = new SubmitDatasetApi(dataset)\n    fetch(apiObj.apiEndPoint(), {\n      method: 'post',\n      body: JSON.stringify(apiObj.getBody()),\n      headers: apiObj.getHeaders().headers\n    }).then(async response => {\n      const rsp_data = await response.json();\n      if (!response.ok) {\n        \n        return Promise.reject('');\n      } else {\n        history.push(`${process.env.PUBLIC_URL}/submit-dataset/submission/${rsp_data.serviceRequestNumber}`)\n//           return true;\n      }\n    }).catch((error) => {\n        setSnackbarInfo({\n                        ...snackbar,\n                        open: true,\n                        message: \"something went wrong. PLease try again.\",\n                        timeOut: 40000,\n                        variant: 'error'\n                    })\n    });\n  \n    }\n\n    const handleSelectChange = (e) =>{\n       debugger\n        setTitle(e.key); setDatasetInfo({ ...dataset, type: e })\n    }\n\n    const renderRadioIcons = ()   =>{\n        return <RadioGroup value={dataset.type} onChange={(e) =>handleSelectChange(e)} className={classes.radioGroup} vertical=\"true\">\n                {DatasetItems.map((item, index)=>(\n                    <RadioButton key ={item.label} rootColor=\"grey\" pointColor=\"black\" value={item.label}>\n                   {item.label}\n                </RadioButton>\n                ))}\n            </RadioGroup>\n    }\n\n    const validURL = (str) => {\n        var pattern = new RegExp('^((ft|htt)ps?:\\\\/\\\\/)?' + // protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name and extension\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n            '(\\\\:\\\\d+)?' + // port\n            '(\\\\/[-a-z\\\\d%@_.~+&:]*)*' + // path\n            '(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n        return pattern.test(str);\n    }\n\n    const handleSubmitDataset = (e) => {\n        if(dataset.datasetName.trim() === \"\" || dataset.url.trim() === \"\"){\n            setError({...error, name: !dataset.datasetName.trim() ? \"Name cannot be empty\":\"\",url:!dataset.url.trim() ?\"URL cannot be empty\" :\"\" })\n            \n        }\n        else if(dataset.datasetName.length > 256) {\n            setError({...error, name:\"Max 256 characters allowed\"})\n            \n        }\n        else if(!validURL(dataset.url)){\n            setError({...error, url:\"â€˜Invalid URL\"})\n        }\n        else{\n\n            handleApicall()\n            setSnackbarInfo({\n                ...snackbar,\n                open: true,\n                message: 'Please wait while we process your request...',\n                variant: 'info'\n            })\n        }\n\n       \n        \n    }\n\n    const handleSnackbarClose = () => {\n        setSnackbarInfo({ ...snackbar, open: false })\n    }\n\n    const url = UrlConfig.dataset\n\n    return (\n        <div>\n            <div className={classes.divStyle}>\n                <div className={classes.breadcrum}>\n                    <BreadCrum links={[url]} activeLink=\"Submit Dataset\" />\n                </div>\n                <Paper elevation={3} className={classes.paper}>\n                    <Grid container className={classes.title}>\n                        <Grid item>\n                            <Typography variant=\"h5\"><strong>Submit Dataset</strong></Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={5}>\n                        <Grid item xs={12} sm={12} md={5} lg={5} xl={5}>\n                            <Typography color=\"textSecondary\" variant=\"subtitle1\">STEP-1</Typography>\n                            <FormControl className={classes.form}>\n                                <Typography className={classes.typography} variant=\"subtitle1\"><strong>Select Dataset Type</strong></Typography>\n                                    {renderRadioIcons()}\n                            </FormControl>\n                        </Grid>\n                        <Hidden>\n                            <Grid item xl={1} lg={1} md={1} sm={1} xs={1}>\n                                <Divider orientation=\"vertical\" />\n                            </Grid>\n                        </Hidden>\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\n                            <Typography color=\"textSecondary\" variant=\"subtitle1\">STEP-2</Typography>\n                            <FormControl className={classes.form}>\n                                <Grid container spacing={6}>\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n                                        <Grid container spacing={5}>\n                                            <Grid item xl={5} lg={5} md={5} sm={12} xs={12}>\n                                                <Typography className={classes.typography} variant=\"subtitle1\"><strong>{title}</strong></Typography>\n                                            </Grid>\n                                            {/* <Grid item xl={7} lg={7} md={7} sm={12} xs={12}>\n                                                <div>\n                                                <Button\n                                                    size = \"medium\"\n                                                    className={classes.updateBtn}\n                                                    color=\"primary\"\n                                                    variant=\"outlined\"\n                                                    onClick={(e) => handleClick(e)}\n                                                >\n                                                    \n                                                    Update an existing dataset\n                                            </Button>\n                                                <Popover\n                                                    className={classes.popOver}\n                                                    id={\"update-dataset\"}\n                                                    open={Boolean(anchorEl)}\n                                                    anchorEl={anchorEl}\n                                                    onClose={handleClose}\n                                                    anchorOrigin={{\n                                                        vertical: 'bottom',\n                                                        horizontal: 'left',\n                                                    }}\n                                                    transformOrigin={{\n                                                        vertical: 'top',\n                                                        horizontal: \"center\",\n                                                    }}\n                                                    children={renderUpdateDatasetSearch()}\n                                                />\n                                                </div>\n                                            </Grid> */}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n                                        <Grid container spacing={3}>\n                                            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n                                                <TextField fullWidth\n                                                    \n                                                    color=\"primary\"\n                                                    label=\"Dataset name\"\n                                                    value={dataset.datasetName}\n                                                    error={error.name? true : false}\n                                                    helperText={error.name}\n                                                    onChange={(e) => {\n                                                        setDatasetInfo({ ...dataset, datasetName: e.target.value })\n                                                        setError({...error, name:false})\n                                                }}\n                                                />\n                                            </Grid>\n                                            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n                                                <TextField fullWidth\n                                                    \n                                                    color=\"primary\"\n                                                    label=\"Paste the URL of the public repository\"\n                                                    value={dataset.url}\n                                                    error = {error.url? true : false}\n                                                    helperText={error.url}\n                                                    onChange={(e) => {\n                                                        setDatasetInfo({ ...dataset, url: e.target.value })\n                                                        setError({...error, url:false})\n                                                    }}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Button\n                                    color=\"primary\"\n                                    className={classes.submitBtn}\n                                    variant=\"contained\"\n                                    size = {'large'}\n                                    \n                                    onClick={handleSubmitDataset}\n                                >\n                                    Submit\n                                </Button>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n            {snackbar.open &&\n            <Snackbar\n                open={snackbar.open}\n                handleClose={handleSnackbarClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                message={snackbar.message}\n                variant={snackbar.variant}\n            />}\n        </div>\n    )\n}\n\nexport default withStyles(DatasetStyle)(SubmitDataset);"]},"metadata":{},"sourceType":"module"}