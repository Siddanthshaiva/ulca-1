{"ast":null,"code":"import C from '../../actions/constants';\n\nconst reducer = (state = {}, action) => {\n  function compare(a, b) {\n    if (a.value < b.value) {\n      return 1;\n    }\n\n    if (a.value > b.value) {\n      return -1;\n    }\n\n    return 0;\n  }\n\n  const handleData = dataValues => {\n    debugger;\n\n    if (dataValues.length > 0) {\n      let others = dataValues.slice(7, dataValues.length);\n      let othersCount = 0;\n      others.map(dataVal => {\n        othersCount = dataVal.value + othersCount;\n      });\n      let dataSetValues = dataValues.slice(0, 7);\n      let obj = {};\n\n      if (dataValues.length > 7) {\n        obj.value = othersCount;\n        obj.label = \"Others\";\n        dataSetValues.push(obj);\n      }\n\n      console.log(dataSetValues);\n      debugger;\n      return dataSetValues;\n    }\n  };\n\n  switch (action.type) {\n    case C.DASHBOARD_DATASETS:\n      return handleData(action.payload.data.sort(compare));\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/Dashboard/languageDatasets.js"],"names":["C","reducer","state","action","compare","a","b","value","handleData","dataValues","length","others","slice","othersCount","map","dataVal","dataSetValues","obj","label","push","console","log","type","DASHBOARD_DATASETS","payload","data","sort"],"mappings":"AAAA,OAAOA,CAAP,MAAc,yBAAd;;AAEC,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAErC,WAASC,OAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAyB;AACrB,QAAKD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAjB,EAAwB;AACtB,aAAO,CAAP;AACD;;AACD,QAAKF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAjB,EAAwB;AACtB,aAAO,CAAC,CAAR;AACD;;AACD,WAAO,CAAP;AACD;;AAED,QAAMC,UAAU,GAAIC,UAAD,IAAe;AAChC;;AACA,QAAIA,UAAU,CAACC,MAAX,GAAoB,CAAxB,EAA2B;AACzB,UAAIC,MAAM,GAAGF,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoBH,UAAU,CAACC,MAA/B,CAAb;AACA,UAAIG,WAAW,GAAG,CAAlB;AACAF,MAAAA,MAAM,CAACG,GAAP,CAAWC,OAAO,IAAI;AAClBF,QAAAA,WAAW,GAAGE,OAAO,CAACR,KAAR,GAAgBM,WAA9B;AAEH,OAHD;AAKA,UAAIG,aAAa,GAAGP,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAApB;AACA,UAAIK,GAAG,GAAG,EAAV;;AAEA,UAAIR,UAAU,CAACC,MAAX,GAAoB,CAAxB,EAA2B;AACvBO,QAAAA,GAAG,CAACV,KAAJ,GAAYM,WAAZ;AACAI,QAAAA,GAAG,CAACC,KAAJ,GAAY,QAAZ;AACAF,QAAAA,aAAa,CAACG,IAAd,CAAmBF,GAAnB;AACH;;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AAEA;AACD,aAAOA,aAAP;AAGH;AAGF,GA5BC;;AA+BF,UAAQb,MAAM,CAACmB,IAAf;AAEI,SAAKtB,CAAC,CAACuB,kBAAP;AACI,aAAOf,UAAU,CAAEL,MAAM,CAACqB,OAAP,CAAeC,IAAf,CAAoBC,IAApB,CAA0BtB,OAA1B,CAAF,CAAjB;;AAEJ;AACI,aAAOF,KAAP;AANR;AAQH,CAnDA;;AAqDD,eAAeD,OAAf","sourcesContent":["import C from '../../actions/constants';\n\n const reducer = (state = {}, action) => {\n\n    function compare( a, b ) {\n        if ( a.value < b.value ){\n          return 1;\n        }\n        if ( a.value > b.value ){\n          return -1;\n        }\n        return 0;\n      }\n\n      const handleData = (dataValues) =>{\n        debugger\n        if (dataValues.length > 0) {\n          let others = dataValues.slice(7, dataValues.length)\n          let othersCount = 0\n          others.map(dataVal => {\n              othersCount = dataVal.value + othersCount\n  \n          })\n  \n          let dataSetValues = dataValues.slice(0, 7)\n          let obj = {}\n  \n          if (dataValues.length > 7) {\n              obj.value = othersCount\n              obj.label = \"Others\"\n              dataSetValues.push(obj)\n          }\n  \n           console.log(dataSetValues) \n\n           debugger\n          return dataSetValues;\n         \n\n      }\n\n      \n    }\n      \n      \n    switch (action.type) {\n        \n        case C.DASHBOARD_DATASETS:\n            return handleData (action.payload.data.sort( compare ));\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}