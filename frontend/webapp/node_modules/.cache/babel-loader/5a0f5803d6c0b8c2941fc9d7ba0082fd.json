{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/MySearches.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, Typography, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect } from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MySearchReport from \"../../../../redux/actions/api/DataSet/DatasetSearch/MySearches\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Cached } from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySearches = props => {\n  _s();\n\n  const detailedReport = useSelector(state => state.mySearchReport);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    MySearchListApi();\n  }, []);\n\n  const MySearchListApi = () => {\n    const userObj = new MySearchReport();\n    dispatch(APITransport(userObj));\n  };\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MuiTableCell: {\n        head: {\n          padding: '6px 6px 6px 24px',\n          backgroundColor: \"#c7c6c68a !important\",\n          fontWeight: \"bold\"\n        }\n      },\n      MUIDataTableBodyCell: {\n        root: {\n          padding: '6px 6px 6px .8rem'\n        }\n      },\n      MUIDataTableHeadCell: {\n        root: {\n          '&:nth-child(1)': {\n            width: \"50%\"\n          }\n        }\n      },\n      MuiButton: {\n        root: {\n          fontWeight: \"bold\"\n        }\n      },\n      // MuiToolbar: {\n      //          root: { \n      //                  display: \"none\" \n      //                 } \n      //         },\n      MuiPaper: {\n        root: {\n          boxShadow: 'none !important',\n          borderRadius: 0,\n          border: \"1px solid rgb(224 224 224)\"\n        }\n      }\n    }\n  });\n\n  const fetchHeaderButton = () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      size: \"medium\",\n      variant: \"outlined\",\n      className: classes.ButtonRefresh,\n      onClick: () => MySearchListApi(),\n      children: [/*#__PURE__*/_jsxDEV(Cached, {\n        className: classes.iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 149\n      }, this), \"Refresh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }, this);\n  };\n\n  const renderAction = rowData => {\n    const status = rowData[4].toLowerCase();\n    history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/${status}/${rowData[0]}`);\n  };\n\n  const columns = [{\n    name: \"sr_no\",\n    label: \"SR No\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"search_criteria\",\n    label: \"Search Criteria\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"searched_on\",\n    label: \"Searched On\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"count\",\n    label: \"#Record\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"status\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {\n        noMatch: \"No records\"\n      },\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    customToolbar: fetchHeaderButton,\n    displaySelectToolbar: false,\n    fixedHeader: false,\n    filterType: false,\n    download: false,\n    print: false,\n    filter: false,\n    viewColumns: false,\n    selectableRows: \"none\",\n    onRowClick: (rowData, rowMeta) => rowData[3] && renderAction(rowData)\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.divStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [UrlConfig.dataset],\n        activeLink: \"My Searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: getMuiTheme(),\n      children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: `My Searches`,\n        data: detailedReport.responseData,\n        columns: columns,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 17\n  }, this);\n};\n\n_s(MySearches, \"KMHwRvqOiuigVDv6ORtXeJeiT8Q=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = MySearches;\nexport default withStyles(DataSet)(MySearches);\n\nvar _c;\n\n$RefreshReg$(_c, \"MySearches\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/MySearches.jsx"],"names":["withStyles","Typography","MuiThemeProvider","createMuiTheme","Button","BreadCrum","React","useEffect","DataSet","APITransport","MUIDataTable","MySearchReport","useDispatch","useSelector","Cached","UrlConfig","useHistory","MySearches","props","detailedReport","state","mySearchReport","dispatch","history","MySearchListApi","userObj","getMuiTheme","overrides","MuiTableCell","head","padding","backgroundColor","fontWeight","MUIDataTableBodyCell","root","MUIDataTableHeadCell","width","MuiButton","MuiPaper","boxShadow","borderRadius","border","fetchHeaderButton","classes","ButtonRefresh","iconStyle","renderAction","rowData","status","toLowerCase","push","process","env","PUBLIC_URL","columns","name","label","options","filter","sort","display","textLabels","body","noMatch","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","customToolbar","displaySelectToolbar","fixedHeader","filterType","download","print","selectableRows","onRowClick","rowMeta","divStyle","breadcrum","dataset","responseData"],"mappings":"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","sourcesContent":["import { withStyles, Typography, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect} from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MySearchReport from \"../../../../redux/actions/api/DataSet/DatasetSearch/MySearches\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Cached} from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport {  useHistory } from \"react-router-dom\";\n\nconst MySearches = (props) => {\n\n        const detailedReport            =       useSelector((state) => state.mySearchReport);\n        const dispatch                  = useDispatch();\n        const history                   = useHistory();\n        \n        useEffect(() => {\n                MySearchListApi()   \n        }, []);\n\n  \n        const  MySearchListApi  = () =>{\n                \n                const userObj         = new MySearchReport()\n                dispatch(APITransport(userObj));\n        }\n\n        const getMuiTheme = () => createMuiTheme({\n                overrides: {\n                        \n                        MuiTableCell: {\n                                head    : {\n                                        padding: '6px 6px 6px 24px',\n                                        backgroundColor : \"#c7c6c68a !important\",\n                                        fontWeight      :\"bold\",\n                                        \n                                        \n                                }\n                        },\n                        MUIDataTableBodyCell:{\n                                root:{\n                                        padding: '6px 6px 6px .8rem', \n                                }\n                        },\n                        MUIDataTableHeadCell: {\n                                root: {\n                                        \n                                  '&:nth-child(1)': {\n                                    width: \"50%\"\n                                  }\n                                }\n                              },\n                              MuiButton :{\n                                root:{\n                                  fontWeight      :\"bold\"\n                                }\n                        },\n                        // MuiToolbar: {\n                        //          root: { \n                        //                  display: \"none\" \n                        //                 } \n                        //         },\n                        MuiPaper: {\n                                root:{\n                                        boxShadow       : 'none !important',\n                                        borderRadius    : 0,\n                                        border          : \"1px solid rgb(224 224 224)\"\n                                }\n                        }\n                },\n        \n        });\n\n        const fetchHeaderButton= () => {\n            return <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.ButtonRefresh}  onClick={() =>MySearchListApi() }><Cached className ={classes.iconStyle}/>Refresh</Button>\n    }\n\n    const renderAction = (rowData) =>{\n\n        const status = rowData[4].toLowerCase();\n        history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/${status}/${rowData[0]}`)\n    }\n\n        \n        const columns = [\n                {\n                        name    : \"sr_no\",\n                        label   : \"SR No\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                display : \"excluded\"\n                                \n                        },\n                },\n                {\n                        name    : \"search_criteria\",\n                        label   : \"Search Criteria\",\n                        options : {\n                                filter  : false,\n                                sort    : true,\n                        },\n                },\n                {\n                        name    : \"searched_on\",\n                        label   : \"Searched On\",\n                        options : {\n                                filter  : false,\n                                sort    : true,\n                        },\n                },{\n                        name    : \"count\",\n                        label   : \"#Record\",\n                        options : {\n                                filter  : false,\n                                sort    : true,\n                                \n                  }  },\n                {\n                        name    : \"status\",\n                        label   : \"Status\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                \n                        },\n                }\n        \n        ];\n\n        const options = {\n                textLabels              :       {\n                        body            :       {\n                                noMatch: \"No records\"\n                        },\n                        toolbar         :       {\n                                search          : \"Search\",\n                                viewColumns     : \"View Column\",\n                        },\n                        pagination      :       { rowsPerPage     : \"Rows per page\"},\n                        options         :       { sortDirection   : \"desc\" },\n                },\n                customToolbar: fetchHeaderButton,\n                displaySelectToolbar    :       false,\n                fixedHeader             :       false,\n                filterType              :       false,\n                download                :       false,\n                print                   :       false,\n                filter                  :       false,\n                viewColumns     : false,\n                selectableRows          :       \"none\",\n\n\n                onRowClick                 : (rowData, rowMeta) =>rowData[3] &&  renderAction(rowData)\n        };\n\n        const { classes }               = props;\n        return (\n                <div className  =       {classes.divStyle}>\n                        <div className  = {classes.breadcrum}>\n                                <BreadCrum links = {[UrlConfig.dataset]} activeLink = \"My Searches\" />\n                        </div>\n                        \n                        <MuiThemeProvider theme = {getMuiTheme()}>  \n                                <MUIDataTable\n                                        title   =       {`My Searches`}\n                                        data    =       {detailedReport.responseData}\n                                        columns =               {columns}\n                                        options ={options}\n                                />\n                        </MuiThemeProvider>\n                        \n                </div>\n        );\n};\n\nexport default withStyles(DataSet)(MySearches);\n"]},"metadata":{},"sourceType":"module"}