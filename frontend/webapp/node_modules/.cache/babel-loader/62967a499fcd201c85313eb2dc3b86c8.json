{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ContributionList.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, Typography, Link, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport DataSet from \"../../styles/Dataset\";\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../redux/actions/api/DataSet/MyContribution\";\nimport Dialog from \"../../components/common/Dialog\";\nimport { Cached, SaveAlt } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributionList = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const myContributionReport = useSelector(state => state.myContributionReport);\n  useEffect(() => {\n    const userObj = new MyContributionList(\"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n    myContributionReport.responseData.length == 0 && dispatch(APITransport(userObj));\n  }, []);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MuiTableCell: {\n        head: {\n          backgroundColor: \"#c7c6c68a !important\"\n        }\n      },\n      MuiPaper: {\n        root: {\n          boxShadow: 'none !important',\n          borderRadius: 0,\n          border: \"1px solid rgb(224 224 224)\"\n        }\n      },\n      MUIDataTableToolbar: {\n        root: {\n          display: \"none\"\n        }\n      }\n    }\n  });\n\n  const HandleDelete = () => {\n    return /*#__PURE__*/_jsxDEV(Dialog // message={message}\n    // type={dialogType}\n    // handleClose={this.handleDialogClose.bind(this)}\n    // open\n    // title={dialogTitle}\n    // handleSubmit={this.handleDialogSubmit.bind(this)}\n    // value={value}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this);\n  };\n\n  const fetchHeaderButton = () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      size: \"medium\",\n      variant: \"outlined\",\n      className: classes.ButtonRefresh,\n      onClick: () => this.handleLanguageChange(\"domain\"),\n      children: [/*#__PURE__*/_jsxDEV(Cached, {\n        className: classes.iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 173\n      }, this), \"Refresh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }, this);\n  };\n\n  const renderStatus = (id, value) => {\n    if (value === \"Inprogress\") {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.link,\n        onClick: () => {\n          history.push(`${process.env.PUBLIC_URL}/dataset-status/${id}}`);\n        },\n        children: \" In-progress \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: \"Published \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 32\n      }, this);\n    }\n  };\n\n  const renderAction = (id, value) => {\n    if (value === \"Inprogress\") {} else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.span,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.link,\n          onClick: () => {\n            history.push(`${process.env.PUBLIC_URL}/submit-dataset/upload`);\n          },\n          children: \" Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.link,\n          onClick: () => {\n            HandleDelete();\n          },\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 191\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 32\n      }, this);\n    }\n  };\n\n  const handleRowClick = (rowData, rowMeta) => {\n    debugger;\n    history.push(`${process.env.PUBLIC_URL}/dataset-status/${rowData[0]}}`);\n  };\n\n  const columns = [{\n    name: \"sr_no\",\n    label: \"s id\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"sr_no\",\n    label: \"SR No.\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Dataset\",\n    label: \"Dataset Name\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Submitted_on\",\n    label: \"Submitted On\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Status\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"Status\",\n    label: \"status\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderStatus(tableMeta.rowData[0], tableMeta.rowData[4])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 56\n          }, this);\n        }\n      }\n    }\n  }, {\n    name: \"Action\",\n    label: \"action\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderAction(tableMeta.rowData[0], tableMeta.rowData[4])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 56\n          }, this);\n        }\n      }\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    onRowClick: handleRowClick,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: true,\n    filter: false,\n    selectableRows: \"none\"\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.divStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [\"Dataset\"],\n        activeLink: \"My Contribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerButtons,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"b\",\n        component: \"h2\",\n        children: \"My Contribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }, this), fetchHeaderButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: getMuiTheme(),\n      children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: `My Contribution`,\n        data: myContributionReport.responseData,\n        columns: columns,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ContributionList, \"JPYArIHHRuCZQsVWmYQ6PZ/FaFA=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = ContributionList;\nexport default withStyles(DataSet)(ContributionList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributionList\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ContributionList.jsx"],"names":["withStyles","Typography","Link","MuiThemeProvider","createMuiTheme","Button","BreadCrum","React","useEffect","useState","useDispatch","useSelector","useHistory","DataSet","APITransport","MUIDataTable","MyContributionList","Dialog","Cached","SaveAlt","ContributionList","props","history","dispatch","myContributionReport","state","userObj","responseData","length","getMuiTheme","overrides","MuiTableCell","head","backgroundColor","MuiPaper","root","boxShadow","borderRadius","border","MUIDataTableToolbar","display","HandleDelete","fetchHeaderButton","classes","ButtonRefresh","handleLanguageChange","iconStyle","renderStatus","id","value","link","push","process","env","PUBLIC_URL","span","renderAction","handleRowClick","rowData","rowMeta","columns","name","label","options","filter","sort","empty","customBodyRender","tableMeta","updateValue","textLabels","body","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","onRowClick","filterType","download","print","fixedHeader","selectableRows","divStyle","breadcrum","headerButtons"],"mappings":"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","sourcesContent":["import { withStyles, Typography,Link, MuiThemeProvider, createMuiTheme,Button } from \"@material-ui/core\";\nimport BreadCrum from '../../components/common/Breadcrum';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  useHistory } from \"react-router-dom\";\nimport DataSet from \"../../styles/Dataset\";\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../redux/actions/api/DataSet/MyContribution\";\nimport Dialog from \"../../components/common/Dialog\"\nimport {Cached, SaveAlt} from '@material-ui/icons';\n\nconst ContributionList = (props) => {\n\n        const history                 = useHistory();\n        const dispatch                = useDispatch();\n        const myContributionReport    = useSelector( (state) => state.myContributionReport);\n        \n        useEffect(()                  => {\n                const userObj         = new MyContributionList( \"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n                myContributionReport.responseData.length == 0  && dispatch(APITransport(userObj));\n        }, []);\n  \n\n        const getMuiTheme = () => createMuiTheme({\n                overrides: {\n                MuiTableCell: {\n                        head: {\n                                backgroundColor : \"#c7c6c68a !important\"\n                        }\n                },\n                MuiPaper: {\n                        root:{\n                                boxShadow       : 'none !important',\n                                borderRadius    : 0,\n                                border          : \"1px solid rgb(224 224 224)\"\n                        }\n                },\n                MUIDataTableToolbar:{ root: { display: \"none\" } }\n                }\n        });\n\n        const HandleDelete = () =>{\n                return <Dialog\n                // message={message}\n                // type={dialogType}\n                // handleClose={this.handleDialogClose.bind(this)}\n                // open\n                // title={dialogTitle}\n                // handleSubmit={this.handleDialogSubmit.bind(this)}\n                // value={value}\n                /> \n        }\n\n\n        const fetchHeaderButton= () => {\n  \n\n                return (\n                    \n                         <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.ButtonRefresh}  onClick={() => this.handleLanguageChange(\"domain\")}><Cached className ={classes.iconStyle}/>Refresh</Button>\n                   \n                )\n              }\n\n        const renderStatus = (id,value) => {\n                if(value === \"Inprogress\"){\n                        return  <Link className = {classes.link} onClick={()=>{history.push(`${process.env.PUBLIC_URL}/dataset-status/${id}}`)}}> In-progress </Link>\n                }\n                else{\n                        return <span className = {classes.span}>Published </span>\n                }\n        }\n\n        const renderAction = (id,value) => {\n                if(value === \"Inprogress\"){}\n                else{\n                        return <div className= {classes.span}> <Link className= {classes.link} onClick={()=>{history.push(`${process.env.PUBLIC_URL}/submit-dataset/upload`)}}> Update </Link><Link className= {classes.link} onClick={()=>{HandleDelete()}}> Delete </Link> </div> \n                }\n        }\n\n        const handleRowClick = (rowData, rowMeta) => {\n                debugger\n                history.push(`${process.env.PUBLIC_URL}/dataset-status/${rowData[0]}}`)\n            };\n\n    \n        const columns = [\n                {\n                name: \"sr_no\",\n                label: \"s id\",\n                options: {\n                        filter  : false,\n                        sort    : false,\n                        display : \"excluded\",\n                        },\n                },\n                {\n                name    : \"sr_no\",\n                label   : \"SR No.\",\n                options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },\n                {\n                name    : \"Dataset\",\n                label   : \"Dataset Name\",\n                options: {\n                        filter  : false,\n                        sort    : false,\n                        },\n                },\n                {\n                name    : \"Submitted_on\",\n                label   : \"Submitted On\",\n                options : {\n                                filter  : false,\n                                sort    : false,\n                        \n                        },\n                },\n                {\n                name    : \"Status\",\n                label   : \"Status\",\n                options : {\n                        filter  : false,\n                        sort    : false,\n                        display : \"excluded\",\n                        },\n                },\n                {\n                name: \"Status\",\n                label: \"status\",\n                options: {\n                        filter  : true,\n                        sort    : false,\n                        empty   : true,\n                        customBodyRender: (value, tableMeta, updateValue) => {\n                                        if (tableMeta.rowData) {\n                                                return <div>{renderStatus(tableMeta.rowData[0],tableMeta.rowData[4])}</div>;\n                                        }\n                                },\n                        },\n                },\n\n                {\n                name    : \"Action\",\n                label   : \"action\",\n                options: {\n                                filter  : true,\n                                sort    : false,\n                                empty   : true,\n                                customBodyRender: (value, tableMeta, updateValue) => {\n                                        if (tableMeta.rowData) {\n                                                return <div>{renderAction(tableMeta.rowData[0], tableMeta.rowData[4])}</div>;\n                                        }\n                        },\n                },\n                },\n        ];\n\n        const options = {\n                textLabels: {\n                        body: {},\n                        toolbar: {\n                                search          : \"Search\",\n                                viewColumns     : \"View Column\",\n                        },\n                        pagination: {\n                                rowsPerPage     : \"Rows per page\",\n                        },\n                        options: { sortDirection: \"desc\" },\n                        },\n\n                onRowClick      : handleRowClick,\n                filterType      : \"checkbox\",\n                download        : false,\n                print           : false,\n                fixedHeader     : true,\n                filter          : false,\n                selectableRows  : \"none\",\n        };\n\n        const { classes } = props;\n        \n        return (\n                <div className = {classes.divStyle}>\n                        <div className = {classes.breadcrum}>\n                                <BreadCrum links={[\"Dataset\"]} activeLink=\"My Contribution\" />\n                        </div>\n\n                        <div className={classes.headerButtons}>\n                        <Typography variant=\"b\" component=\"h2\" >My Contribution</Typography>\n                                {fetchHeaderButton()} \n                        </div>\n\n                        {/* <div className={classes.title}>\n                                \n                        </div> */}\n\n                        <MuiThemeProvider theme={getMuiTheme()}>  \n                                <MUIDataTable\n                                        title           =       {`My Contribution`}\n                                        data            =       {myContributionReport.responseData}\n                                        columns         =       {columns}\n                                        options         =       {options}\n                                />\n                        </MuiThemeProvider>\n                </div>\n        );\n};\n\nexport default withStyles(DataSet)(ContributionList);\n"]},"metadata":{},"sourceType":"module"}