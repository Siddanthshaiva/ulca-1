{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ContributionList.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, withStyles, Tooltip, IconButton } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport DataSet from \"../../styles/Dataset\";\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../redux/actions/api/DataSet/MyContribution\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CloudDownload } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributionList = props => {\n  _s();\n\n  const myContributionReport = useSelector(state => state.myContributionReport);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const userObj = new MyContributionList(\"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n    dispatch(APITransport(userObj));\n  }, []);\n\n  const AddJsonDownload = () => /*#__PURE__*/_jsxDEV(Tooltip, {\n    disableFocusListener: true,\n    title: \"Download Json\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => this.handleDownLoad(),\n      children: /*#__PURE__*/_jsxDEV(CloudDownload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n\n  const renderStatus = value => {\n    if (value === \"Inprogress\") {\n      /*#__PURE__*/\n      _jsxDEV(Link, {\n        children: \" Inprogress \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"span\", {\n        children: \"Published \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this);\n    }\n  };\n\n  const columns = [{\n    name: \"sr_no\",\n    label: \"s id\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"sr_no\",\n    label: \"Sr No.\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Dataset\",\n    label: \"Dataset Name\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Submitted_on\",\n    label: \"Submitted On\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"Status\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"Status\",\n    label: \"status\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderStatus(tableMeta.rowData[4])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 20\n          }, this);\n        }\n      }\n    }\n  }, {\n    name: \"Action\",\n    label: \"action\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 20\n          }, this);\n        }\n      }\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    customToolbar: AddJsonDownload,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: true,\n    filter: false,\n    selectableRows: \"none\"\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.divStyle,\n    children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n      title: `User Event Report`,\n      data: myContributionReport.responseData,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContributionList, \"raVsph3jiC0MLMP8EwnoXFW1KSk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ContributionList;\nexport default withStyles(DataSet)(ContributionList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributionList\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ContributionList.jsx"],"names":["Grid","withStyles","Tooltip","IconButton","React","useEffect","useState","DataSet","APITransport","MUIDataTable","MyContributionList","useDispatch","useSelector","CloudDownload","ContributionList","props","myContributionReport","state","dispatch","userObj","AddJsonDownload","handleDownLoad","renderStatus","value","columns","name","label","options","filter","sort","display","empty","customBodyRender","tableMeta","updateValue","rowData","textLabels","body","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","customToolbar","filterType","download","print","fixedHeader","selectableRows","classes","divStyle","responseData"],"mappings":"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","sourcesContent":["import { Grid, withStyles, Tooltip, IconButton } from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport DataSet from \"../../styles/Dataset\";\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../redux/actions/api/DataSet/MyContribution\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CloudDownload } from \"@material-ui/icons\";\n\nconst ContributionList = (props) => {\n  const myContributionReport = useSelector(\n    (state) => state.myContributionReport\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const userObj = new MyContributionList(\n      \"SAVE\",\n      \"A_FBTTR-VWSge-1619075981554\",\n      \"241006445d1546dbb5db836c498be6381606221196566\"\n    );\n    dispatch(APITransport(userObj));\n  }, []);\n  const AddJsonDownload = () => (\n    <Tooltip disableFocusListener title=\"Download Json\">\n      <IconButton onClick={() => this.handleDownLoad()}>\n        <CloudDownload />\n      </IconButton>\n    </Tooltip>\n  );\n\n  const renderStatus = (value) => {\n    if(value === \"Inprogress\"){\n      <Link> Inprogress </Link>\n    }\n    else{\n      <span>Published </span>\n    }\n  }\n\n    \n  const columns = [\n    {\n      name: \"sr_no\",\n      label: \"s id\",\n      options: {\n        filter: false,\n        sort: false,\n        display: \"excluded\",\n      },\n    },\n    {\n      name: \"sr_no\",\n      label: \"Sr No.\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"Dataset\",\n      label: \"Dataset Name\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"Submitted_on\",\n      label: \"Submitted On\",\n      options: {\n        filter: false,\n        sort: false,\n        \n      },\n    },{\n      name: \"Status\",\n      label: \"Status\",\n      options: {\n        filter: false,\n        sort: false,\n        display: \"excluded\",\n      },\n    },\n    {\n      name: \"Status\",\n      label: \"status\",\n      options: {\n        filter: true,\n        sort: false,\n        empty: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          if (tableMeta.rowData) {\n            return <div>{renderStatus(tableMeta.rowData[4])}</div>;\n          }\n        },\n      },\n    },\n\n    {\n      name: \"Action\",\n      label: \"action\",\n      options: {\n        filter: true,\n        sort: false,\n        empty: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          if (tableMeta.rowData) {\n            return <div></div>;\n          }\n        },\n      },\n    },\n  ];\n\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\",\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\",\n      },\n      options: { sortDirection: \"desc\" },\n    },\n\n    customToolbar: AddJsonDownload,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: true,\n    filter: false,\n    selectableRows: \"none\",\n  };\n\n  const { classes } = props;\n  return (\n    <div className={classes.divStyle}>\n      <MUIDataTable\n        title={`User Event Report`}\n        data={myContributionReport.responseData}\n        columns={columns}\n        options={options}\n      />\n    </div>\n  );\n};\n\nexport default withStyles(DataSet)(ContributionList);\n"]},"metadata":{},"sourceType":"module"}