{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ContributionList.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, withStyles, Tooltip, IconButton } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../redux/actions/api/DataSet/MyContribution\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CloudDownload } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributionList = props => {\n  _s();\n\n  const myContributionReport = useSelector(state => state.myContributionReport);\n  const dispatch = useDispatch();\n  console.log(\"-------===============\", myContributionReport.responseData);\n  useEffect(() => {\n    const userObj = new MyContributionList(\"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n    dispatch(APITransport(userObj));\n  }, []);\n\n  const AddJsonDownload = () => /*#__PURE__*/_jsxDEV(Tooltip, {\n    disableFocusListener: true,\n    title: \"Download Json\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => this.handleDownLoad(),\n      children: /*#__PURE__*/_jsxDEV(CloudDownload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n\n  const renderEventList = (s_id, time) => {\n    const sentence_data = this.props.eventData.filter(data => data.s_id === s_id && data.time_spent === time);\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"View Events JSON\",\n      placement: \"right\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          color: \"#233466\",\n          padding: \"5px\"\n        },\n        component: \"a\",\n        onClick: () => this.handleEventListView(sentence_data[0].user_events),\n        children: /*#__PURE__*/_jsxDEV(ViewListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n\n  const columns = [{\n    name: \"s_id\",\n    label: \"Sentence Id\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"src\",\n    label: \"Source\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"mt\",\n    label: \"Machine Translation\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"tgt\",\n    label: \"Target\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"bleu_score\",\n    label: \"Bleu Score\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"time_spent\",\n    label: \"Time Spent\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"user_events\",\n    label: \"User Events\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"Action\",\n    label: \"action\",\n    options: {\n      filter: true,\n      sort: false,\n      empty: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        if (tableMeta.rowData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.renderEventList(tableMeta.rowData[0], tableMeta.rowData[5])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 20\n          }, this);\n        }\n      }\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    customToolbar: AddJsonDownload,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: true,\n    filter: false,\n    selectableRows: \"none\"\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MUIDataTable, {\n    title: `User Event Report`,\n    data: myContributionReport.responseData,\n    columns: columns,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContributionList, \"raVsph3jiC0MLMP8EwnoXFW1KSk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ContributionList;\nexport default withStyles(LoginStyles)(ContributionList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributionList\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ContributionList.jsx"],"names":["Grid","withStyles","Tooltip","IconButton","React","useEffect","useState","LoginStyles","APITransport","MUIDataTable","MyContributionList","useDispatch","useSelector","CloudDownload","ContributionList","props","myContributionReport","state","dispatch","console","log","responseData","userObj","AddJsonDownload","handleDownLoad","renderEventList","s_id","time","sentence_data","eventData","filter","data","time_spent","color","padding","handleEventListView","user_events","columns","name","label","options","sort","display","empty","customBodyRender","value","tableMeta","updateValue","rowData","textLabels","body","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","customToolbar","filterType","download","print","fixedHeader","selectableRows","classes"],"mappings":"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","sourcesContent":["import { Grid, withStyles, Tooltip, IconButton } from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MyContributionList from \"../../../redux/actions/api/DataSet/MyContribution\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CloudDownload } from \"@material-ui/icons\";\n\nconst ContributionList = (props) => {\n\n  const myContributionReport = useSelector((state) => state.myContributionReport);\n  \n\n  const dispatch = useDispatch();\n  console.log(\"-------===============\",myContributionReport.responseData)\n  useEffect(() => {\n    const userObj = new MyContributionList(\n      \"SAVE\",\n      \"A_FBTTR-VWSge-1619075981554\",\n      \"241006445d1546dbb5db836c498be6381606221196566\"\n    );\n    dispatch(APITransport(userObj));\n  }, []);\n  const AddJsonDownload = () => (\n    <Tooltip disableFocusListener title=\"Download Json\">\n      <IconButton onClick={() => this.handleDownLoad()}>\n        <CloudDownload />\n      </IconButton>\n    </Tooltip>\n  );\n\n\n  const renderEventList = (s_id, time) => {\n    const sentence_data = this.props.eventData.filter(\n      (data) => data.s_id === s_id && data.time_spent === time\n    );\n    return (\n      <Tooltip title=\"View Events JSON\" placement=\"right\">\n        <IconButton\n          style={{ color: \"#233466\", padding: \"5px\" }}\n          component=\"a\"\n          onClick={() => this.handleEventListView(sentence_data[0].user_events)}\n        >\n          <ViewListIcon />\n        </IconButton>\n      </Tooltip>\n    );\n  };\n  const columns = [\n    {\n      name: \"s_id\",\n      label: \"Sentence Id\",\n      options: {\n        filter: false,\n        sort: false,\n        display: \"excluded\",\n      },\n    },\n    {\n      name: \"src\",\n      label: \"Source\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"mt\",\n      label: \"Machine Translation\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"tgt\",\n      label: \"Target\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"bleu_score\",\n      label: \"Bleu Score\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"time_spent\",\n      label: \"Time Spent\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"user_events\",\n      label: \"User Events\",\n      options: {\n        filter: false,\n        sort: false,\n        display: \"excluded\",\n      },\n    },\n\n    {\n      name: \"Action\",\n      label:\"action\",\n      options: {\n        filter: true,\n        sort: false,\n        empty: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          if (tableMeta.rowData) {\n            return <div>{this.renderEventList(tableMeta.rowData[0], tableMeta.rowData[5])}</div>;\n          }\n        },\n      },\n    },\n  ];\n\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\",\n      },\n      pagination: {\n        rowsPerPage: \"rows per page\",\n      },\n      options: { sortDirection: \"desc\" },\n    },\n\n    customToolbar: AddJsonDownload,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    fixedHeader: true,\n    filter: false,\n    selectableRows: \"none\",\n  };\n  const { classes } = props;\n\n  return (\n    <MUIDataTable\n    title={`User Event Report`}\n    data={myContributionReport.responseData}\n    columns={columns}\n    options={options}\n  />\n  );\n};\n\nexport default withStyles(LoginStyles)(ContributionList);\n"]},"metadata":{},"sourceType":"module"}