{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ReadymadeDataset.jsx/PopUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useEffect, useState } from \"react\";\nimport { Grid } from '@material-ui/core';\nimport { SaveAlt } from '@material-ui/icons';\nimport DatasetStyle from '../../../styles/Dataset';\nimport { withStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content'\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst PopUpDialog = props => {\n  _s();\n\n  const {\n    classes\n  } = props; // const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [fullWidth, setFullWidth] = useState(true);\n  const [maxWidth, setMaxWidth] = useState('sm');\n  const rows = [createData('Language Pair', 'Hindi-English'), createData('Curation Date', '23/4/2019'), createData('#Records', '128k'), createData('#Downloaded', '3k')];\n\n  function createData(name, calories) {\n    return {\n      name,\n      calories\n    };\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: true,\n      onClose: handleClose // className={classes.popupDialog}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          sm: 9,\n          md: 9,\n          lg: 9,\n          xl: 9,\n          children: /*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"English-Hindi Parallel Text Corpus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          sm: 3,\n          md: 3,\n          lg: 3,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleClose,\n            style: {\n              float: 'right',\n              marginRight: \"21px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n              fontSize: \"small\",\n              className: classes.iconStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 122\n            }, this), \"Close\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          elevation: 0,\n          style: {\n            border: '1px solid #00000029',\n            borderRadius: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    boxShadow: '4px 0 4px -4px #00000029',\n                    width: '140px'\n                  },\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: row.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(SaveAlt, {\n            className: classes.iconStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 62\n          }, this), \"Download Sample\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          className: classes.buttonStyle,\n          children: [/*#__PURE__*/_jsxDEV(SaveAlt, {\n            className: classes.iconStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 94\n          }, this), \"Download All\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PopUpDialog, \"p/Oqzeo82DLdYzlT3F5TnsySOcw=\");\n\n_c = PopUpDialog;\nexport default withStyles(DatasetStyle)(PopUpDialog);\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUpDialog\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/ReadymadeDataset.jsx/PopUp.jsx"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","useState","Grid","SaveAlt","DatasetStyle","withStyles","CloseIcon","useStyles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","minWidth","formControlLabel","PopUpDialog","props","classes","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","rows","createData","name","calories","handleClickOpen","handleClose","alignItems","float","marginRight","iconStyle","border","borderRadius","map","row","boxShadow","buttonStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useEffect, useState } from \"react\";\nimport { Grid } from '@material-ui/core';\nimport { SaveAlt } from '@material-ui/icons';\nimport DatasetStyle from '../../../styles/Dataset';\nimport { withStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\nconst PopUpDialog = (props) => {\n    const { classes } = props;\n    // const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [fullWidth, setFullWidth] = useState(true);\n    const [maxWidth, setMaxWidth] = useState('sm');\n    const rows = [\n        createData('Language Pair', 'Hindi-English'),\n        createData('Curation Date', '23/4/2019'),\n        createData('#Records', '128k'),\n        createData('#Downloaded', '3k'),\n    ];\n    function createData(name, calories) {\n        return { name, calories };\n    }\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return (\n        <>\n            {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Open dialog\n      </Button> */}\n            <Dialog\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                open={true}\n                onClose={handleClose}\n                // className={classes.popupDialog}\n            >\n                <Grid container style={{ alignItems: 'center' }}>\n                    <Grid item xs={9} sm={9} md={9} lg={9} xl={9}>\n                        <DialogTitle>English-Hindi Parallel Text Corpus</DialogTitle>\n                    </Grid>\n                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\n                        <Button variant='outlined' onClick={handleClose} style={{ float: 'right', marginRight: \"21px\" }}><CloseIcon fontSize='small' className={classes.iconStyle}/>\n                            Close\n                    </Button>\n                    </Grid>\n                </Grid>\n                <DialogContent>\n                    <DialogContentText>\n\n                    </DialogContentText>\n                    <TableContainer component={Paper} elevation={0} style={{border:'1px solid #00000029', borderRadius:'0'}}>\n                        <Table>\n                            <TableBody>\n                                {rows.map((row) => (\n                                    <TableRow key={row.name}>\n                                        <TableCell style={{boxShadow:'4px 0 4px -4px #00000029', width:'140px'}} component=\"th\" scope=\"row\">\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell align=\"left\">{row.calories}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </DialogContent>\n                <DialogActions>\n                    <Button size=\"small\" variant=\"outlined\" ><SaveAlt className={classes.iconStyle} />Download Sample</Button>\n                    <Button size=\"small\" variant=\"outlined\" className={classes.buttonStyle} ><SaveAlt className={classes.iconStyle} />Download All</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\nexport default withStyles(DatasetStyle)(PopUpDialog);\n"]},"metadata":{},"sourceType":"module"}