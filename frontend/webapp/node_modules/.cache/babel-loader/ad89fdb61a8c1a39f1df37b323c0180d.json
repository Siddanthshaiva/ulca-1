{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/components/common/Autocomplete.jsx\";\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 14\n}, this);\n\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 21\n}, this);\n\nexport default function CheckboxesTags(props) {\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    id: props.id,\n    options: props.options,\n    disableCloseOnSelect: true,\n    value: props.value,\n    getOptionLabel: option => option.label,\n    onChange: (event, value, reason) => props.handleOnChange(value, props.filter),\n    getOptionSelected: (option, value) => {\n      return option.label === value.label;\n    },\n    renderOption: (option, {\n      selected\n    }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: icon,\n        checkedIcon: checkedIcon,\n        checked: selected,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), option.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this),\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      variant: \"standard\",\n      label: props.label,\n      error: props.error,\n      helperText: props.error && props.helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = CheckboxesTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxesTags\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/components/common/Autocomplete.jsx"],"names":["React","Checkbox","TextField","Autocomplete","CheckBoxOutlineBlankIcon","CheckBoxIcon","icon","checkedIcon","CheckboxesTags","props","id","options","value","option","label","event","reason","handleOnChange","filter","selected","params","error","helperText"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAEA,MAAMC,IAAI,gBAAG,QAAC,wBAAD;AAA0B,EAAA,QAAQ,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,QAAb;;AACA,MAAMC,WAAW,gBAAG,QAAC,YAAD;AAAc,EAAA,QAAQ,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,QAApB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,sBACE,QAAC,YAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,IAAA,OAAO,EAAED,KAAK,CAACE,OAHjB;AAIE,IAAA,oBAAoB,MAJtB;AAKE,IAAA,KAAK,EAAEF,KAAK,CAACG,KALf;AAME,IAAA,cAAc,EAAGC,MAAD,IAAYA,MAAM,CAACC,KANrC;AAOE,IAAA,QAAQ,EAAE,CAACC,KAAD,EAAQH,KAAR,EAAeI,MAAf,KAA0BP,KAAK,CAACQ,cAAN,CAAqBL,KAArB,EAA4BH,KAAK,CAACS,MAAlC,CAPtC;AAQE,IAAA,iBAAiB,EAAE,CAACL,MAAD,EAASD,KAAT,KAAmB;AACpC,aAAOC,MAAM,CAACC,KAAP,KAAiBF,KAAK,CAACE,KAA9B;AACD,KAVH;AAWE,IAAA,YAAY,EAAE,CAACD,MAAD,EAAS;AAAEM,MAAAA;AAAF,KAAT,kBACZ,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,IAAI,EAAEb,IADR;AAEE,QAAA,WAAW,EAAEC,WAFf;AAGE,QAAA,OAAO,EAAEY,QAHX;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cADF,EAOGN,MAAM,CAACC,KAPV;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAsBE,IAAA,WAAW,EAAGM,MAAD,iBACX,QAAC,SAAD,OAAeA,MAAf;AAAuB,MAAA,OAAO,EAAC,UAA/B;AAA0C,MAAA,KAAK,EAAEX,KAAK,CAACK,KAAvD;AAA8D,MAAA,KAAK,EAAEL,KAAK,CAACY,KAA3E;AAAkF,MAAA,UAAU,EAAEZ,KAAK,CAACY,KAAN,IAAeZ,KAAK,CAACa;AAAnH;AAAA;AAAA;AAAA;AAAA;AAvBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;KA7BuBd,c","sourcesContent":["\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function CheckboxesTags(props) {\n  return (\n    <Autocomplete\n      multiple\n      id={props.id}\n      options={props.options}\n      disableCloseOnSelect\n      value={props.value}\n      getOptionLabel={(option) => option.label}\n      onChange={(event, value, reason) => props.handleOnChange(value, props.filter)}\n      getOptionSelected={(option, value) => {\n        return option.label === value.label\n      }}\n      renderOption={(option, { selected }) => (\n        <React.Fragment>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            checked={selected}\n            color=\"primary\"\n          />\n          {option.label}\n        </React.Fragment>\n      )}\n      renderInput={(params) => (\n        <TextField {...params} variant=\"standard\" label={props.label} error={props.error} helperText={props.error && props.helperText}/>\n      )}\n    />\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}