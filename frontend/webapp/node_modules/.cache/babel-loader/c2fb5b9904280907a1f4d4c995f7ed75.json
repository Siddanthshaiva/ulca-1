{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/MySearches.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, Typography, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect } from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MySearchReport from \"../../../../redux/actions/api/DataSet/DatasetSearch/MySearches\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Cached } from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySearches = props => {\n  _s();\n\n  const detailedReport = useSelector(state => state.mySearchReport);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    MySearchListApi();\n  }, []);\n\n  const MySearchListApi = () => {\n    const userObj = new MySearchReport();\n    dispatch(APITransport(userObj));\n  };\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MuiTableCell: {\n        head: {\n          backgroundColor: \"#c7c6c68a !important\"\n        }\n      },\n      MuiToolbar: {\n        root: {\n          display: \"none\"\n        }\n      },\n      MuiPaper: {\n        root: {\n          boxShadow: 'none !important',\n          borderRadius: 0,\n          border: \"1px solid rgb(224 224 224)\"\n        }\n      }\n    }\n  });\n\n  const fetchHeaderButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerButtons,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"My Searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.ButtonRefresh,\n        onClick: () => MySearchListApi(),\n        children: [/*#__PURE__*/_jsxDEV(Cached, {\n          className: classes.iconStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 158\n        }, this), \"Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this);\n  };\n\n  const renderAction = rowData => {\n    const status = rowData[4].toLowerCase();\n    history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/${status}/${rowData[0]}`);\n  };\n\n  const columns = [{\n    name: \"sr_no\",\n    label: \"SR No\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"search_criteria\",\n    label: \"Search Criteria\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"searched_on\",\n    label: \"Searched On\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"count\",\n    label: \"#Record\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"status\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    displaySelectToolbar: false,\n    fixedHeader: false,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    filter: false,\n    selectableRows: \"none\",\n    onRowClick: (rowData, rowMeta) => renderAction(rowData)\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.divStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [UrlConfig.dataset],\n        activeLink: \"My Searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }, this), fetchHeaderButton(), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: getMuiTheme(),\n      children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: `My Contribution`,\n        data: detailedReport.responseData,\n        columns: columns,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 17\n  }, this);\n};\n\n_s(MySearches, \"KMHwRvqOiuigVDv6ORtXeJeiT8Q=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = MySearches;\nexport default withStyles(DataSet)(MySearches);\n\nvar _c;\n\n$RefreshReg$(_c, \"MySearches\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetSeatch/MySearches.jsx"],"names":["withStyles","Typography","MuiThemeProvider","createMuiTheme","Button","BreadCrum","React","useEffect","DataSet","APITransport","MUIDataTable","MySearchReport","useDispatch","useSelector","Cached","UrlConfig","useHistory","MySearches","props","detailedReport","state","mySearchReport","dispatch","history","MySearchListApi","userObj","getMuiTheme","overrides","MuiTableCell","head","backgroundColor","MuiToolbar","root","display","MuiPaper","boxShadow","borderRadius","border","fetchHeaderButton","classes","headerButtons","ButtonRefresh","iconStyle","renderAction","rowData","status","toLowerCase","push","process","env","PUBLIC_URL","columns","name","label","options","filter","sort","textLabels","body","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","displaySelectToolbar","fixedHeader","filterType","download","print","selectableRows","onRowClick","rowMeta","divStyle","breadcrum","dataset","responseData"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,gBAAjC,EAAmDC,cAAnD,EAAmEC,MAAnE,QAAiF,mBAAjF;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,qDAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,gEAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,SAAUC,UAAV,QAA4B,kBAA5B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAMC,cAAc,GAAoBN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAAnD;AACA,QAAMC,QAAQ,GAAoBV,WAAW,EAA7C;AACA,QAAMW,OAAO,GAAqBP,UAAU,EAA5C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACRiB,IAAAA,eAAe;AACtB,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAOA,eAAe,GAAI,MAAK;AAEvB,UAAMC,OAAO,GAAW,IAAId,cAAJ,EAAxB;AACAW,IAAAA,QAAQ,CAACb,YAAY,CAACgB,OAAD,CAAb,CAAR;AACP,GAJD;;AAMA,QAAMC,WAAW,GAAG,MAAMvB,cAAc,CAAC;AACjCwB,IAAAA,SAAS,EAAE;AACHC,MAAAA,YAAY,EAAE;AACNC,QAAAA,IAAI,EAAM;AACFC,UAAAA,eAAe,EAAG;AADhB;AADJ,OADX;AAMHC,MAAAA,UAAU,EAAE;AACHC,QAAAA,IAAI,EAAE;AACEC,UAAAA,OAAO,EAAE;AADX;AADH,OANT;AAWHC,MAAAA,QAAQ,EAAE;AACFF,QAAAA,IAAI,EAAC;AACGG,UAAAA,SAAS,EAAS,iBADrB;AAEGC,UAAAA,YAAY,EAAM,CAFrB;AAGGC,UAAAA,MAAM,EAAY;AAHrB;AADH;AAXP;AADsB,GAAD,CAAxC;;AAuBA,QAAMC,iBAAiB,GAAE,MAAM;AAC3B,wBACQ;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACC,aAAxB;AAAA,8BACQ,QAAC,UAAD;AAAa,QAAA,OAAO,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,SAAf;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAC,UAAjD;AAA4D,QAAA,SAAS,EAAED,OAAO,CAACE,aAA/E;AAA+F,QAAA,OAAO,EAAE,MAAKjB,eAAe,EAA5H;AAAA,gCAAiI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAGe,OAAO,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAjI;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAMP,GAPG;;AASJ,QAAMC,YAAY,GAAIC,OAAD,IAAY;AAE7B,UAAMC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAAP,CAAWE,WAAX,EAAf;AACAvB,IAAAA,OAAO,CAACwB,IAAR,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,4BAA2BL,MAAO,IAAGD,OAAO,CAAC,CAAD,CAAI,EAAvF;AACH,GAJD;;AAOI,QAAMO,OAAO,GAAG,CACR;AACQC,IAAAA,IAAI,EAAM,OADlB;AAEQC,IAAAA,KAAK,EAAK,OAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM,KAFR;AAGFvB,MAAAA,OAAO,EAAG;AAHR;AAHlB,GADQ,EAWR;AACQmB,IAAAA,IAAI,EAAM,iBADlB;AAEQC,IAAAA,KAAK,EAAK,iBAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM;AAFR;AAHlB,GAXQ,EAmBR;AACQJ,IAAAA,IAAI,EAAM,aADlB;AAEQC,IAAAA,KAAK,EAAK,aAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM;AAFR;AAHlB,GAnBQ,EA0BN;AACMJ,IAAAA,IAAI,EAAM,OADhB;AAEMC,IAAAA,KAAK,EAAK,SAFhB;AAGMC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM;AAFR;AAHhB,GA1BM,EAkCR;AACQJ,IAAAA,IAAI,EAAM,QADlB;AAEQC,IAAAA,KAAK,EAAK,QAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM;AAFR;AAHlB,GAlCQ,CAAhB;AA8CA,QAAMF,OAAO,GAAG;AACRG,IAAAA,UAAU,EAAsB;AACxBC,MAAAA,IAAI,EAAoB,EADA;AAExBC,MAAAA,OAAO,EAAiB;AAChBC,QAAAA,MAAM,EAAY,QADF;AAEhBC,QAAAA,WAAW,EAAO;AAFF,OAFA;AAMxBC,MAAAA,UAAU,EAAc;AAAEC,QAAAA,WAAW,EAAO;AAApB,OANA;AAOxBT,MAAAA,OAAO,EAAiB;AAAEU,QAAAA,aAAa,EAAK;AAApB;AAPA,KADxB;AAURC,IAAAA,oBAAoB,EAAY,KAVxB;AAWRC,IAAAA,WAAW,EAAqB,KAXxB;AAYRC,IAAAA,UAAU,EAAsB,UAZxB;AAaRC,IAAAA,QAAQ,EAAwB,KAbxB;AAcRC,IAAAA,KAAK,EAA2B,KAdxB;AAeRd,IAAAA,MAAM,EAA0B,KAfxB;AAgBRe,IAAAA,cAAc,EAAkB,MAhBxB;AAmBRC,IAAAA,UAAU,EAAmB,CAAC3B,OAAD,EAAU4B,OAAV,KAAsB7B,YAAY,CAACC,OAAD;AAnBvD,GAAhB;AAsBA,QAAM;AAAEL,IAAAA;AAAF,MAA4BrB,KAAlC;AACA,sBACQ;AAAK,IAAA,SAAS,EAAWqB,OAAO,CAACkC,QAAjC;AAAA,4BACQ;AAAK,MAAA,SAAS,EAAKlC,OAAO,CAACmC,SAA3B;AAAA,6BACQ,QAAC,SAAD;AAAW,QAAA,KAAK,EAAI,CAAC3D,SAAS,CAAC4D,OAAX,CAApB;AAAyC,QAAA,UAAU,EAAG;AAAtD;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YADR,EAISrC,iBAAiB,EAJ1B,eAKQ,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAIZ,WAAW,EAAtC;AAAA,6BACQ,QAAC,YAAD;AACQ,QAAA,KAAK,EAAa,iBAD1B;AAEQ,QAAA,IAAI,EAAaP,cAAc,CAACyD,YAFxC;AAGQ,QAAA,OAAO,EAAkBzB,OAHjC;AAIQ,QAAA,OAAO,EAAGG;AAJlB;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAiBP,CA9ID;;GAAMrC,U;UAE0CJ,W,EACND,W,EACAI,U;;;KAJpCC,U;AAgJN,eAAejB,UAAU,CAACQ,OAAD,CAAV,CAAoBS,UAApB,CAAf","sourcesContent":["import { withStyles, Typography, MuiThemeProvider, createMuiTheme, Button } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect} from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport MySearchReport from \"../../../../redux/actions/api/DataSet/DatasetSearch/MySearches\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Cached} from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport {  useHistory } from \"react-router-dom\";\n\nconst MySearches = (props) => {\n\n        const detailedReport            =       useSelector((state) => state.mySearchReport);\n        const dispatch                  = useDispatch();\n        const history                   = useHistory();\n        \n        useEffect(() => {\n                MySearchListApi()   \n        }, []);\n\n  \n        const  MySearchListApi  = () =>{\n                \n                const userObj         = new MySearchReport()\n                dispatch(APITransport(userObj));\n        }\n\n        const getMuiTheme = () => createMuiTheme({\n                overrides: {\n                        MuiTableCell: {\n                                head    : {\n                                        backgroundColor : \"#c7c6c68a !important\"\n                                }\n                        },\n                        MuiToolbar: {\n                                 root: { \n                                         display: \"none\" \n                                        } \n                                },\n                        MuiPaper: {\n                                root:{\n                                        boxShadow       : 'none !important',\n                                        borderRadius    : 0,\n                                        border          : \"1px solid rgb(224 224 224)\"\n                                }\n                        }\n                },\n        \n        });\n\n        const fetchHeaderButton= () => {\n            return (\n                    <div className={classes.headerButtons}>\n                            <Typography  variant=\"h5\" >My Searches</Typography>\n                            <Button color={\"primary\" } size=\"medium\" variant=\"outlined\" className={classes.ButtonRefresh}  onClick={() =>MySearchListApi() }><Cached className ={classes.iconStyle}/>Refresh</Button>\n                     </div>\n            )\n    }\n\n    const renderAction = (rowData) =>{\n\n        const status = rowData[4].toLowerCase();\n        history.push(`${process.env.PUBLIC_URL}/search-and-download-rec/${status}/${rowData[0]}`)\n    }\n\n        \n        const columns = [\n                {\n                        name    : \"sr_no\",\n                        label   : \"SR No\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                display : \"excluded\"\n                                \n                        },\n                },\n                {\n                        name    : \"search_criteria\",\n                        label   : \"Search Criteria\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },\n                {\n                        name    : \"searched_on\",\n                        label   : \"Searched On\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },{\n                        name    : \"count\",\n                        label   : \"#Record\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                \n                  }  },\n                {\n                        name    : \"status\",\n                        label   : \"Status\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                \n                        },\n                }\n        \n        ];\n\n        const options = {\n                textLabels              :       {\n                        body            :       {},\n                        toolbar         :       {\n                                search          : \"Search\",\n                                viewColumns     : \"View Column\",\n                        },\n                        pagination      :       { rowsPerPage     : \"Rows per page\"},\n                        options         :       { sortDirection   : \"desc\" },\n                },\n                displaySelectToolbar    :       false,\n                fixedHeader             :       false,\n                filterType              :       \"checkbox\",\n                download                :       false,\n                print                   :       false,\n                filter                  :       false,\n                selectableRows          :       \"none\",\n\n\n                onRowClick                 : (rowData, rowMeta) => renderAction(rowData)\n        };\n\n        const { classes }               = props;\n        return (\n                <div className  =       {classes.divStyle}>\n                        <div className  = {classes.breadcrum}>\n                                <BreadCrum links = {[UrlConfig.dataset]} activeLink = \"My Searches\" />\n                        </div>\n                        {fetchHeaderButton()} \n                        <MuiThemeProvider theme = {getMuiTheme()}>  \n                                <MUIDataTable\n                                        title   =       {`My Contribution`}\n                                        data    =       {detailedReport.responseData}\n                                        columns =               {columns}\n                                        options ={options}\n                                />\n                        </MuiThemeProvider>\n                        \n                </div>\n        );\n};\n\nexport default withStyles(DataSet)(MySearches);\n"]},"metadata":{},"sourceType":"module"}