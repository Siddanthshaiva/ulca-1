{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Typography, withStyles, Button, TextField, Link, InputLabel, OutlinedInput, IconButton, InputAdornment, FormControl, Checkbox, FormControlLabel, FormHelperText } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [error, setError] = useState({\n    name: false,\n    email: false,\n    password: false,\n    confirmPassword: false\n  });\n  const history = useHistory();\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n    setError({ ...values,\n      [prop]: false\n    });\n  };\n\n  const handleCheckChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.checked\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = () => {};\n\n  const ValidateEmail = mail => {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const HandleSubmitValidate = () => {\n    debugger;\n\n    if (!/^[A-Za-z ]+$/.test(values.name)) {\n      setError({ ...error,\n        name: true\n      });\n    } else if (!ValidateEmail(values.email)) {\n      setError({ ...error,\n        email: true\n      });\n    } else if (!values.password.length > 8) {\n      setError({ ...error,\n        password: true\n      });\n    } else if (values.password !== values.confirmPassword) {\n      setError({ ...error,\n        confirmPassword: true\n      });\n    } else {\n      handleSubmit();\n    }\n  };\n\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.loginGrid,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.body2,\n      children: \"Sign up to ULCA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.subText,\n      children: \"Please enter the details to create an account with ULCA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.textField,\n      required: true,\n      onChange: handleChange(\"name\"),\n      id: \"outlined-required\",\n      error: error.name ? true : false,\n      value: values.name,\n      label: \"Name\",\n      helperText: error.name ? \"Name is not proper\" : \"\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.textField,\n      required: true,\n      onChange: handleChange(\"email\"),\n      id: \"outlined-required\",\n      error: error.email ? true : false,\n      value: values.email,\n      helperText: error.email ? \"Invalid email\" : \"\",\n      label: \"Email address\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.fullWidth,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        error: error.password ? true : false,\n        htmlFor: \"outlined-adornment-password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"outlined-adornment-password\",\n        type: values.showPassword ? \"text\" : \"password\",\n        value: values.password,\n        onChange: handleChange(\"password\"),\n        error: error.password ? true : false,\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"toggle password visibility\",\n            onClick: handleClickShowPassword,\n            onMouseDown: handleMouseDownPassword,\n            edge: \"end\",\n            children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this),\n        labelWidth: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), error.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: true,\n      children: \"At least one uppercase letter, one lowercase letter and one number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.passwordHint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.fullWidth,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"outlined-adornment-password\",\n        children: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"outlined-adornment-password\",\n        type: \"password\",\n        error: error.confirmPassword ? true : false,\n        value: values.confirm,\n        onChange: handleChange(\"password\"),\n        labelWidth: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), error.confirmPassword && /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: true,\n      children: \"Both password must match.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.privatePolicy,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: values.checked,\n          onChange: handleCheckChange(\"checked\"),\n          inputProps: {\n            \"aria-label\": \"primary checkbox\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this),\n        label: \"I agree to the\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.policy,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          id: \"newaccount\",\n          className: classes.link,\n          href: \"#\",\n          children: [\" \", \"Privacy policy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.fullWidth,\n      onClick: () => {\n        HandleSubmitValidate();\n      },\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createLogin,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.width,\n        children: [\"Already have an account ?\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          id: \"newaccount\",\n          className: classes.link,\n          href: \"#\",\n          onClick: () => {\n            history.push(`${process.env.PUBLIC_URL}/user/login`);\n          },\n          children: [\" \", \"Sign in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"N1jRC0VR3d1rsQNjYEjo10vZ6ks=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default withStyles(LoginStyles)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Signup.jsx"],"names":["Grid","Typography","withStyles","Button","TextField","Link","InputLabel","OutlinedInput","IconButton","InputAdornment","FormControl","Checkbox","FormControlLabel","FormHelperText","Visibility","VisibilityOff","React","useState","LoginStyles","useHistory","SignUp","props","values","setValues","name","email","password","confirmPassword","error","setError","history","handleChange","prop","event","target","value","handleCheckChange","checked","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","handleSubmit","ValidateEmail","mail","test","HandleSubmitValidate","length","classes","loginGrid","body2","subText","textField","fullWidth","passwordHint","confirm","privatePolicy","policy","link","createLogin","width","push","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  withStyles,\n  Button,\n  TextField,\n  Link,\n  InputLabel,\n  OutlinedInput,\n  IconButton,\n  InputAdornment,\n  FormControl,\n  Checkbox,\n  FormControlLabel,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport {  useHistory } from \"react-router-dom\";\n\nconst SignUp = (props) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [error, setError] = useState({\n    name: false,\n    email: false,\n    password: false,\n    confirmPassword: false,\n  });\n  const history = useHistory();\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n    setError({ ...values, [prop]: false });\n  };\n\n  const handleCheckChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.checked });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = () =>{\n\n  }\n\n  const  ValidateEmail = (mail) => \n{\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\n  {\n    return (true)\n  }\n  else{\n    return false;\n  }  \n}\n\n  \n    const HandleSubmitValidate = () => {\n      debugger\n      if(!(/^[A-Za-z ]+$/.test(values.name))){\n        setError({...error, name:true})\n      }\n      else if(!ValidateEmail(values.email)){\n      setError({...error, email:true})\n      }\n      else if(!values.password.length>8){\n      setError({...error, password:true})\n      }\n      else if(values.password !== values.confirmPassword){\n      setError({...error, confirmPassword:true})\n      }\n      else{\n        handleSubmit()\n      }\n  \n  \n    }\n  \n  const { classes } = props;\n\n  return (\n    <Grid container className={classes.loginGrid}>\n      <Typography className={classes.body2}>Sign up to ULCA</Typography>\n      <Typography className={classes.subText}>\n        Please enter the details to create an account with ULCA\n      </Typography>\n      <TextField\n        className={classes.textField}\n        required\n        onChange={handleChange(\"name\")}\n        id=\"outlined-required\"\n        error  = {error.name ? true : false}\n        value={values.name}\n        label=\"Name\"\n        helperText = {error.name ? \"Name is not proper\" : \"\"}\n        variant=\"outlined\"\n      />\n      <TextField\n        className={classes.textField}\n        required\n        onChange={handleChange(\"email\")}\n        id=\"outlined-required\"\n        error  = {error.email ? true : false}\n        value={values.email}\n        helperText = {error.email ? \"Invalid email\" : \"\"}\n        label=\"Email address\"\n        variant=\"outlined\"\n      />\n      <FormControl className={classes.fullWidth} variant=\"outlined\">\n        <InputLabel error  = {error.password ? true : false} htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={values.showPassword ? \"text\" : \"password\"}\n          value={values.password}\n          onChange={handleChange(\"password\")}\n          error  = {error.password ? true :false }\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n          labelWidth={70}\n        />\n      </FormControl>\n      {error.password && <FormHelperText error={true}>At least one uppercase letter, one lowercase letter and one number</FormHelperText>}\n      <Typography className={classes.passwordHint}>\n        \n      </Typography>\n      <FormControl className={classes.fullWidth} variant=\"outlined\">\n        <InputLabel htmlFor=\"outlined-adornment-password\">\n          Confirm password\n        </InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={\"password\"}\n          error  = {error.confirmPassword ? true :false }\n          value={values.confirm}\n          onChange={handleChange(\"password\")}\n          labelWidth={70}\n        />\n      </FormControl>\n      {error.confirmPassword && <FormHelperText error={true}>Both password must match.</FormHelperText>}\n\n      <div className={classes.privatePolicy}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.checked}\n              onChange={handleCheckChange(\"checked\")}\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />\n          }\n          label=\"I agree to the\"\n        />\n        <Typography className={classes.policy}>\n          <Link id=\"newaccount\" className={classes.link} href=\"#\">\n            {\" \"}\n            Privacy policy\n          </Link>\n        </Typography>\n      </div>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.fullWidth}\n        onClick={() => {\n          HandleSubmitValidate();\n        }}\n      >\n        Sign up\n      </Button>\n      <div className={classes.createLogin}>\n        <Typography className={classes.width}>\n          Already have an account ?{\" \"}\n        </Typography>\n        <Typography>\n          <Link id=\"newaccount\" className={classes.link} href=\"#\"\n            onClick={() => { history.push(`${process.env.PUBLIC_URL}/user/login`)}}>\n            {\" \"}\n            Sign in\n          </Link>\n        </Typography>\n      </div>\n    </Grid>\n  );\n};\n\nexport default withStyles(LoginStyles)(SignUp);\n"]},"metadata":{},"sourceType":"module"}