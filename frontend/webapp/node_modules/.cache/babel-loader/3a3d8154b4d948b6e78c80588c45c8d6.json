{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Typography, withStyles, Button, TextField, Link, InputLabel, OutlinedInput, IconButton, InputAdornment, FormHelperText, FormControl, CircularProgress } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport LoginApi from \"../../../redux/actions/api/UserManagement/Login\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Snackbar from '../../components/common/Snackbar'; // import {useReducer, useSelector} from \"react-redux\";\n// import { LoginSocialFacebook, LoginSocialGithub } from \"reactjs-social-login\";\n// import { LinkedIn } from \"react-linkedin-login-oauth2\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    checked: false\n  });\n  const [error, setError] = useState({\n    email: false,\n    password: false\n  });\n  const [snackbar, setSnackbarInfo] = useState({\n    open: false,\n    message: '',\n    variant: 'success'\n  });\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = prop => event => {\n    setError({ ...error,\n      password: false,\n      email: false\n    });\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  }; // const handleCheckChange = (prop) => (event) => {\n  //   setValues({ ...values, [prop]: event.target.checked });\n  // };\n\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  }; // const ValidateEmail = (mail) => {\n  //   if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\n  //     return (true)\n  //   }\n  //   else {\n  //     return false;\n  //   }\n  // }\n  // const ValidatePassword = (password) => {\n  //   if (password.length > 7) {\n  //     return (true)\n  //   }\n  //   else {\n  //     return false;\n  //   }\n  // }\n\n\n  const handleSubmit = async () => {\n    let apiObj = new LoginApi(values);\n    var rsp_data = [];\n    fetch(apiObj.apiEndPoint(), {\n      method: 'post',\n      body: JSON.stringify(apiObj.getBody()),\n      headers: apiObj.getHeaders().headers\n    }).then(async response => {\n      rsp_data = await response.json();\n      setLoading(false);\n\n      if (!response.ok) {\n        return Promise.reject('');\n      } else {\n        localStorage.setItem(`userInfo`, JSON.stringify(rsp_data.data.userKeys));\n        localStorage.setItem(`userDetails`, JSON.stringify(rsp_data.data.userDetails));\n        history.push(`${process.env.PUBLIC_URL}${props.location.from ? props.location.from : '/dashboard'}`);\n      }\n    }).catch(error => {\n      setLoading(false);\n      setSnackbarInfo({ ...snackbar,\n        open: true,\n        message: rsp_data.message ? rsp_data.message : \"Invalid email / password\",\n        variant: 'error'\n      });\n    });\n  }; // const responseGoogle = (data) => {\n  //   alert(JSON.stringify(data));\n  // };\n\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar,\n      open: false\n    });\n  };\n\n  const HandleSubmitCheck = () => {\n    if (!values.email.trim() || !values.password.trim()) {\n      setError({ ...error,\n        email: !values.email.trim() ? true : false,\n        password: !values.password.trim() ? true : false\n      });\n    } else {\n      handleSubmit();\n      setLoading(true);\n    }\n  };\n\n  const {\n    classes\n  } = props; // const REDIRECT_URI = \"http://localhost:3000\";\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.loginGrid,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Sign in to ULCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textField,\n          required: true,\n          onChange: handleChange(\"email\"),\n          onKeyPress: e => e.key === 'Enter' && HandleSubmitCheck(),\n          id: \"outlined-required\",\n          value: values.email,\n          error: error.email,\n          label: \"Email address\",\n          helperText: error.email ? \"Enter an email\" : \" \",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.fullWidth,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            error: error.password,\n            htmlFor: \"outlined-adornment-password\",\n            children: \"Password * \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-password\",\n            type: values.showPassword ? \"text\" : \"password\",\n            value: values.password,\n            required: true,\n            error: error.password,\n            helperText: error.password ? \"Enter a password\" : \"\",\n            onChange: handleChange(\"password\"),\n            onKeyPress: e => e.key === 'Enter' && HandleSubmitCheck(),\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 44\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this),\n            labelWidth: 80\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), error.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: \"Incorrect password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"large\",\n          variant: \"contained\",\n          \"aria-label\": \"edit\",\n          className: classes.fullWidth,\n          onClick: () => {\n            HandleSubmitCheck();\n          },\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            className: classes.buttonProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), \"Sign In\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createLogin,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.width,\n          children: \"New to ULCA ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            id: \"newaccount\",\n            className: classes.link,\n            href: \"#\",\n            onClick: () => {\n              history.push(`${process.env.PUBLIC_URL}/user/register`);\n            },\n            children: [\" \", \"Create an account\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), snackbar.open && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      handleClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      message: snackbar.message,\n      variant: snackbar.variant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"0eCC/S1Vlw0XK7BEvpuZi3UCDzo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default withStyles(LoginStyles)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Login.jsx"],"names":["Grid","Typography","withStyles","Button","TextField","Link","InputLabel","OutlinedInput","IconButton","InputAdornment","FormHelperText","FormControl","CircularProgress","React","useState","LoginStyles","LoginApi","Visibility","VisibilityOff","useHistory","Snackbar","Login","props","values","setValues","email","password","checked","error","setError","snackbar","setSnackbarInfo","open","message","variant","history","loading","setLoading","handleChange","prop","event","target","value","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","handleSubmit","apiObj","rsp_data","fetch","apiEndPoint","method","body","JSON","stringify","getBody","headers","getHeaders","then","response","json","ok","Promise","reject","localStorage","setItem","data","userKeys","userDetails","push","process","env","PUBLIC_URL","location","from","catch","handleSnackbarClose","HandleSubmitCheck","trim","classes","loginGrid","root","textField","e","key","fullWidth","buttonProgress","createLogin","width","link","vertical","horizontal"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  withStyles,\n  Button,\n  TextField,\n  Link,\n  InputLabel,\n  OutlinedInput,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n  FormControl,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport LoginApi from \"../../../redux/actions/api/UserManagement/Login\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Snackbar from '../../components/common/Snackbar';\n// import {useReducer, useSelector} from \"react-redux\";\n// import { LoginSocialFacebook, LoginSocialGithub } from \"reactjs-social-login\";\n// import { LinkedIn } from \"react-linkedin-login-oauth2\";\n\n\nconst Login = (props) => {\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    checked: false,\n  });\n  const [error, setError] = useState({\n    email: false,\n    password: false,\n\n  });\n\n\n\n  const [snackbar, setSnackbarInfo] = useState({\n    open: false,\n    message: '',\n    variant: 'success'\n  })\n\n\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const handleChange = (prop) => (event) => {\n    setError({ ...error, password: false, email: false });\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  // const handleCheckChange = (prop) => (event) => {\n  //   setValues({ ...values, [prop]: event.target.checked });\n  // };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  // const ValidateEmail = (mail) => {\n  //   if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\n  //     return (true)\n  //   }\n  //   else {\n  //     return false;\n  //   }\n  // }\n\n  // const ValidatePassword = (password) => {\n  //   if (password.length > 7) {\n  //     return (true)\n  //   }\n  //   else {\n  //     return false;\n  //   }\n  // }\n\n\n  const handleSubmit = async () => {\n\n    let apiObj = new LoginApi(values)\n    var rsp_data = []\n    fetch(apiObj.apiEndPoint(), {\n      method: 'post',\n      body: JSON.stringify(apiObj.getBody()),\n      headers: apiObj.getHeaders().headers\n    }).then(async response => {\n      rsp_data = await response.json();\n      setLoading(false)\n      if (!response.ok) {\n\n        return Promise.reject('');\n      } else {\n        localStorage.setItem(`userInfo`, JSON.stringify(rsp_data.data.userKeys));\n        localStorage.setItem(`userDetails`, JSON.stringify(rsp_data.data.userDetails));\n\n        history.push(`${process.env.PUBLIC_URL}${props.location.from ? props.location.from : '/dashboard'}`)\n      }\n    }).catch((error) => {\n      setLoading(false)\n\n      setSnackbarInfo({\n        ...snackbar,\n        open: true,\n        message: rsp_data.message ? rsp_data.message : \"Invalid email / password\",\n        variant: 'error'\n      })\n    });\n\n  }\n\n  // const responseGoogle = (data) => {\n  //   alert(JSON.stringify(data));\n  // };\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar, open: false })\n  }\n\n  const HandleSubmitCheck = () => {\n    if (!values.email.trim() || !values.password.trim()) {\n\n      setError({ ...error, email: !values.email.trim() ? true : false, password: !values.password.trim() ? true : false });\n    }\n\n    else {\n      handleSubmit();\n      setLoading(true)\n    }\n\n  };\n  const { classes } = props;\n  // const REDIRECT_URI = \"http://localhost:3000\";\n\n  return (\n    <>\n      <Grid container className={classes.loginGrid}>\n        <Typography variant=\"h4\">Sign in to ULCA</Typography>\n        <form className={classes.root} autoComplete=\"off\">\n          <TextField\n            className={classes.textField}\n            required\n            onChange={handleChange(\"email\")}\n            onKeyPress={(e) => e.key === 'Enter' && HandleSubmitCheck()}\n            id=\"outlined-required\"\n            value={values.email}\n            error={error.email}\n            label=\"Email address\"\n            helperText={error.email ? \"Enter an email\" : \" \"}\n            variant=\"outlined\"\n          />\n          <FormControl className={classes.fullWidth} variant=\"outlined\">\n            <InputLabel error={error.password} htmlFor=\"outlined-adornment-password\">Password * </InputLabel>\n\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={values.showPassword ? \"text\" : \"password\"}\n              value={values.password}\n              required\n              error={error.password}\n              helperText={error.password ? \"Enter a password\" : \"\"}\n              onChange={handleChange(\"password\")}\n              onKeyPress={(e) => e.key === 'Enter' && HandleSubmitCheck()}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={80}\n            />\n            {error.password && <FormHelperText error={true}>Incorrect password</FormHelperText>}\n          </FormControl>\n          {/* <div className={classes.forgotPassword}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.checked}\n              onChange={handleCheckChange(\"checked\")}\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />\n          }\n          label=\"Keep me logged in \"\n        />\n        <Typography className={classes.forgoLink}>\n          <Link\n            id=\"newaccount\"\n            className={classes.link}\n            href=\"#\"\n            onClick={() => { history.push(`${process.env.PUBLIC_URL}/user/forgot-password`)}}\n          >\n            {\" \"}\n            Forgot Password?\n          </Link>\n        </Typography>\n      </div> */}\n\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            variant=\"contained\" aria-label=\"edit\" className={classes.fullWidth} onClick={() => {\n              HandleSubmitCheck();\n            }}\n            disabled={loading}>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            Sign In\n          </Button>\n          {/* <Button\n        \n        color=\"primary\"\n        size = \"large\"\n        className={classes.fullWidth}\n        onClick={() => {\n          HandleSubmitCheck();\n        }}\n      >\n        Sign in\n      </Button> */}\n        </form>\n        {/* <div className={classes.line}>\n        <Divider className={classes.dividerFullWidth} />{\" \"}\n        <Typography className={classes.divider}>Or</Typography>\n        <Divider className={classes.dividerFullWidth} />\n      </div>\n      <GoogleLogin\n        render={(renderProps) => (\n          <Button\n            variant=\"contained\"\n            className={classes.gmailStyle}\n            onClick={renderProps.onClick}\n          >\n            <span style={{ marginRight: \"30px\" }}>\n              <img\n                \n                src={GmailIcon}\n                alt=\"\"\n                width=\"25px\"\n                height=\"25px\"\n                style={{ maginLeft: \"20px\" }}\n              />\n            </span>\n            Continue with Google\n          </Button>\n        )}\n        clientId=\"1042231143652-m25ln3odich8tfi08ql2rlbj0h820g9v.apps.googleusercontent.com\"\n        buttonText=\"Continue with Google\"\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      /> */}\n        {/* <LinkedIn\n          clientId=\"7859u4ovb44uiu\"\n          onFailure={responseGoogle}\n          onSuccess={responseGoogle}\n          redirectUri=\"http://localhost:3000/\"\n          renderElement={({ onClick, disabled }) => (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.linkedStyle}\n            >\n              <span className={classes.width}>\n                <img\n                  src=\"linkedin.svg\"\n                  alt =''\n                  width=\"20px\"\n                  height=\"20px\"\n                  style={{ maginLeft: \"20px\" }}\n                />\n              </span>\n              Continue with LinkedIn\n            </Button>\n          )}\n        />\n        <LoginSocialFacebook\n          appId={\"813819182874104\"}\n          className={classes.labelWidth}\n          onResolve={({ data }) => {\n            alert(JSON.stringify(data));\n          }}\n          onReject={(err) => alert(err)}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.fullWidth}\n          >\n            <span className={classes.width}>\n              <img\n                src=\"facebook.svg\"\n                alt =''\n                width=\"20px\"\n                height=\"20px\"\n                style={{ maginLeft: \"20px\" }}\n              />\n            </span>\n            Continue with Facebook\n          </Button>\n        </LoginSocialFacebook> */}\n        {/* <LoginSocialGithub\n        client_id={\"fc66013ca8d2c0bcf178\"}\n        className={classes.labelWidth}\n        redirect={REDIRECT_URI}\n        onResolve={({ provider, data }) => {\n          alert(JSON.stringify(data));\n        }}\n        onReject={(err) => alert(err)}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.githubStyle}\n        >\n          <span className={classes.width}>\n            <img\n              src={GithubIcon}\n              alt=\"\"\n              width=\"25px\"\n              height=\"25px\"\n              style={{ maginLeft: \"20px\" }}\n            />\n          </span>\n          <span>Continue with Github</span>\n        </Button>\n      </LoginSocialGithub> */}\n        <div className={classes.createLogin}>\n          <Typography className={classes.width}>New to ULCA ?</Typography>\n          <Typography>\n            <Link id=\"newaccount\" className={classes.link} href=\"#\"\n              onClick={() => { history.push(`${process.env.PUBLIC_URL}/user/register`) }}>\n              {\" \"}\n              Create an account\n            </Link>\n          </Typography>\n        </div>\n\n      </Grid>\n      {snackbar.open &&\n        <Snackbar\n          open={snackbar.open}\n          handleClose={handleSnackbarClose}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          message={snackbar.message}\n          variant={snackbar.variant}\n        />}\n    </>\n  );\n};\n\nexport default withStyles(LoginStyles)(Login);\n"]},"metadata":{},"sourceType":"module"}