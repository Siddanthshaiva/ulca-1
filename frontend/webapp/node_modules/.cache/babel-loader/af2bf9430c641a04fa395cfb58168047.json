{"ast":null,"code":"import C from '../../../actions/constants';\nconst initialState = {\n  result: []\n};\n\nconst getSearchOptions = payload => {\n  return [{\n    \"languagePair\": {\n      \"sourceLang\": [],\n      \"targetLang\": []\n    },\n    \"scripts\": [\"Indus\", \"Brahmi\", \"Gupta\", \"Tamil\", \"Devanagari\"],\n    \"filterBy\": {\n      \"domain\": [],\n      \"source\": [],\n      \"collectionMethods\": []\n    }\n  }];\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case C.GET_SEARCH_OPTIONS:\n      return {\n        result: getSearchOptions(action.payload.responseData)\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/DataSet/DatasetSearch/SearchAndDownload.js"],"names":["C","initialState","result","getSearchOptions","payload","reducer","state","action","type","GET_SEARCH_OPTIONS","responseData"],"mappings":"AAAA,OAAOA,CAAP,MAAc,4BAAd;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;;AAIA,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;AAClC,SAAO,CACH;AACI,oBAAgB;AACZ,oBAAc,EADF;AAEZ,oBAAc;AAFF,KADpB;AAKI,eAAW,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,OAA7B,EAAsC,YAAtC,CALf;AAMI,gBAAY;AACR,gBAAU,EADF;AAER,gBAAU,EAFF;AAGR,2BAAqB;AAHb;AANhB,GADG,CAAP;AAeH,CAhBD;;AAkBA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,CAAC,CAACS,kBAAP;AACI,aAAO;AACHP,QAAAA,MAAM,EAAEC,gBAAgB,CAACI,MAAM,CAACH,OAAP,CAAeM,YAAhB;AADrB,OAAP;;AAGJ;AACI,aAAO,EACH,GAAGJ;AADA,OAAP;AANR;AAUH,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["import C from '../../../actions/constants';\n\nconst initialState = {\n    result: []\n}\n\nconst getSearchOptions = (payload) => {\n    return [\n        {\n            \"languagePair\": {\n                \"sourceLang\": [],\n                \"targetLang\": []\n            },\n            \"scripts\": [\"Indus\", \"Brahmi\", \"Gupta\", \"Tamil\", \"Devanagari\"],\n            \"filterBy\": {\n                \"domain\": [],\n                \"source\": [],\n                \"collectionMethods\": []\n            }\n        }\n\n    ]\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case C.GET_SEARCH_OPTIONS:\n            return {\n                result: getSearchOptions(action.payload.responseData)\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}