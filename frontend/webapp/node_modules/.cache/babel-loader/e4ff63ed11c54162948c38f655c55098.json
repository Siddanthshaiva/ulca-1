{"ast":null,"code":"import API from \"../../../api\";\nimport C from \"../../../constants\";\nimport ENDPOINTS from \"../../../../../configs/apiendpoints\";\nimport { sha256 } from 'js-sha256';\nexport default class MyCOntribution extends API {\n  constructor(user_id, timeout = 200000) {\n    super(\"GET\", timeout, false);\n    this.user_id = user_id;\n    this.type = C.GET_MY_REPORT;\n    this.endpoint = `${super.apiEndPointAuto()}${ENDPOINTS.mySearches}`;\n    let userInf = localStorage.getItem(\"userDetails\");\n    this.userId = JSON.parse(userInf).userID;\n    this.userDetails = JSON.parse(localStorage.getItem('userInfo'));\n  }\n\n  toString() {\n    return `${super.toString()} email: ${this.email} token: ${this.token} expires: ${this.expires} userid: ${this.userid}, type: ${this.type}`;\n  }\n\n  processResponse(res) {\n    super.processResponse(res);\n\n    if (res) {\n      this.report = res;\n    }\n  }\n\n  apiEndPoint() {\n    let url = `${this.endpoint}?userId=${this.userId}`;\n    return url;\n  }\n\n  getBody() {\n    return {};\n  }\n\n  getHeaders() {\n    this.headers = {\n      headers: {\n        \"key\": this.userDetails.publicKey,\n        \"sig\": sha256(this.userDetails.privateKey | sha256(this.apiEndPoint())),\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return this.headers;\n  }\n\n  getPayload() {\n    return this.report;\n  }\n\n}","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/actions/api/DataSet/DatasetSearch/MySearches.js"],"names":["API","C","ENDPOINTS","sha256","MyCOntribution","constructor","user_id","timeout","type","GET_MY_REPORT","endpoint","apiEndPointAuto","mySearches","userInf","localStorage","getItem","userId","JSON","parse","userID","userDetails","toString","email","token","expires","userid","processResponse","res","report","apiEndPoint","url","getBody","getHeaders","headers","publicKey","privateKey","getPayload"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,GAA7B,CAAiC;AAC5CK,EAAAA,WAAW,CAAEC,OAAF,EAAWC,OAAO,GAAG,MAArB,EAA6B;AACpC,UAAM,KAAN,EAAaA,OAAb,EAAsB,KAAtB;AACA,SAAKD,OAAL,GAAsBA,OAAtB;AACA,SAAKE,IAAL,GAAsBP,CAAC,CAACQ,aAAxB;AACA,SAAKC,QAAL,GAAuB,GAAE,MAAMC,eAAN,EAAwB,GAAET,SAAS,CAACU,UAAW,EAAxE;AACA,QAAIC,OAAO,GAAuBC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAlC;AACA,SAAKC,MAAL,GAA2BC,IAAI,CAACC,KAAL,CAAWL,OAAX,EAAoBM,MAA/C;AACA,SAAKC,WAAL,GAAmBH,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnB;AACH;;AAEDM,EAAAA,QAAQ,GAAG;AACP,WAAQ,GAAE,MAAMA,QAAN,EAAiB,WAAU,KAAKC,KAAM,WAAU,KAAKC,KAAM,aAAY,KAAKC,OAAQ,YAAW,KAAKC,MAAO,WAAU,KAAKjB,IAAK,EAAzI;AACH;;AAEDkB,EAAAA,eAAe,CAACC,GAAD,EAAM;AACjB,UAAMD,eAAN,CAAsBC,GAAtB;;AACA,QAAIA,GAAJ,EAAS;AACL,WAAKC,MAAL,GAAcD,GAAd;AACH;AACJ;;AAEDE,EAAAA,WAAW,GAAG;AAGV,QAAIC,GAAG,GAAI,GAAE,KAAKpB,QAAS,WAAU,KAAKM,MAAQ,EAAlD;AAEC,WAAOc,GAAP;AACJ;;AAEDC,EAAAA,OAAO,GAAG;AACN,WAAO,EAAP;AACH;;AAEDC,EAAAA,UAAU,GAAG;AACT,SAAKC,OAAL,GAAe;AACXA,MAAAA,OAAO,EAAE;AACL,eAAO,KAAKb,WAAL,CAAiBc,SADnB;AAEL,eAAS/B,MAAM,CAAC,KAAKiB,WAAL,CAAiBe,UAAjB,GAA4BhC,MAAM,CAAC,KAAK0B,WAAL,EAAD,CAAnC,CAFV;AAGL,wBAAgB;AAHX;AADE,KAAf;AAOA,WAAO,KAAKI,OAAZ;AACH;;AAEDG,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKR,MAAZ;AACH;;AA/C2C","sourcesContent":["import API from \"../../../api\";\nimport C from \"../../../constants\";\nimport ENDPOINTS from \"../../../../../configs/apiendpoints\";\nimport { sha256 } from 'js-sha256';\n\nexport default class MyCOntribution extends API {\n    constructor( user_id, timeout = 200000) {\n        super(\"GET\", timeout, false);\n        this.user_id        = user_id\n        this.type           = C.GET_MY_REPORT;\n        this.endpoint       = `${super.apiEndPointAuto()}${ENDPOINTS.mySearches}`;\n        let userInf                     = localStorage.getItem(\"userDetails\")\n        this.userId              = JSON.parse(userInf).userID;\n        this.userDetails = JSON.parse(localStorage.getItem('userInfo'))\n    }\n\n    toString() {\n        return `${super.toString()} email: ${this.email} token: ${this.token} expires: ${this.expires} userid: ${this.userid}, type: ${this.type}`;\n    }\n\n    processResponse(res) {\n        super.processResponse(res);\n        if (res) {\n            this.report = res;\n        }\n    }\n\n    apiEndPoint() {\n\n        \n        let url = `${this.endpoint}?userId=${this.userId }` \n        \n         return url;\n    }\n\n    getBody() {\n        return {};\n    }\n\n    getHeaders() {\n        this.headers = {\n            headers: {\n                \"key\" :this.userDetails.publicKey,\n                \"sig\"  : sha256(this.userDetails.privateKey|sha256(this.apiEndPoint())),\n                \"Content-Type\": \"application/json\"\n            }\n        };\n        return this.headers;\n    }\n\n    getPayload() {\n        return this.report;\n    }\n}"]},"metadata":{},"sourceType":"module"}