{"ast":null,"code":"import C from '../../../actions/constants';\nconst initialState = {\n  responseData: []\n};\n\ndetails: null;\n\nendTime: \"2021-06-11T14:31:13.176+00:00\";\n\nerror: null;\n\nlastModified: \"2021-06-11T14:31:13.176+00:00\";\n\nserviceRequestNumber: \"4f76b971-e8d1-4aae-8163-660487c1b513\";\n\nstartTime: null;\n\nstatus: \"successful\";\n\ntool: \"download\";\n\nconst getDetailedReport = payload => {\n  let responseData = [];\n  let refreshStatus = false;\n  payload.forEach(element => {\n    responseData.push({\n      srNo: element.serviceRequestNumber,\n      datasetId: element.datasetName,\n      recordCount: element.datasetName,\n      failedCount: element.datasetName,\n      stage: tool,\n      status: element.status\n    });\n\n    if (element.status === \"INPROGRESS\" || \"NOTSTARTED\") {\n      refreshStatus = true;\n    }\n  });\n  responseData = responseData.reverse();\n  return {\n    responseData,\n    refreshStatus\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case C.GET_DETAILED_REPORT:\n      return {\n        responseData: getDetailedReport(action.payload)\n      };\n\n    case C.CLEAR_USER_EVENT:\n      return { ...initialState\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/redux/reducers/DataSet/DatasetView/DetailedDataSet.js"],"names":["C","initialState","responseData","details","endTime","error","lastModified","serviceRequestNumber","startTime","status","tool","getDetailedReport","payload","refreshStatus","forEach","element","push","srNo","datasetId","datasetName","recordCount","failedCount","stage","reverse","reducer","state","action","type","GET_DETAILED_REPORT","CLEAR_USER_EVENT"],"mappings":"AAAA,OAAOA,CAAP,MAAc,4BAAd;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAGAC,OAAO,EAAE;;AACTC,OAAO,EAAE;;AACTC,KAAK,EAAE;;AACPC,YAAY,EAAE;;AACdC,oBAAoB,EAAE;;AACtBC,SAAS,EAAE;;AACXC,MAAM,EAAE;;AACRC,IAAI,EAAE;;AAGN,MAAMC,iBAAiB,GAAIC,OAAD,IAAa;AACnC,MAAIV,YAAY,GAAG,EAAnB;AACA,MAAIW,aAAa,GAAG,KAApB;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgBC,OAAO,IAAI;AACvBb,IAAAA,YAAY,CAACc,IAAb,CACI;AACIC,MAAAA,IAAI,EAAQF,OAAO,CAACR,oBADxB;AAESW,MAAAA,SAAS,EAAYH,OAAO,CAACI,WAFtC;AAGSC,MAAAA,WAAW,EAAWL,OAAO,CAACI,WAHvC;AAISE,MAAAA,WAAW,EAAYN,OAAO,CAACI,WAJxC;AAKSG,MAAAA,KAAK,EAAYZ,IAL1B;AAMSD,MAAAA,MAAM,EAAiBM,OAAO,CAACN;AANxC,KADJ;;AAUA,QAAGM,OAAO,CAACN,MAAR,KAAmB,YAAnB,IAAmC,YAAtC,EAAmD;AAC/CI,MAAAA,aAAa,GAAG,IAAhB;AACH;AACJ,GAdD;AAeAX,EAAAA,YAAY,GAAGA,YAAY,CAACqB,OAAb,EAAf;AACA,SAAO;AAACrB,IAAAA,YAAD;AAAgBW,IAAAA;AAAhB,GAAP;AACH,CApBD;;AAuBA,MAAMW,OAAO,GAAG,CAACC,KAAK,GAAGxB,YAAT,EAAuByB,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK3B,CAAC,CAAC4B,mBAAP;AACI,aAAO;AACH1B,QAAAA,YAAY,EAAES,iBAAiB,CAACe,MAAM,CAACd,OAAR;AAD5B,OAAP;;AAGJ,SAAKZ,CAAC,CAAC6B,gBAAP;AACI,aAAO,EACH,GAAG5B;AADA,OAAP;;AAGJ;AACI,aAAO,EACH,GAAGwB;AADA,OAAP;AAVR;AAcH,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["import C from '../../../actions/constants';\n\nconst initialState = {\n    responseData: []\n}\ndetails: null\nendTime: \"2021-06-11T14:31:13.176+00:00\"\nerror: null\nlastModified: \"2021-06-11T14:31:13.176+00:00\"\nserviceRequestNumber: \"4f76b971-e8d1-4aae-8163-660487c1b513\"\nstartTime: null\nstatus: \"successful\"\ntool: \"download\"\n\n\nconst getDetailedReport = (payload) => {\n    let responseData = [];\n    let refreshStatus = false;\n    payload.forEach(element => {\n        responseData.push(\n            {\n                srNo      : element.serviceRequestNumber,\n                     datasetId          : element.datasetName,\n                     recordCount         : element.datasetName,\n                     failedCount          : element.datasetName,\n                     stage          : tool,\n                     status               : element.status \n                    }\n        )\n        if(element.status === \"INPROGRESS\" || \"NOTSTARTED\"){\n            refreshStatus = true\n        }\n    }); \n    responseData = responseData.reverse()\n    return {responseData , refreshStatus};\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case C.GET_DETAILED_REPORT:\n            return {\n                responseData: getDetailedReport(action.payload)  \n            }\n        case C.CLEAR_USER_EVENT:\n            return {\n                ...initialState\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}