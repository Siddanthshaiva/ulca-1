{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Typography, withStyles, Button, TextField, Link, InputLabel, OutlinedInput, IconButton, InputAdornment, FormControl, Checkbox, FormControlLabel, FormHelperText } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport { useHistory } from \"react-router-dom\";\nimport RegisterApi from \"../../../redux/actions/api/UserManagement/Register\";\nimport Snackbar from '../../components/common/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    firstName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [error, setError] = useState({\n    firstName: false,\n    email: false,\n    password: false,\n    confirmPassword: false\n  });\n  const [loading, setLoading] = useState(false);\n  const [snackbar, setSnackbarInfo] = useState({\n    open: false,\n    message: '',\n    variant: 'success'\n  });\n  const history = useHistory();\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n    setError({ ...error,\n      [prop]: false\n    });\n  };\n\n  const handleCheckChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.checked\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar,\n      open: false\n    });\n  };\n\n  const handleSubmit = () => {\n    let apiObj = new RegisterApi(values);\n    var rsp_data = [];\n    fetch(apiObj.apiEndPoint(), {\n      method: 'post',\n      body: JSON.stringify(apiObj.getBody()),\n      headers: apiObj.getHeaders().headers\n    }).then(async response => {\n      rsp_data = await response.json();\n      debugger;\n      setLoading(false);\n\n      if (!response.ok) {\n        return Promise.reject('');\n      } else {\n        setSnackbarInfo({ ...snackbar,\n          open: true,\n          message: rsp_data.message ? rsp_data.message : \"Invalid email / password\",\n          variant: 'success'\n        });\n        history.push(`${process.env.PUBLIC_URL}/private-dashboard`);\n      }\n    }).catch(error => {\n      setLoading(false);\n      debugger;\n      setSnackbarInfo({ ...snackbar,\n        open: true,\n        message: rsp_data.message ? rsp_data.message : \"Invalid email / password\",\n        variant: 'error'\n      });\n    });\n  };\n\n  const ValidateEmail = mail => {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const HandleSubmitValidate = () => {\n    if (!/^[A-Za-z ]+$/.test(values.firstName)) {\n      setError({ ...error,\n        firstName: true\n      });\n    } else if (!ValidateEmail(values.email)) {\n      setError({ ...error,\n        email: true\n      });\n    } else if (!(values.password.length > 7)) {\n      setError({ ...error,\n        password: true\n      });\n    } else if (values.password !== values.confirmPassword) {\n      setError({ ...error,\n        confirmPassword: true\n      });\n    } else {\n      handleSubmit();\n      setLoading(true);\n    }\n  };\n\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.loginGrid,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.body2,\n      children: \"Sign up to ULCA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.subText,\n      children: \"Please enter the details to create an account with ULCA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.textField,\n      required: true,\n      onChange: handleChange(\"firstName\"),\n      id: \"outlined-required\",\n      error: error.firstName ? true : false,\n      value: values.firstName,\n      label: \"Name\",\n      helperText: error.firstName ? \"Name is not proper\" : \"\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.textField,\n      required: true,\n      onChange: handleChange(\"email\"),\n      id: \"outlined-required\",\n      error: error.email ? true : false,\n      value: values.email,\n      helperText: error.email ? \"Invalid email\" : \"\",\n      label: \"Email address\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.fullWidth,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        error: error.password ? true : false,\n        htmlFor: \"outlined-adornment-password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"outlined-adornment-password\",\n        type: values.showPassword ? \"text\" : \"password\",\n        value: values.password,\n        onChange: handleChange(\"password\"),\n        error: error.password ? true : false,\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"toggle password visibility\",\n            onClick: handleClickShowPassword,\n            onMouseDown: handleMouseDownPassword,\n            edge: \"end\",\n            children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this),\n        labelWidth: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), error.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: true,\n      children: \"Length should be 8 chanracters and at least one uppercase letter, one lowercase letter and one number \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.fullWidth,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"outlined-adornment-password\",\n        children: \"Confirm Password *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"outlined-adornment-password\",\n        type: \"password\",\n        error: error.confirmPassword ? true : false,\n        value: values.confirmPassword,\n        onChange: handleChange(\"confirmPassword\"),\n        labelWidth: 140\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), error.confirmPassword && /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: true,\n      children: \"Both password must match.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.fullWidth,\n      onClick: () => {\n        HandleSubmitValidate();\n      },\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createLogin,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.width,\n        children: [\"Already have an account ?\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          id: \"newaccount\",\n          className: classes.link,\n          href: \"#\",\n          onClick: () => {\n            history.push(`${process.env.PUBLIC_URL}/user/login`);\n          },\n          children: [\" \", \"Sign in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), snackbar.open && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      handleClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      message: snackbar.message,\n      variant: snackbar.variant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"0N4FEot+jHdTDpW4hP/BFNKFzTg=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default withStyles(LoginStyles)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/UserManagement/Signup.jsx"],"names":["Grid","Typography","withStyles","Button","TextField","Link","InputLabel","OutlinedInput","IconButton","InputAdornment","FormControl","Checkbox","FormControlLabel","FormHelperText","Visibility","VisibilityOff","React","useState","LoginStyles","useHistory","RegisterApi","Snackbar","SignUp","props","values","setValues","firstName","email","password","confirmPassword","error","setError","loading","setLoading","snackbar","setSnackbarInfo","open","message","variant","history","handleChange","prop","event","target","value","handleCheckChange","checked","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","handleSnackbarClose","handleSubmit","apiObj","rsp_data","fetch","apiEndPoint","method","body","JSON","stringify","getBody","headers","getHeaders","then","response","json","ok","Promise","reject","push","process","env","PUBLIC_URL","catch","ValidateEmail","mail","test","HandleSubmitValidate","length","classes","loginGrid","body2","subText","textField","fullWidth","createLogin","width","link","vertical","horizontal"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  withStyles,\n  Button,\n  TextField,\n  Link,\n  InputLabel,\n  OutlinedInput,\n  IconButton,\n  InputAdornment,\n  FormControl,\n  Checkbox,\n  FormControlLabel,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport LoginStyles from \"../../styles/Login\";\nimport {  useHistory } from \"react-router-dom\";\nimport RegisterApi from \"../../../redux/actions/api/UserManagement/Register\"\nimport Snackbar from '../../components/common/Snackbar';\n\nconst SignUp = (props) => {\n  const [values, setValues] = useState({\n    firstName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [error, setError] = useState({\n    firstName: false,\n    email: false,\n    password: false,\n    confirmPassword: false,\n  });\n  const [loading, setLoading] = useState(false);\n  const [snackbar, setSnackbarInfo] = useState({\n    open: false,\n    message: '',\n    variant: 'success'\n})\n  const history = useHistory();\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n    setError({ ...error, [prop]: false });\n  };\n\n  const handleCheckChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.checked });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarInfo({ ...snackbar, open: false })\n}\n\n  const handleSubmit = () =>{\n\n    let apiObj = new RegisterApi(values)\n    var rsp_data =[]\n      fetch(apiObj.apiEndPoint(), {\n        method: 'post',\n        body: JSON.stringify(apiObj.getBody()),\n        headers: apiObj.getHeaders().headers\n      }).then(async response => {\n        rsp_data = await response.json();\n        debugger\n        setLoading(false)\n        if (!response.ok) {\n          \n          return Promise.reject('');\n        } else {\n          setSnackbarInfo({\n            ...snackbar,\n            open: true,\n            message: rsp_data.message ? rsp_data.message : \"Invalid email / password\",\n            variant: 'success'\n        })\n          \n          history.push(`${process.env.PUBLIC_URL}/private-dashboard`)\n        }\n      }).catch((error) => {\n        setLoading(false)\n        debugger\n          setSnackbarInfo({\n                          ...snackbar,\n                          open: true,\n                          message: rsp_data.message ? rsp_data.message : \"Invalid email / password\",\n                          variant: 'error'\n                      })\n      });\n\n  }\n\n  const  ValidateEmail = (mail) => \n{\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\n  {\n    return (true)\n  }\n  else{\n    return false;\n  }  \n}\n\n  \n    const HandleSubmitValidate = () => {\n      if(!(/^[A-Za-z ]+$/.test(values.firstName))){\n        setError({...error, firstName:true})\n      }\n      else if(!ValidateEmail(values.email)){\n      setError({...error, email:true})\n      }\n      else if(!(values.password.length>7)){\n      setError({...error, password:true})\n      }\n      else if(values.password !== values.confirmPassword){\n      setError({...error, confirmPassword:true})\n      }\n      else{\n        handleSubmit()\n        setLoading(true);\n      }\n  \n  \n    }\n  \n  const { classes } = props;\n\n  return (\n    <Grid container className={classes.loginGrid}>\n      <Typography className={classes.body2}>Sign up to ULCA</Typography>\n      <Typography className={classes.subText}>\n        Please enter the details to create an account with ULCA\n      </Typography>\n      <TextField\n        className={classes.textField}\n        required\n        onChange={handleChange(\"firstName\")}\n        id=\"outlined-required\"\n        error  = {error.firstName ? true : false}\n        value={values.firstName}\n        label=\"Name\"\n        helperText = {error.firstName ? \"Name is not proper\" : \"\"}\n        variant=\"outlined\"\n      />\n      <TextField\n        className={classes.textField}\n        required\n        onChange={handleChange(\"email\")}\n        id=\"outlined-required\"\n        error  = {error.email ? true : false}\n        value={values.email}\n        helperText = {error.email ? \"Invalid email\" : \"\"}\n        label=\"Email address\"\n        variant=\"outlined\"\n      />\n      <FormControl className={classes.fullWidth} variant=\"outlined\">\n        <InputLabel error  = {error.password ? true : false} htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={values.showPassword ? \"text\" : \"password\"}\n          value={values.password}\n          onChange={handleChange(\"password\")}\n          error  = {error.password ? true :false }\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n          labelWidth={70}\n        />\n      </FormControl>\n      {error.password && <FormHelperText error={true}>Length should be 8 chanracters and at least one uppercase letter, one lowercase letter and one number </FormHelperText>}\n\n      <FormControl className={classes.fullWidth} variant=\"outlined\">\n        <InputLabel htmlFor=\"outlined-adornment-password\">\n          Confirm Password *\n        </InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={\"password\"}\n          error  = {error.confirmPassword ? true :false }\n          value={values.confirmPassword}\n          onChange={handleChange(\"confirmPassword\")}\n          labelWidth={140}\n        />\n      </FormControl>\n      {error.confirmPassword && <FormHelperText error={true}>Both password must match.</FormHelperText>}\n\n      {/* <div className={classes.privatePolicy}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.checked}\n              onChange={handleCheckChange(\"checked\")}\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />\n          }\n          label=\"I agree to the\"\n        />\n        <Typography className={classes.policy}>\n          <Link id=\"newaccount\" className={classes.link} href=\"#\">\n            {\" \"}\n            Privacy policy\n          </Link>\n        </Typography>\n      </div> */}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.fullWidth}\n        onClick={() => {\n          HandleSubmitValidate();\n        }}\n      >\n        Sign up\n      </Button>\n      <div className={classes.createLogin}>\n        <Typography className={classes.width}>\n          Already have an account ?{\" \"}\n        </Typography>\n        <Typography>\n          <Link id=\"newaccount\" className={classes.link} href=\"#\"\n            onClick={() => { history.push(`${process.env.PUBLIC_URL}/user/login`)}}>\n            {\" \"}\n            Sign in\n          </Link>\n        </Typography>\n      </div>\n      {snackbar.open &&\n      <Snackbar\n          open={snackbar.open}\n          handleClose={handleSnackbarClose}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          message={snackbar.message}\n          variant={snackbar.variant}\n      />}\n    </Grid>\n  );\n};\n\nexport default withStyles(LoginStyles)(SignUp);\n"]},"metadata":{},"sourceType":"module"}