{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/DetailedStatus.jsx\",\n    _s = $RefreshSig$();\n\nimport { withStyles, MuiThemeProvider, createMuiTheme, Button, Typography } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect } from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport DetailedDatasetStatus from \"../../../../redux/actions/api/DataSet/DatasetView/DetailedDataset\";\nimport ErrorFileDownload from \"../../../../redux/actions/api/DataSet/DatasetView/ErrorDownload\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Cached, SaveAlt } from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailedStatus = props => {\n  _s();\n\n  const {\n    detailedReport,\n    errorData\n  } = useSelector(state => state);\n  console.log(detailedReport, errorData);\n  const dispatch = useDispatch();\n  const {\n    status,\n    name,\n    id\n  } = useParams();\n  useEffect(() => {\n    DetailedDataSetStatusApi();\n  }, []);\n\n  const DetailedDataSetStatusApi = () => {\n    const userObj = new DetailedDatasetStatus(id);\n    const userId = new ErrorFileDownload(id);\n    dispatch(APITransport(userObj));\n    dispatch(APITransport(userId));\n  };\n\n  const handleDownload = () => {};\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MuiTableCell: {\n        head: {\n          backgroundColor: \"#c7c6c68a !important\"\n        }\n      },\n      MUIDataTableBodyCell: {\n        root: {\n          textTransform: \"capitalize\"\n        }\n      },\n      MuiToolbar: {\n        root: {\n          display: \"none\"\n        }\n      },\n      MuiPaper: {\n        root: {\n          boxShadow: 'none !important',\n          borderRadius: 0,\n          border: \"1px solid rgb(224 224 224)\"\n        }\n      }\n    }\n  });\n\n  const fetchHeaderButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerButtons,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }, this), (status !== \"published\" || errorData.status !== \"successful\") && /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"medium\",\n        className: classes.ButtonRefresh,\n        variant: \"outlined\",\n        onClick: () => DetailedDataSetStatusApi(),\n        children: [/*#__PURE__*/_jsxDEV(Cached, {\n          className: classes.iconStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 237\n        }, this), \"Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 97\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        href: errorData.file,\n        target: \"_self\",\n        size: \"medium\",\n        variant: \"outlined\",\n        disabled: status === \"published\" || errorData.status === \"successful\" ? false : true,\n        className: !(status !== \"published\" || errorData.status !== \"successful\") ? classes.ButtonRefresh : classes.buttonStyle,\n        onClick: () => handleDownload(),\n        children: [/*#__PURE__*/_jsxDEV(SaveAlt, {\n          className: classes.iconStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 364\n        }, this), \"Error Logs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this);\n  };\n\n  const handleAbort = () => {\n    alert(\"Still in progress\");\n  };\n\n  const columns = [{\n    name: \"srNo\",\n    label: \"s id\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"datasetId\",\n    label: \"Dataset ID\",\n    options: {\n      filter: false,\n      sort: false,\n      display: \"excluded\"\n    }\n  }, {\n    name: \"stage\",\n    label: \"Stage\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"status\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"recordCount\",\n    label: \"Record Count\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }, {\n    name: \"failedCount\",\n    label: \"Failed Count\",\n    options: {\n      filter: false,\n      sort: false\n    }\n  }];\n  const options = {\n    textLabels: {\n      body: {},\n      toolbar: {\n        search: \"Search\",\n        viewColumns: \"View Column\"\n      },\n      pagination: {\n        rowsPerPage: \"Rows per page\"\n      },\n      options: {\n        sortDirection: \"desc\"\n      }\n    },\n    displaySelectToolbar: false,\n    fixedHeader: false,\n    filterType: \"checkbox\",\n    download: false,\n    print: false,\n    filter: false,\n    selectableRows: \"none\"\n  };\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.divStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.breadcrum,\n      children: /*#__PURE__*/_jsxDEV(BreadCrum, {\n        links: [UrlConfig.dataset, UrlConfig.myContribution],\n        activeLink: \"Dataset details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerButtons,\n      children: fetchHeaderButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: getMuiTheme(),\n      children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: `My Contribution`,\n        data: detailedReport.responseData,\n        columns: columns,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }, this), status !== \"published\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.footerButtons,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"medium\",\n        variant: \"outlined\",\n        className: classes.backButton,\n        onClick: () => this.handleAbort(),\n        children: \"Abort Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 17\n  }, this);\n};\n\n_s(DetailedStatus, \"6BIa5NkfARAkYXAN8QfdYW1ExtE=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n\n_c = DetailedStatus;\nexport default withStyles(DataSet)(DetailedStatus);\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedStatus\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/DetailedStatus.jsx"],"names":["withStyles","MuiThemeProvider","createMuiTheme","Button","Typography","BreadCrum","React","useEffect","DataSet","APITransport","MUIDataTable","DetailedDatasetStatus","ErrorFileDownload","useDispatch","useSelector","Cached","SaveAlt","UrlConfig","useParams","DetailedStatus","props","detailedReport","errorData","state","console","log","dispatch","status","name","id","DetailedDataSetStatusApi","userObj","userId","handleDownload","getMuiTheme","overrides","MuiTableCell","head","backgroundColor","MUIDataTableBodyCell","root","textTransform","MuiToolbar","display","MuiPaper","boxShadow","borderRadius","border","fetchHeaderButton","classes","headerButtons","ButtonRefresh","iconStyle","file","buttonStyle","handleAbort","alert","columns","label","options","filter","sort","textLabels","body","toolbar","search","viewColumns","pagination","rowsPerPage","sortDirection","displaySelectToolbar","fixedHeader","filterType","download","print","selectableRows","divStyle","breadcrum","dataset","myContribution","responseData","footerButtons","backButton"],"mappings":";;;AAAA,SAASA,UAAT,EAAsBC,gBAAtB,EAAwCC,cAAxC,EAAwDC,MAAxD,EAAgEC,UAAhE,QAAkF,mBAAlF;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,qDAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,qBAAP,MAAkC,mEAAlC;AACA,OAAOC,iBAAP,MAA8B,iEAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,MAAR,EAAgBC,OAAhB,QAA8B,oBAA9B;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM;AAACC,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAA4CR,WAAW,CAAES,KAAD,IAAWA,KAAZ,CAA7D;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ,EAA4BC,SAA5B;AACA,QAAMI,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAACc,IAAAA,MAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAAoBX,SAAS,EAAnC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AAEPuB,IAAAA,wBAAwB;AAEhC,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMA,wBAAwB,GAAI,MAAK;AAC/B,UAAMC,OAAO,GAAa,IAAIpB,qBAAJ,CAA0BkB,EAA1B,CAA1B;AACA,UAAMG,MAAM,GAAa,IAAIpB,iBAAJ,CAAsBiB,EAAtB,CAAzB;AACAH,IAAAA,QAAQ,CAACjB,YAAY,CAACsB,OAAD,CAAb,CAAR;AACAL,IAAAA,QAAQ,CAACjB,YAAY,CAACuB,MAAD,CAAb,CAAR;AACP,GALD;;AAOA,QAAMC,cAAc,GAAG,MAAK,CAI3B,CAJD;;AAOA,QAAMC,WAAW,GAAG,MAAMhC,cAAc,CAAC;AACjCiC,IAAAA,SAAS,EAAE;AACHC,MAAAA,YAAY,EAAE;AACNC,QAAAA,IAAI,EAAM;AACFC,UAAAA,eAAe,EAAG;AADhB;AADJ,OADX;AAMHC,MAAAA,oBAAoB,EAAC;AAACC,QAAAA,IAAI,EAAG;AAACC,UAAAA,aAAa,EAAE;AAAhB;AAAR,OANlB;AAOHC,MAAAA,UAAU,EAAE;AACHF,QAAAA,IAAI,EAAE;AACEG,UAAAA,OAAO,EAAE;AADX;AADH,OAPT;AAYHC,MAAAA,QAAQ,EAAE;AACFJ,QAAAA,IAAI,EAAC;AACGK,UAAAA,SAAS,EAAS,iBADrB;AAEGC,UAAAA,YAAY,EAAM,CAFrB;AAGGC,UAAAA,MAAM,EAAY;AAHrB;AADH;AAZP;AADsB,GAAD,CAAxC;;AAyBA,QAAMC,iBAAiB,GAAE,MAAM;AACvB,wBACQ;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACC,aAAxB;AAAA,8BACQ,QAAC,UAAD;AAAa,QAAA,OAAO,EAAC,IAArB;AAAA,kBAA4BtB;AAA5B;AAAA;AAAA;AAAA;AAAA,cADR,EAES,CAACD,MAAM,KAAK,WAAX,IAA0BL,SAAS,CAACK,MAAV,KAAmB,YAA9C,kBAA+D,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,SAAf;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAyC,QAAA,SAAS,EAAIsB,OAAO,CAACE,aAA9D;AAA6E,QAAA,OAAO,EAAC,UAArF;AAAiG,QAAA,OAAO,EAAE,MAAMrB,wBAAwB,EAAxI;AAAA,gCAA4I,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAGmB,OAAO,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAA5I;AAAA;AAAA;AAAA;AAAA;AAAA,cAFxE,eAGQ,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,SAAf;AAA0B,QAAA,IAAI,EAAE9B,SAAS,CAAC+B,IAA1C;AAAgD,QAAA,MAAM,EAAC,OAAvD;AAA+D,QAAA,IAAI,EAAC,QAApE;AAA6E,QAAA,OAAO,EAAC,UAArF;AAAgG,QAAA,QAAQ,EAAG1B,MAAM,KAAK,WAAX,IAA0BL,SAAS,CAACK,MAAV,KAAmB,YAA9C,GAA6D,KAA7D,GAAmE,IAA7K;AAAmL,QAAA,SAAS,EAAE,EAAEA,MAAM,KAAK,WAAX,IAA0BL,SAAS,CAACK,MAAV,KAAmB,YAA/C,IAA8DsB,OAAO,CAACE,aAAtE,GAAsFF,OAAO,CAACK,WAA5R;AAA0S,QAAA,OAAO,EAAE,MAAMrB,cAAc,EAAvU;AAAA,gCAA2U,QAAC,OAAD;AAAS,UAAA,SAAS,EAAGgB,OAAO,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAA3U;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAQP,GATD;;AAWA,QAAMG,WAAW,GAAG,MAAO;AACnBC,IAAAA,KAAK,CAAE,mBAAF,CAAL;AACP,GAFD;;AAKA,QAAMC,OAAO,GAAG,CACR;AACQ7B,IAAAA,IAAI,EAAM,MADlB;AAEQ8B,IAAAA,KAAK,EAAK,MAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM,KAFR;AAGFlB,MAAAA,OAAO,EAAG;AAHR;AAHlB,GADQ,EASN;AACMf,IAAAA,IAAI,EAAM,WADhB;AAEM8B,IAAAA,KAAK,EAAK,YAFhB;AAGMC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM,KAFR;AAGFlB,MAAAA,OAAO,EAAG;AAHR;AAHhB,GATM,EAkBR;AACQf,IAAAA,IAAI,EAAM,OADlB;AAEQ8B,IAAAA,KAAK,EAAK,OAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM;AAFR;AAHlB,GAlBQ,EA0BR;AACQjC,IAAAA,IAAI,EAAM,QADlB;AAEQ8B,IAAAA,KAAK,EAAK,QAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM;AAFR;AAHlB,GA1BQ,EAkCR;AACQjC,IAAAA,IAAI,EAAM,aADlB;AAEQ8B,IAAAA,KAAK,EAAK,cAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM;AAFR;AAHlB,GAlCQ,EA2CR;AACQjC,IAAAA,IAAI,EAAM,aADlB;AAEQ8B,IAAAA,KAAK,EAAK,cAFlB;AAGQC,IAAAA,OAAO,EAAG;AACFC,MAAAA,MAAM,EAAI,KADR;AAEFC,MAAAA,IAAI,EAAM;AAFR;AAHlB,GA3CQ,CAAhB;AAuDA,QAAMF,OAAO,GAAG;AACRG,IAAAA,UAAU,EAAsB;AACxBC,MAAAA,IAAI,EAAoB,EADA;AAExBC,MAAAA,OAAO,EAAiB;AAChBC,QAAAA,MAAM,EAAY,QADF;AAEhBC,QAAAA,WAAW,EAAO;AAFF,OAFA;AAMxBC,MAAAA,UAAU,EAAc;AAAEC,QAAAA,WAAW,EAAO;AAApB,OANA;AAOxBT,MAAAA,OAAO,EAAiB;AAAEU,QAAAA,aAAa,EAAK;AAApB;AAPA,KADxB;AAURC,IAAAA,oBAAoB,EAAY,KAVxB;AAWRC,IAAAA,WAAW,EAAqB,KAXxB;AAYRC,IAAAA,UAAU,EAAsB,UAZxB;AAaRC,IAAAA,QAAQ,EAAwB,KAbxB;AAcRC,IAAAA,KAAK,EAA2B,KAdxB;AAeRd,IAAAA,MAAM,EAA0B,KAfxB;AAgBRe,IAAAA,cAAc,EAAkB;AAhBxB,GAAhB;AAmBA,QAAM;AAAE1B,IAAAA;AAAF,MAA4B7B,KAAlC;AACA,sBACQ;AAAK,IAAA,SAAS,EAAW6B,OAAO,CAAC2B,QAAjC;AAAA,4BACQ;AAAK,MAAA,SAAS,EAAK3B,OAAO,CAAC4B,SAA3B;AAAA,6BACQ,QAAC,SAAD;AAAW,QAAA,KAAK,EAAI,CAAC5D,SAAS,CAAC6D,OAAX,EAAmB7D,SAAS,CAAC8D,cAA7B,CAApB;AAAkE,QAAA,UAAU,EAAG;AAA/E;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YADR,eAIQ;AAAK,MAAA,SAAS,EAAI9B,OAAO,CAACC,aAA1B;AAAA,gBACSF,iBAAiB;AAD1B;AAAA;AAAA;AAAA;AAAA,YAJR,eAOQ,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAId,WAAW,EAAtC;AAAA,6BACQ,QAAC,YAAD;AACQ,QAAA,KAAK,EAAa,iBAD1B;AAEQ,QAAA,IAAI,EAAab,cAAc,CAAC2D,YAFxC;AAGQ,QAAA,OAAO,EAAkBvB,OAHjC;AAIQ,QAAA,OAAO,EAAGE;AAJlB;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAPR,EAeShC,MAAM,KAAK,WAAX,iBAA0B;AAAK,MAAA,SAAS,EAAIsB,OAAO,CAACgC,aAA1B;AAAA,6BACnB,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAI,SAAjB;AAA6B,QAAA,IAAI,EAAG,QAApC;AAA6C,QAAA,OAAO,EAAG,UAAvD;AAAkE,QAAA,SAAS,EAAIhC,OAAO,CAACiC,UAAvF;AAAmG,QAAA,OAAO,EAAI,MAAM,KAAK3B,WAAL,EAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADmB;AAAA;AAAA;AAAA;AAAA,YAfnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAsBP,CAtKD;;GAAMpC,c;UAEoDL,W,EAGjCD,W,EACSK,S;;;KAN5BC,c;AAwKN,eAAenB,UAAU,CAACQ,OAAD,CAAV,CAAoBW,cAApB,CAAf","sourcesContent":["import { withStyles,  MuiThemeProvider, createMuiTheme, Button, Typography } from \"@material-ui/core\";\nimport BreadCrum from '../../../components/common/Breadcrum';\nimport React, { useEffect} from \"react\";\nimport DataSet from \"../../../styles/Dataset\";\nimport APITransport from \"../../../../redux/actions/apitransport/apitransport\";\nimport MUIDataTable from \"mui-datatables\";\nimport DetailedDatasetStatus from \"../../../../redux/actions/api/DataSet/DatasetView/DetailedDataset\";\nimport ErrorFileDownload from \"../../../../redux/actions/api/DataSet/DatasetView/ErrorDownload\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Cached, SaveAlt} from '@material-ui/icons';\nimport UrlConfig from '../../../../configs/internalurlmapping';\nimport { useParams } from \"react-router\";\n\nconst DetailedStatus = (props) => {\n\n        const {detailedReport, errorData}         =       useSelector((state) => state);\n\n        console.log(detailedReport, errorData)\n        const dispatch = useDispatch();\n        const {status,name, id} = useParams();\n\n        useEffect(() => {\n                \n                 DetailedDataSetStatusApi()\n                 \n        }, []);\n\n        const DetailedDataSetStatusApi  = () =>{\n                const userObj           = new DetailedDatasetStatus(id);\n                const userId           = new ErrorFileDownload(id);\n                dispatch(APITransport(userObj));\n                dispatch(APITransport(userId));\n        }\n\n        const handleDownload = () =>{\n\n                \n                \n        }\n        \n\n        const getMuiTheme = () => createMuiTheme({\n                overrides: {\n                        MuiTableCell: {\n                                head    : {\n                                        backgroundColor : \"#c7c6c68a !important\",\n                                }\n                        },\n                        MUIDataTableBodyCell:{root : {textTransform: \"capitalize\"}},\n                        MuiToolbar: {\n                                 root: { \n                                         display: \"none\" \n                                        } \n                                },\n                        MuiPaper: {\n                                root:{\n                                        boxShadow       : 'none !important',\n                                        borderRadius    : 0,\n                                        border          : \"1px solid rgb(224 224 224)\"\n                                }\n                        }\n                },\n        \n        });\n\n\n        const fetchHeaderButton= () => {\n                return (\n                        <div className={classes.headerButtons}>\n                                <Typography  variant=\"h5\" >{name}</Typography>\n                                {(status !== \"published\" || errorData.status!==\"successful\") && <Button color={\"primary\" } size=\"medium\" className = {classes.ButtonRefresh} variant=\"outlined\"  onClick={() => DetailedDataSetStatusApi()}><Cached className ={classes.iconStyle}/>Refresh</Button>}\n                                <Button color={\"primary\"} href={errorData.file} target=\"_self\" size=\"medium\" variant=\"outlined\" disabled={(status === \"published\" || errorData.status===\"successful\")? false:true} className={!(status !== \"published\" || errorData.status!==\"successful\")? classes.ButtonRefresh : classes.buttonStyle } onClick={() => handleDownload()}><SaveAlt className ={classes.iconStyle}/>Error Logs</Button>\n                        \n                        </div>\n                );\n        }\n\n        const handleAbort = ()  => {\n                alert (\"Still in progress\")\n        }\n\n        \n        const columns = [\n                {\n                        name    : \"srNo\",\n                        label   : \"s id\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                display : \"excluded\",\n                        },\n                },{\n                        name    : \"datasetId\",\n                        label   : \"Dataset ID\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                display : \"excluded\",\n                        },\n                },\n                {\n                        name    : \"stage\",\n                        label   : \"Stage\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },\n                {\n                        name    : \"status\",\n                        label   : \"Status\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                        },\n                },\n                {\n                        name    : \"recordCount\",\n                        label   : \"Record Count\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                \n                        },\n                },\n                {\n                        name    : \"failedCount\",\n                        label   : \"Failed Count\",\n                        options : {\n                                filter  : false,\n                                sort    : false,\n                                \n                        },\n                }\n        \n        ];\n\n        const options = {\n                textLabels              :       {\n                        body            :       {},\n                        toolbar         :       {\n                                search          : \"Search\",\n                                viewColumns     : \"View Column\",\n                        },\n                        pagination      :       { rowsPerPage     : \"Rows per page\"},\n                        options         :       { sortDirection   : \"desc\" },\n                },\n                displaySelectToolbar    :       false,\n                fixedHeader             :       false,\n                filterType              :       \"checkbox\",\n                download                :       false,\n                print                   :       false,\n                filter                  :       false,\n                selectableRows          :       \"none\",\n        };\n\n        const { classes }               = props;\n        return (\n                <div className  =       {classes.divStyle}>\n                        <div className  = {classes.breadcrum}>\n                                <BreadCrum links = {[UrlConfig.dataset,UrlConfig.myContribution]} activeLink = \"Dataset details\" />\n                        </div>\n                        <div className = {classes.headerButtons}>\n                                {fetchHeaderButton()} \n                        </div>\n                        <MuiThemeProvider theme = {getMuiTheme()}>  \n                                <MUIDataTable\n                                        title   =       {`My Contribution`}\n                                        data    =       {detailedReport.responseData}\n                                        columns =               {columns}\n                                        options ={options}\n                                />\n                        </MuiThemeProvider>\n                        {status !== \"published\" && <div className = {classes.footerButtons}>\n                                <Button color = {\"primary\" } size = \"medium\" variant = \"outlined\" className = {classes.backButton} onClick = {() => this.handleAbort()}>Abort Process</Button>\n                                \n                        </div>}\n                </div>\n        );\n};\n\nexport default withStyles(DataSet)(DetailedStatus);\n"]},"metadata":{},"sourceType":"module"}