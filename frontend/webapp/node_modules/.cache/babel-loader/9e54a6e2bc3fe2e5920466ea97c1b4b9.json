{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChartStyles from \"../../../styles/web/chartStyles\";\nimport { ResponsiveContainer, BarChart, Bar, Brush, Cell, CartesianGrid, ReferenceLine, ReferenceArea, XAxis, YAxis, Tooltip, Legend, ErrorBar, LabelList, Rectangle } from 'recharts';\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\nimport ChartRenderHeader from \"./ChartRenderHeader\";\nimport Container from '@material-ui/core/Container';\nimport { isMobile } from 'react-device-detect';\nimport Button from '@material-ui/core/Button';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar jp = require('jsonpath');\n\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"];\n\nconst ChartRender = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const myContributionReport = useSelector(state => state.myContributionReport);\n  useEffect(() => {\n    const userObj = new FetchLanguageDataSets(\"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n    dispatch(APITransport(userObj));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cardHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cardHeaderContainer,\n            children: (this.state.cardNavigation || this.state.currentPage !== 0) && this.state.dataSetValues.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"light\",\n                size: \"medium\",\n                variant: \"contained\",\n                className: classes.backButton,\n                startIcon: /*#__PURE__*/_jsxDEV(BackIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 139\n                }, this),\n                onClick: () => this.handleCardNavigation(),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.seperator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            value: \"\",\n            variant: \"h6\",\n            children: this.state.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.langPairButtons,\n        children: this.state.currentPage === 1 && this.fetchLanuagePairButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"95%\",\n          height: 450,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 900,\n            height: 450,\n            data: this.state.dataSetValues,\n            maxBarSize: 100,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"label\",\n              textAnchor: isMobile ? \"end\" : \"middle\",\n              tick: {\n                angle: isMobile ? -60 : 0\n              },\n              height: isMobile ? 100 : 60,\n              interval: 0,\n              position: \"insideLeft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dx: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              horizontal: true,\n              vertical: false,\n              textAnchor: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"value\",\n              radius: [4, 4, 0, 0],\n              maxBarSize: 30,\n              onClick: event => {\n                this.handleOnClick(this.state.currentPage + 1, event);\n              },\n              className: this.state.currentPage !== 2 && classes.cursor,\n              children: this.state.dataSetValues.length > 0 && this.state.dataSetValues.map((entry, index) => {\n                const color = colors[index < 9 ? index : index % 10];\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: `#${color}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 56\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ChartRender, \"JPYArIHHRuCZQsVWmYQ6PZ/FaFA=\", true);\n\n_c = ChartRender;\nexport default withStyles(ChartStyles)(ChartRender);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartRender\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/Dashboard/ChartRender.jsx"],"names":["React","withStyles","Paper","Typography","ChartStyles","ResponsiveContainer","BarChart","Bar","Brush","Cell","CartesianGrid","ReferenceLine","ReferenceArea","XAxis","YAxis","Tooltip","Legend","ErrorBar","LabelList","Rectangle","APITransport","FetchLanguageDataSets","ChartRenderHeader","Container","isMobile","Button","BackIcon","jp","require","colors","ChartRender","props","history","useHistory","dispatch","useDispatch","myContributionReport","useSelector","state","useEffect","userObj","classes","container","card","cardHeader","cardHeaderContainer","cardNavigation","currentPage","dataSetValues","length","backButton","handleCardNavigation","seperator","title","langPairButtons","fetchLanuagePairButtons","paper","angle","event","handleOnClick","cursor","map","entry","index","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChartStyles from \"../../../styles/web/chartStyles\";\nimport {\n    ResponsiveContainer,\n    BarChart, Bar, Brush, Cell, CartesianGrid, ReferenceLine, ReferenceArea,\n    XAxis, YAxis, Tooltip, Legend, ErrorBar, LabelList, Rectangle\n} from 'recharts';\n\nimport APITransport from \"../../../redux/actions/apitransport/apitransport\";\nimport FetchLanguageDataSets from \"../../../redux/actions/api/Dashboard/languageDatasets\";\nimport ChartRenderHeader from \"./ChartRenderHeader\"\nimport Container from '@material-ui/core/Container';\nimport { isMobile } from 'react-device-detect';\nimport Button from '@material-ui/core/Button';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nvar jp = require('jsonpath')\nvar colors = [\"188efc\", \"7a47a4\", \"b93e94\", \"1fc6a4\", \"f46154\", \"d088fd\", \"f3447d\", \"188efc\", \"f48734\", \"189ac9\", \"0e67bd\"]\n\n\nconst ChartRender = (props) => {\n\n        const history                 = useHistory();\n        const dispatch                = useDispatch();\n        const myContributionReport    = useSelector( (state) => state.myContributionReport);\n        \n        useEffect(()                  => {\n                const userObj         = new FetchLanguageDataSets( \"SAVE\", \"A_FBTTR-VWSge-1619075981554\", \"241006445d1546dbb5db836c498be6381606221196566\");\n                 dispatch(APITransport(userObj));\n        }, []);\n\n    return (\n\n                <Container className={classes.container}>\n\n                    <div className={classes.card}>\n                        <div className={classes.cardHeader}>\n                            <div>\n                                \n                                    <div className={classes.cardHeaderContainer}>\n                                    {(this.state.cardNavigation || this.state.currentPage !== 0) && this.state.dataSetValues.length > 0 &&\n                                    <>\n                                        <Button color=\"light\" size=\"medium\" variant=\"contained\" className={classes.backButton} startIcon={<BackIcon />} onClick={() => this.handleCardNavigation()}>Back</Button>\n                                    \n                                        <div className={classes.seperator}></div>\n                                        </>\n                                    }\n                                    </div>\n                                \n                            </div>\n\n                            <div className={classes.title}>\n                                <Typography value=\"\" variant=\"h6\">\n\n                                    {this.state.title}\n                                </Typography>\n                            </div>\n                        </div>\n                        <div className={classes.langPairButtons}>\n                            {this.state.currentPage === 1 && this.fetchLanuagePairButtons()}\n                        </div>\n                        <Paper elevation={3} className={classes.paper}>\n\n                            <ResponsiveContainer width=\"95%\" height={450}>\n                                <BarChart width={900} height={450} data={this.state.dataSetValues} maxBarSize={100} >\n                                    <XAxis dataKey=\"label\"\n                                        textAnchor={isMobile ? \"end\" : \"middle\"}\n                                        tick={{ angle: isMobile ? -60 : 0 }} height={isMobile ? 100 : 60}\n                                        interval={0}\n                                        position=\"insideLeft\"\n\n                                    />\n                                    <YAxis type=\"number\" dx={0} />\n                                    <CartesianGrid horizontal={true} vertical={false} textAnchor={\"middle\"} />\n\n                                    <Tooltip />\n                                    <Bar dataKey=\"value\" radius={[4, 4, 0, 0]} maxBarSize={30} onClick={(event) => { this.handleOnClick(this.state.currentPage + 1, event) }} className={this.state.currentPage !== 2 && classes.cursor}>\n\n                                        {\n                                            this.state.dataSetValues.length > 0 && this.state.dataSetValues.map((entry, index) => {\n                                                const color = colors[index < 9 ? index : index % 10]\n                                                return <Cell key={index} fill={`#${color}`} />;\n                                            })\n                                        }\n                                    </Bar>\n                                </BarChart>\n                            </ResponsiveContainer>\n\n                        </Paper>\n                    </div>\n                </Container>\n    )\n   \n\n}\n\n\n\nexport default withStyles(ChartStyles)(ChartRender);\n"]},"metadata":{},"sourceType":"module"}