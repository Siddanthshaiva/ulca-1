{"ast":null,"code":"var _jsxFileName = \"/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/FilterList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DataSet from \"../../../styles/Dataset\";\nimport { withStyles, MuiThemeProvider, makeStyles, Button, Divider, Grid, Typography, Popover, FormGroup, Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterList = props => {\n  _s();\n\n  const classes = props;\n  const [anchorEl, setAnchorEl] = React.useState(null); // const handleChange = (event) => {\n  //     setState({ ...state, [event.target.name]: event.target.checked });\n  // };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  const data = {\n    datasetType: [{\n      name: 'Parallel',\n      state: true\n    }, {\n      name: 'Monolingual',\n      state: true\n    }, {\n      name: 'ASR',\n      state: true\n    }, {\n      name: 'OCR',\n      state: false\n    }],\n    status: [{\n      name: 'Pending',\n      state: true\n    }, {\n      name: 'In-Progress',\n      state: true\n    }, {\n      name: 'Completed',\n      state: true\n    }, {\n      name: 'Failed',\n      state: false\n    }]\n  };\n  const count = 0; //  const {data, handleDatasetChange, handleStatusChange, clearAll, apply, count} = props\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"aria-describedby\": id,\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClick,\n      style: {\n        float: 'right'\n      },\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover // style={{ width: '399px', minHeight: '246px' }}\n    , {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button // onClick={clearAll}\n      , {\n        color: \"primary\",\n        size: \"small\",\n        style: {\n          float: \"right\",\n          margin: '9px 16px 0px auto',\n          padding: '0'\n        },\n        children: \" Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          borderBottom: '1px solid #00000029',\n          paddingLeft: '18.5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          sm: 5,\n          md: 5,\n          lg: 5,\n          xl: 5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginBottom: '9px'\n            },\n            children: \"Dataset Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: data.datasetType.map(type => {\n              return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: type.state //  onChange={(e)=>handleDatasetChange(event.target.name)}\n                  ,\n                  name: type.name,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 45\n                }, this),\n                label: type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          sm: 1,\n          md: 1,\n          lg: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Divider, {\n            orientation: \"vertical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginBottom: '9px'\n            },\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: data.status.map(type => {\n              return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: type.state //   onChange={(e)=>handleStatusChange(event.target.name)}\n                  ,\n                  name: type.name,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this),\n                label: type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: count ? false : true //  onClick={apply}\n        ,\n        color: \"primary\",\n        size: \"small\",\n        variant: \"contained\",\n        style: {\n          float: \"right\",\n          margin: '5px',\n          borderRadius: '4px',\n          margin: '9px 16px 9px auto'\n        },\n        children: \" Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilterList, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = FilterList;\nexport default withStyles(DataSet)(FilterList);\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterList\");","map":{"version":3,"sources":["/home/sajish/Documents/Sajish/ULCA/ULCA/frontend/webapp/src/ui/container/DataSet/DatasetView/FilterList.jsx"],"names":["React","DataSet","withStyles","MuiThemeProvider","makeStyles","Button","Divider","Grid","Typography","Popover","FormGroup","Checkbox","FormControlLabel","FilterList","props","classes","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","data","datasetType","name","state","status","count","float","vertical","horizontal","margin","padding","borderBottom","paddingLeft","marginBottom","map","type","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DataSet from \"../../../styles/Dataset\";\nimport { withStyles, MuiThemeProvider, makeStyles, Button, Divider, Grid, Typography, Popover, FormGroup, Checkbox, FormControlLabel } from \"@material-ui/core\";\n\nconst FilterList = (props) => {\n    const classes = props;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    // const handleChange = (event) => {\n    //     setState({ ...state, [event.target.name]: event.target.checked });\n    // };\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const data = {\n        datasetType: [{ name: 'Parallel', state: true }, { name: 'Monolingual', state: true }, { name: 'ASR', state: true }, { name: 'OCR', state: false }],\n        status: [{ name: 'Pending', state: true }, { name: 'In-Progress', state: true }, { name: 'Completed', state: true }, { name: 'Failed', state: false }]\n    };\n    const count = 0\n    //  const {data, handleDatasetChange, handleStatusChange, clearAll, apply, count} = props\n\n\n    return (\n        <div>\n            <Button aria-describedby={id} variant=\"outlined\" color=\"primary\" onClick={handleClick} style={{ float: 'right' }}>\n                Filter\n      </Button>\n            <Popover\n                // style={{ width: '399px', minHeight: '246px' }}\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <Button\n                    // onClick={clearAll}\n                    color=\"primary\" size=\"small\" style={{ float: \"right\", margin: '9px 16px 0px auto', padding: '0' }}> Clear All\n                </Button>\n                <Grid container style={{ borderBottom: '1px solid #00000029', paddingLeft: '18.5px' }}>\n                    <Grid item xs={5} sm={5} md={5} lg={5} xl={5}>\n                        <Typography style={{ marginBottom: '9px' }}>Dataset Type</Typography>\n                        <FormGroup>\n                            {data.datasetType.map((type) => {\n                                return (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={type.state}\n                                                //  onChange={(e)=>handleDatasetChange(event.target.name)}\n                                                name={type.name}\n                                                color=\"primary\"\n                                            />\n                                        }\n                                        label={type.name}\n                                    />)\n                            })}\n                        </FormGroup>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={1} lg={1} xl={1}>\n                        <Divider orientation=\"vertical\"></Divider>\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\n                        <Typography style={{ marginBottom: '9px' }}>Status</Typography>\n                        <FormGroup>\n                            {data.status.map((type) => {\n                                return (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={type.state}\n                                                //   onChange={(e)=>handleStatusChange(event.target.name)}\n                                                name={type.name}\n                                                color=\"primary\"\n                                            />\n                                        }\n                                        label={type.name}\n                                    />)\n                            })}\n                        </FormGroup>\n                    </Grid>\n                </Grid>\n                <Button\n                    disabled={count ? false : true}\n                    //  onClick={apply}\n                    color=\"primary\" size=\"small\" variant=\"contained\" style={{ float: \"right\", margin: '5px', borderRadius: '4px', margin: '9px 16px 9px auto' }}> Apply\n                </Button>\n\n            </Popover>\n        </div >\n    );\n}\nexport default withStyles(DataSet)(FilterList);"]},"metadata":{},"sourceType":"module"}