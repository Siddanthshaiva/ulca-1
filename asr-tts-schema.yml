openapi: 3.0.0
info:
  version: 0.5.0
  title: ASR and TTS API and schema definitions
  description: >-
    Contributor developing models under ASR, TSS task, should implement following schema and API contract for their end point. This will enable ULCA to make inference callback for benchmark and try me functionalities.
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
    
paths: {}

components:
  securitySchemes:
      authToken:
        type: apiKey
        description: token issued by authenticating the user
        name: auth-token
        in: header
  
  schemas:
  
    ASRRequest:
      type: object
      required:
        - fileId
      properties:
        fileId:
          type: string
          description: fileId should be same as returned in the response of file-upload
        language:
          description: indicate only sourceLanguage key with respective ISO code.
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/LanguagePair'
        format:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/AudioFormat'
        channel:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/AudioChannel'
        samplingRate:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/AudioSampleRate'
        bitsPerSample:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/AudioBitsPerSample'
        numberOfSpeakers:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/common-schemas.yml#/components/schemas/NumberOfSpeakers'
    
    ASRResponse:
      type: object
      properties:
        fileId:
          type: string
          description: fileId should be same as returned in the response of file-upload
        alternatives:
          $ref: '#/components/schemas/Alternatives'
    
    Alternative:
      type: object
      properties:
        word:
          type: string
          description: word detected
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
    
    Alternatives:
      type: array
      items:
        $ref: '#/components/schemas/Alternative'
        minItems: 1
